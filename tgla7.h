//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#pragma mark Function Pointers and Blocks

typedef void (*CDUnknownFunctionPointerType)(void); // return type and parameters are unknown

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct CGAffineTransform {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    double _field6;
};

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct CGVector {
    double dx;
    double dy;
};

struct FIRReachabilityApi {
    CDUnknownFunctionPointerType _field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
    CDUnknownFunctionPointerType _field4;
    CDUnknownFunctionPointerType _field5;
};

struct GADAdSize {
    struct CGSize size;
    unsigned long long flags;
};

struct GAIReachabilityApi {
    CDUnknownFunctionPointerType _field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
    CDUnknownFunctionPointerType _field4;
    CDUnknownFunctionPointerType _field5;
};

struct GPBCodedInputStreamState {
    char *bytes;
    unsigned long long bufferSize;
    unsigned long long bufferPos;
    unsigned long long currentLimit;
    int lastTag;
    unsigned long long recursionDepth;
};

struct GPBExtensionDescription {
    CDUnion_88782d86 _field1;
    char *_field2;
    char *_field3;
    char *_field4;
    CDUnknownFunctionPointerType _field5;
    int _field6;
    unsigned char _field7;
    unsigned char _field8;
};

struct GPBExtensionRange {
    unsigned int _field1;
    unsigned int _field2;
};

struct GPBMessageFieldDescription {
    char *_field1;
    union {
        char *_field1;
        CDUnknownFunctionPointerType _field2;
        CDUnknownFunctionPointerType _field3;
    } _field2;
    unsigned int _field3;
    int _field4;
    unsigned int _field5;
    unsigned short _field6;
    unsigned char _field7;
};

struct GPBMessage_Storage {
    unsigned int _field1[0];
};

struct GPBOutputBufferState {
    char *bytes;
    unsigned long long size;
    unsigned long long position;
    NSOutputStream *output;
};

struct TAGPBExtensionDescription {
    char *_field1;
    int _field2;
    char *_field3;
    int _field4;
    CDUnion_3de46016 _field5;
    char *_field6;
    unsigned int _field7;
    char *_field8;
};

struct TAGPBInputBufferState {
    char *bytes;
    unsigned long long bufferSize;
    unsigned long long bufferPos;
    unsigned long long currentLimit;
};

struct TAGPBMessageEnumDescription {
    char *_field1;
};

struct TAGPBMessageEnumValueDescription {
    char *_field1;
    int _field2;
};

struct TAGPBMessageExtensionRangeDescription {
    unsigned int _field1;
    unsigned int _field2;
};

struct TAGPBMessageFieldDescription {
    char *_field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    int _field5;
    unsigned long long _field6;
    char *_field7;
    CDUnion_3de46016 _field8;
    union {
        char *_field1;
        CDUnknownFunctionPointerType _field2;
    } _field9;
};

struct TAGPBOutputBufferState {
    char *bytes;
    unsigned long long size;
    unsigned long long position;
    NSOutputStream *output;
};

struct _NSRange {
    unsigned long long _field1;
    unsigned long long _field2;
};

struct sockaddr {
    unsigned char _field1;
    unsigned char _field2;
    char _field3[14];
};

#pragma mark Typedef'd Structures

typedef struct {
    _Bool _field1;
    _Bool _field2;
    _Bool _field3;
    _Bool _field4;
    _Bool _field5;
    _Bool _field6;
    _Bool _field7;
    _Bool _field8;
} CDStruct_90d8b0f6;

typedef struct {
    unsigned long long _field1;
    id *_field2;
    unsigned long long *_field3;
    unsigned long long _field4[5];
} CDStruct_70511ce9;

typedef struct {
    void **_field1;
    int *_field2;
    char *_field3;
} CDStruct_e1a27b1c;

typedef struct {
    void *bytes;
    unsigned long long bufferSize;
    unsigned long long bufferPos;
} CDStruct_9d607ac6;

typedef struct {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    double _field5;
    double _field6;
    double _field7;
    double _field8;
    double _field9;
} CDStruct_27b5ccfc;

typedef struct {
    long long _field1;
    int _field2;
    unsigned int _field3;
    long long _field4;
} CDStruct_198678f7;

typedef struct {
    long long majorVersion;
    long long minorVersion;
    long long patchVersion;
} CDStruct_f6aba300;

#pragma mark Named Unions

union _GLKMatrix4 {
    struct {
        float m00;
        float m01;
        float m02;
        float m03;
        float m10;
        float m11;
        float m12;
        float m13;
        float m20;
        float m21;
        float m22;
        float m23;
        float m30;
        float m31;
        float m32;
        float m33;
    } ;
    float m[16];
};

#pragma mark Typedef'd Unions

typedef union {
    _Bool valueBool;
    unsigned int valueFixed32;
    int valueSFixed32;
    float valueFloat;
    unsigned long long valueFixed64;
    long long valueSFixed64;
    double valueDouble;
    int valueInt32;
    long long valueInt64;
    int valueSInt32;
    long long valueSInt64;
    unsigned int valueUInt32;
    unsigned long long valueUInt64;
    NSData *valueData;
    NSString *valueString;
    TAGPBGeneratedMessage *valueMessage;
    TAGPBGeneratedMessage *valueGroup;
    int valueEnum;
    TAGPBArray *valueArray;
    id valueObject;
} CDUnion_3de46016;

typedef union {
    _Bool valueBool;
    int valueInt32;
    long long valueInt64;
    unsigned int valueUInt32;
    unsigned long long valueUInt64;
    float valueFloat;
    double valueDouble;
    NSData *valueData;
    NSString *valueString;
    GPBMessage *valueMessage;
    int valueEnum;
} CDUnion_88782d86;

#pragma mark -

//
// File: /Users/joe/Downloads/Payload 3/TGLA7.app/TGLA7
// UUID: 4FA4ABEE-3C69-31B0-9EC7-E7FC9FB1E44A
//
//                           Arch: arm64
//                 Source version: 0.0.0.0.0
//            Minimum iOS version: 9.0.0
//                    SDK version: 11.2.0
//
// Objective-C Garbage Collection: Unsupported
//
//                       Run path: @executable_path/Frameworks
//                               = /Users/joe/Downloads/Payload 3/TGLA7.app/Frameworks
//

@protocol AVAssetResourceLoaderDelegate <NSObject>

@optional
- (void)resourceLoader:(AVAssetResourceLoader *)arg1 didCancelAuthenticationChallenge:(NSURLAuthenticationChallenge *)arg2;
- (_Bool)resourceLoader:(AVAssetResourceLoader *)arg1 shouldWaitForResponseToAuthenticationChallenge:(NSURLAuthenticationChallenge *)arg2;
- (void)resourceLoader:(AVAssetResourceLoader *)arg1 didCancelLoadingRequest:(AVAssetResourceLoadingRequest *)arg2;
- (_Bool)resourceLoader:(AVAssetResourceLoader *)arg1 shouldWaitForRenewalOfRequestedResource:(AVAssetResourceRenewalRequest *)arg2;
- (_Bool)resourceLoader:(AVAssetResourceLoader *)arg1 shouldWaitForLoadingOfRequestedResource:(AVAssetResourceLoadingRequest *)arg2;
@end

@protocol CDVCommandDelegate <NSObject>
@property(copy, nonatomic) CDUnknownBlockType urlTransformer;
@property(readonly, nonatomic) NSDictionary *settings;
- (NSString *)userAgent;
- (void)runInBackground:(void (^)(void))arg1;
- (void)evalJs:(NSString *)arg1 scheduledOnRunLoop:(_Bool)arg2;
- (void)evalJs:(NSString *)arg1;
- (void)sendPluginResult:(CDVPluginResult *)arg1 callbackId:(NSString *)arg2;
- (id)getCommandInstance:(NSString *)arg1;
- (NSString *)pathForResource:(NSString *)arg1;
@end

@protocol CDVScreenOrientationDelegate <NSObject>
- (_Bool)shouldAutorotate;
- (_Bool)shouldAutorotateToInterfaceOrientation:(long long)arg1;
- (unsigned long long)supportedInterfaceOrientations;
@end

@protocol CDVWebViewEngineProtocol <NSObject>
@property(readonly, nonatomic) UIView *engineWebView;
- (void)updateWithInfo:(NSDictionary *)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (_Bool)canLoadRequest:(NSURLRequest *)arg1;
- (NSURL *)URL;
- (void)evaluateJavaScript:(NSString *)arg1 completionHandler:(void (^)(id, NSError *))arg2;
- (id)loadHTMLString:(NSString *)arg1 baseURL:(NSURL *)arg2;
- (id)loadRequest:(NSURLRequest *)arg1;
@end

@protocol CLLocationManagerDelegate <NSObject>

@optional
- (void)locationManager:(CLLocationManager *)arg1 didVisit:(CLVisit *)arg2;
- (void)locationManager:(CLLocationManager *)arg1 didFinishDeferredUpdatesWithError:(NSError *)arg2;
- (void)locationManagerDidResumeLocationUpdates:(CLLocationManager *)arg1;
- (void)locationManagerDidPauseLocationUpdates:(CLLocationManager *)arg1;
- (void)locationManager:(CLLocationManager *)arg1 didStartMonitoringForRegion:(CLRegion *)arg2;
- (void)locationManager:(CLLocationManager *)arg1 didChangeAuthorizationStatus:(int)arg2;
- (void)locationManager:(CLLocationManager *)arg1 monitoringDidFailForRegion:(CLRegion *)arg2 withError:(NSError *)arg3;
- (void)locationManager:(CLLocationManager *)arg1 didFailWithError:(NSError *)arg2;
- (void)locationManager:(CLLocationManager *)arg1 didExitRegion:(CLRegion *)arg2;
- (void)locationManager:(CLLocationManager *)arg1 didEnterRegion:(CLRegion *)arg2;
- (void)locationManager:(CLLocationManager *)arg1 rangingBeaconsDidFailForRegion:(CLBeaconRegion *)arg2 withError:(NSError *)arg3;
- (void)locationManager:(CLLocationManager *)arg1 didRangeBeacons:(NSArray *)arg2 inRegion:(CLBeaconRegion *)arg3;
- (void)locationManager:(CLLocationManager *)arg1 didDetermineState:(long long)arg2 forRegion:(CLRegion *)arg3;
- (_Bool)locationManagerShouldDisplayHeadingCalibration:(CLLocationManager *)arg1;
- (void)locationManager:(CLLocationManager *)arg1 didUpdateHeading:(CLHeading *)arg2;
- (void)locationManager:(CLLocationManager *)arg1 didUpdateLocations:(NSArray *)arg2;
- (void)locationManager:(CLLocationManager *)arg1 didUpdateToLocation:(CLLocation *)arg2 fromLocation:(CLLocation *)arg3;
@end

@protocol DFPBannerAdLoaderDelegate <GADAdLoaderDelegate>
- (void)adLoader:(GADAdLoader *)arg1 didReceiveDFPBannerView:(DFPBannerView *)arg2;
- (NSArray *)validBannerSizesForAdLoader:(GADAdLoader *)arg1;
@end

@protocol DFPCustomRenderedAdEventHandler <NSObject>
- (void)finishedRenderingAdView:(UIView *)arg1;
- (void)recordCustomAdImpression;
- (void)recordClick;
@end

@protocol DFPCustomRenderedBannerViewDelegate <NSObject>
- (void)bannerView:(DFPBannerView *)arg1 didReceiveCustomRenderedAd:(DFPCustomRenderedAd *)arg2;
@end

@protocol DFPCustomRenderedInterstitialDelegate <NSObject>
- (void)interstitial:(DFPInterstitial *)arg1 didReceiveCustomRenderedAd:(DFPCustomRenderedAd *)arg2;
@end

@protocol FIRALogging <NSObject>
- (void)logMessage:(NSString *)arg1 messageCode:(long long)arg2 withLogLevel:(long long)arg3;
@end

@protocol FIRInstanceIDKeyPairStoreDelegate <NSObject>
- (void)keyPairStoreDidDeleteKeyPair:(FIRInstanceIDKeyPairStore *)arg1;
@end

@protocol FIRInstanceIDStoreDelegate <NSObject>
- (void)store:(FIRInstanceIDStore *)arg1 didDeleteFCMScopedTokensForCheckin:(FIRInstanceIDCheckinPreferences *)arg2;
@end

@protocol FIRMessagingClientDelegate <NSObject>
@end

@protocol FIRMessagingConnectionDelegate <NSObject>
- (int)connectionDidReceiveAckForRmqIds:(NSArray *)arg1;
- (void)connectionDidRecieveMessage:(GtalkDataMessageStanza *)arg1;
- (void)didLoginWithConnection:(FIRMessagingConnection *)arg1;
- (void)connection:(FIRMessagingConnection *)arg1 didCloseForReason:(unsigned long long)arg2;
@end

@protocol FIRMessagingDataMessageManagerDelegate <NSObject>
- (void)didDeleteMessagesOnServer;
- (void)didSendDataMessageWithID:(NSString *)arg1;
- (void)willSendDataMessageWithID:(NSString *)arg1 error:(NSError *)arg2;
- (void)didReceiveMessage:(NSDictionary *)arg1 withIdentifier:(NSString *)arg2;
@end

@protocol FIRMessagingPendingTopicsListDelegate <NSObject>
- (_Bool)pendingTopicsListCanRequestTopicUpdates:(FIRMessagingPendingTopicsList *)arg1;
- (void)pendingTopicsListDidUpdate:(FIRMessagingPendingTopicsList *)arg1;
- (void)pendingTopicsList:(FIRMessagingPendingTopicsList *)arg1 requestedUpdateForTopic:(NSString *)arg2 action:(long long)arg3 completion:(void (^)(long long, NSError *))arg4;
@end

@protocol FIRMessagingReceiverDelegate <NSObject>
- (void)receiver:(FIRMessagingReceiver *)arg1 receivedRemoteMessage:(FIRMessagingRemoteMessage *)arg2;
@end

@protocol FIRMessagingRmqScanner <NSObject>
- (void)scanWithRmqMessageHandler:(void (^)(long long, BOOL, NSData *))arg1 dataMessageHandler:(void (^)(long long, GtalkDataMessageStanza *))arg2;
@end

@protocol FIRMessagingSecureSocketDelegate <NSObject>
- (void)didDisconnectWithSecureSocket:(FIRMessagingSecureSocket *)arg1;
- (void)secureSocketDidConnect:(FIRMessagingSecureSocket *)arg1;
- (void)secureSocket:(FIRMessagingSecureSocket *)arg1 didSendProtoWithTag:(BOOL)arg2 rmqId:(NSString *)arg3;
- (void)secureSocket:(FIRMessagingSecureSocket *)arg1 didReceiveData:(NSData *)arg2 withTag:(BOOL)arg3;
@end

@protocol FIRNetworkLoggerDelegate <NSObject>
- (void)firNetwork_logWithLevel:(long long)arg1 messageCode:(long long)arg2 message:(NSString *)arg3;
- (void)firNetwork_logWithLevel:(long long)arg1 messageCode:(long long)arg2 message:(NSString *)arg3 context:(id)arg4;
- (void)firNetwork_logWithLevel:(long long)arg1 messageCode:(long long)arg2 message:(NSString *)arg3 contexts:(NSArray *)arg4;
@end

@protocol FIRNetworkReachabilityDelegate
- (void)reachabilityDidChange;
@end

@protocol FIRReachabilityDelegate
- (void)reachability:(FIRReachabilityChecker *)arg1 statusChanged:(int)arg2;
@end

@protocol GADActiveViewGMSGHandlerDelegate
- (void)activeViewGMSGHandler:(GADActiveViewGMSGHandler *)arg1 didReceiveUntrackNotificationForActiveViewID:(unsigned long long)arg2;
- (void)activeViewGMSGHandler:(GADActiveViewGMSGHandler *)arg1 didReceiveVisibilityNotification:(_Bool)arg2 forActiveViewID:(unsigned long long)arg3;
@end

@protocol GADActiveViewMonitorDelegate <NSObject>
- (void)activeViewMonitorDidRefresh:(GADActiveViewMonitor *)arg1;
@end

@protocol GADAdFetcherDelegate <NSObject>
- (void)adFetcher:(GADAdFetcher *)arg1 didFailToFetchAd:(GADAd *)arg2 withError:(NSError *)arg3 responseCode:(unsigned long long)arg4;
- (void)adFetcher:(GADAdFetcher *)arg1 didFetchAd:(GADAd *)arg2;
@end

@protocol GADAdLoaderDelegate <NSObject>
- (void)adLoader:(GADAdLoader *)arg1 didFailToReceiveAdWithError:(GADRequestError *)arg2;

@optional
- (void)adLoaderDidFinishLoading:(GADAdLoader *)arg1;
@end

@protocol GADAdMediationDelegate <NSObject>
- (GADMAdNetworkConnector *)mediationConnectorForConfiguration:(GADMConfig *)arg1 networkConfiguration:(GADMAdNetworkConfig *)arg2;

@optional
- (void)ad:(GADAd *)arg1 processMediatedAd:(GADMediatedAd *)arg2 withCompletionHandler:(void (^)(NSError *))arg3;
- (GADAdLoaderConfiguration *)adLoaderConfigurationForAd:(GADAd *)arg1 networkConfiguration:(GADMAdNetworkConfig *)arg2;
@end

@protocol GADAdNetworkExtras <NSObject>
@end

@protocol GADAdViewActiveViewMonitoring <NSObject>
- (void)activeViewMonitoringDidStop:(unsigned long long)arg1;
- (_Bool)activeViewMonitoringStarted:(unsigned long long)arg1;
- (void)activeViewVisibilityChanged:(_Bool)arg1;
@end

@protocol GADAdViewDelegate <GADCSIGMSGHandlerDelegate>
- (void)adViewWebProcessDidTerminate:(GADAdView *)arg1;

@optional
- (void)adView:(GADAdView *)arg1 didReceiveUnconfirmedClickWithClickInfo:(NSDictionary *)arg2;
- (void)adViewDidRecordClick:(GADAdView *)arg1;
- (void)adViewDidRecordImpression:(GADAdView *)arg1;
- (void)adView:(GADAdView *)arg1 didLoadVideoWithSize:(struct CGSize)arg2;
- (void)adView:(GADAdView *)arg1 contentSizeDidChange:(struct CGSize)arg2;
- (void)adView:(GADAdView *)arg1 didMoveToPlacement:(id)arg2;
- (void)adView:(GADAdView *)arg1 didFailLoadWithError:(NSError *)arg2;
- (void)adViewDidFinishLoad:(GADAdView *)arg1;
- (void)adViewDidStartLoad:(GADAdView *)arg1;
- (_Bool)adView:(GADAdView *)arg1 shouldStartLoadWithRequest:(NSURLRequest *)arg2 navigationType:(long long)arg3;
@end

@protocol GADAdViewVideoControllerDelegate <NSObject>
- (void)adViewVideoControllerDidUnmuteVideo:(GADAdViewVideoController *)arg1;
- (void)adViewVideoControllerDidMuteVideo:(GADAdViewVideoController *)arg1;
- (void)adViewVideoControllerDidEndVideoPlayback:(GADAdViewVideoController *)arg1;
- (void)adViewVideoControllerDidPauseVideo:(GADAdViewVideoController *)arg1;
- (void)adViewVideoControllerDidPlayVideo:(GADAdViewVideoController *)arg1;
@end

@protocol GADAppEventDelegate <NSObject>

@optional
- (void)interstitial:(GADInterstitial *)arg1 didReceiveAppEvent:(NSString *)arg2 withInfo:(NSString *)arg3;
- (void)adView:(GADBannerView *)arg1 didReceiveAppEvent:(NSString *)arg2 withInfo:(NSString *)arg3;
@end

@protocol GADBannerViewDelegate <NSObject>

@optional
- (void)adViewWillLeaveApplication:(GADBannerView *)arg1;
- (void)adViewDidDismissScreen:(GADBannerView *)arg1;
- (void)adViewWillDismissScreen:(GADBannerView *)arg1;
- (void)adViewWillPresentScreen:(GADBannerView *)arg1;
- (void)adView:(GADBannerView *)arg1 didFailToReceiveAdWithError:(GADRequestError *)arg2;
- (void)adViewDidReceiveAd:(GADBannerView *)arg1;
@end

@protocol GADCSIGMSGHandlerDelegate <NSObject>

@optional
- (GADCSI *)CSIForGMSGHandler:(GADGMSGHandler *)arg1;
@end

@protocol GADClearcutCommandExecuting <NSObject>
- (void)asynchronouslyExecuteCommands:(NSArray *)arg1;
- (_Bool)isLoaded;
@end

@protocol GADClickTrackerDelegate <NSObject>
- (void)trackerDidFinishTracking:(GADClickTracker *)arg1;
@end

@protocol GADConfigurationDelegate <NSObject>
- (void)configurationDidUpdate:(GADConfiguration *)arg1;
@end

@protocol GADCustomEventBanner <NSObject>
@property(nonatomic) __weak id <GADCustomEventBannerDelegate> delegate;
- (void)requestBannerAd:(struct GADAdSize)arg1 parameter:(NSString *)arg2 label:(NSString *)arg3 request:(GADCustomEventRequest *)arg4;
@end

@protocol GADCustomEventBannerDelegate <NSObject>
@property(readonly, nonatomic) UIViewController *viewControllerForPresentingModalView;
- (void)customEventBanner:(id <GADCustomEventBanner>)arg1 clickDidOccurInAd:(UIView *)arg2;
- (void)customEventBannerWillLeaveApplication:(id <GADCustomEventBanner>)arg1;
- (void)customEventBannerDidDismissModal:(id <GADCustomEventBanner>)arg1;
- (void)customEventBannerWillDismissModal:(id <GADCustomEventBanner>)arg1;
- (void)customEventBannerWillPresentModal:(id <GADCustomEventBanner>)arg1;
- (void)customEventBannerWasClicked:(id <GADCustomEventBanner>)arg1;
- (void)customEventBanner:(id <GADCustomEventBanner>)arg1 didFailAd:(NSError *)arg2;
- (void)customEventBanner:(id <GADCustomEventBanner>)arg1 didReceiveAd:(UIView *)arg2;
@end

@protocol GADCustomEventInterstitial <NSObject>
@property(nonatomic) __weak id <GADCustomEventInterstitialDelegate> delegate;
- (void)presentFromRootViewController:(UIViewController *)arg1;
- (void)requestInterstitialAdWithParameter:(NSString *)arg1 label:(NSString *)arg2 request:(GADCustomEventRequest *)arg3;
@end

@protocol GADCustomEventInterstitialDelegate <NSObject>
- (void)customEventInterstitial:(id <GADCustomEventInterstitial>)arg1 didReceiveAd:(NSObject *)arg2;
- (void)customEventInterstitialWillLeaveApplication:(id <GADCustomEventInterstitial>)arg1;
- (void)customEventInterstitialDidDismiss:(id <GADCustomEventInterstitial>)arg1;
- (void)customEventInterstitialWillDismiss:(id <GADCustomEventInterstitial>)arg1;
- (void)customEventInterstitialWillPresent:(id <GADCustomEventInterstitial>)arg1;
- (void)customEventInterstitialWasClicked:(id <GADCustomEventInterstitial>)arg1;
- (void)customEventInterstitial:(id <GADCustomEventInterstitial>)arg1 didFailAd:(NSError *)arg2;
- (void)customEventInterstitialDidReceiveAd:(id <GADCustomEventInterstitial>)arg1;
@end

@protocol GADCustomEventNativeAdDelegate <NSObject>
- (void)customEventNativeAd:(id <GADCustomEventNativeAd>)arg1 didReceiveMediatedUnifiedNativeAd:(id <GADMediatedUnifiedNativeAd>)arg2;
- (void)customEventNativeAd:(id <GADCustomEventNativeAd>)arg1 didFailToLoadWithError:(NSError *)arg2;
- (void)customEventNativeAd:(id <GADCustomEventNativeAd>)arg1 didReceiveMediatedNativeAd:(id <GADMediatedNativeAd>)arg2;
@end

@protocol GADDelayLoadDelegate <NSObject>
- (void)loadHandlerDidChangeDelay:(GADDelayPageLoadGMSGHandler *)arg1 from:(long long)arg2 to:(long long)arg3;
- (void)loadHandlerDidCancel:(GADDelayPageLoadGMSGHandler *)arg1;
@end

@protocol GADDynamicHeightSearchBannerViewDelegate <NSObject>
- (void)bannerView:(GADDynamicHeightSearchBannerView *)arg1 didReceiveLandingPageURL:(NSURL *)arg2;
- (void)bannerView:(GADDynamicHeightSearchBannerView *)arg1 didFailToReceiveAdWithError:(NSError *)arg2;
- (void)bannerView:(GADDynamicHeightSearchBannerView *)arg1 didUpdateDesiredContentSize:(struct CGSize)arg2;
- (void)bannerViewDidReceiveAd:(GADDynamicHeightSearchBannerView *)arg1;
@end

@protocol GADImpressionMonitorDelegate <NSObject>
- (void)impressionMonitorDidMonitorImpression:(GADImpressionMonitor *)arg1;
@end

@protocol GADIntermitting <NSObject>
@property(readonly, nonatomic) GADIntermission *intermission;
- (void)relinquishScreenWithCompletion:(void (^)(void))arg1;
- (_Bool)shouldDismissOnApplicationEnteringForeground;
- (void)presentFromViewController:(UIViewController *)arg1 completion:(void (^)(void))arg2;
@end

@protocol GADInterstitialAdClickDelegate <NSObject>

@optional
- (void)interstitialDidReceiveAdClick:(GADInterstitial *)arg1;
@end

@protocol GADInterstitialDelegate <NSObject>

@optional
- (void)interstitialWillLeaveApplication:(GADInterstitial *)arg1;
- (void)interstitialDidDismissScreen:(GADInterstitial *)arg1;
- (void)interstitialWillDismissScreen:(GADInterstitial *)arg1;
- (void)interstitialDidFailToPresentScreen:(GADInterstitial *)arg1;
- (void)interstitialWillPresentScreen:(GADInterstitial *)arg1;
- (void)interstitial:(GADInterstitial *)arg1 didFailToReceiveAdWithError:(GADRequestError *)arg2;
- (void)interstitialDidReceiveAd:(GADInterstitial *)arg1;
@end

@protocol GADInterstitialPoolDelegate <NSObject>

@optional
- (void)interstitialPoolDidRemoveEntry:(GADInterstitialPool *)arg1;
- (void)interstitialPoolDidAddEntry:(GADInterstitialPool *)arg1;
@end

@protocol GADInterstitialPoolRefilling <GADInterstitialPoolDelegate>
- (void)addPool:(GADInterstitialPool *)arg1;
@end

@protocol GADInterstitialRewardBasedVideoAdDelegate <NSObject>
- (void)interstitial:(GADInterstitial *)arg1 didChangeAdMetadata:(NSString *)arg2 withInfo:(NSString *)arg3;
- (void)interstitial:(GADInterstitial *)arg1 didRewardUserWithReward:(GADAdReward *)arg2;
- (void)interstitialDidCompletePlayingRewardBasedVideoAd:(GADInterstitial *)arg1;
- (void)interstitialDidStartPlayingRewardBasedVideoAd:(GADInterstitial *)arg1;
@end

@protocol GADLoadable <NSObject>
+ (GADMAdNetworkConnector *)mediationConnectorForConfiguration:(GADMConfig *)arg1 networkConfiguration:(GADMAdNetworkConfig *)arg2;
+ (_Bool)canInitWithAdLoader:(GADAdLoader *)arg1 error:(id *)arg2;
+ (NSDictionary *)requestParametersForAdLoader:(GADAdLoader *)arg1;
+ (Protocol *)requiredDelegateProtocol;
- (void)adLoaderDidReceiveAd:(GADAdLoader *)arg1;
- (void)loadAssetsWithCompletionHandler:(void (^)(NSError *))arg1;
@end

@protocol GADMAdNetworkAdapter <NSObject>
+ (Class)networkExtrasClass;
+ (NSString *)adapterVersion;
- (void)presentInterstitialFromRootViewController:(UIViewController *)arg1;
- (_Bool)isBannerAnimationOK:(long long)arg1;
- (void)stopBeingDelegate;
- (void)getInterstitial;
- (void)getBannerWithSize:(struct GADAdSize)arg1;
- (id)initWithGADMAdNetworkConnector:(id <GADMAdNetworkConnector>)arg1;

@optional
- (void)changeAdSizeTo:(struct GADAdSize)arg1;
- (_Bool)handlesUserImpressions;
- (_Bool)handlesUserClicks;
- (void)getNativeAdWithAdTypes:(NSArray *)arg1 options:(NSArray *)arg2;
@end

@protocol GADMAdNetworkConnector <GADMediationAdRequest>
- (void)adapter:(id <GADMAdNetworkAdapter>)arg1 didFailInterstitial:(NSError *)arg2;
- (void)adapter:(id <GADMAdNetworkAdapter>)arg1 clickDidOccurInBanner:(UIView *)arg2;
- (void)adapter:(id <GADMAdNetworkAdapter>)arg1 didReceiveInterstitial:(NSObject *)arg2;
- (void)adapterDidDismissInterstitial:(id <GADMAdNetworkAdapter>)arg1;
- (void)adapterWillDismissInterstitial:(id <GADMAdNetworkAdapter>)arg1;
- (void)adapterWillPresentInterstitial:(id <GADMAdNetworkAdapter>)arg1;
- (void)adapterDidDismissFullScreenModal:(id <GADMAdNetworkAdapter>)arg1;
- (void)adapterWillDismissFullScreenModal:(id <GADMAdNetworkAdapter>)arg1;
- (void)adapterWillPresentFullScreenModal:(id <GADMAdNetworkAdapter>)arg1;
- (void)adapterWillLeaveApplication:(id <GADMAdNetworkAdapter>)arg1;
- (void)adapterDidGetAdClick:(id <GADMAdNetworkAdapter>)arg1;
- (void)adapter:(id <GADMAdNetworkAdapter>)arg1 didReceiveMediatedUnifiedNativeAd:(id <GADMediatedUnifiedNativeAd>)arg2;
- (void)adapter:(id <GADMAdNetworkAdapter>)arg1 didReceiveMediatedNativeAd:(id <GADMediatedNativeAd>)arg2;
- (void)adapterDidReceiveInterstitial:(id <GADMAdNetworkAdapter>)arg1;
- (void)adapter:(id <GADMAdNetworkAdapter>)arg1 didReceiveAdView:(UIView *)arg2;
- (void)adapter:(id <GADMAdNetworkAdapter>)arg1 didFailAd:(NSError *)arg2;
- (_Bool)adMuted;
- (float)adVolume;
- (UIViewController *)viewControllerForPresentingModalView;
@end

@protocol GADMConnectorDelegate <NSObject>
- (_Bool)connectorShouldReturnMediatedAd:(GADMAdNetworkConnector *)arg1;
- (void)adRequestFailedFromConnector:(GADMAdNetworkConnector *)arg1 withError:(NSError *)arg2;
- (void)adRequestReturnsFromConnector:(GADMAdNetworkConnector *)arg1 withMediatedAd:(GADMediatedAd *)arg2;
- (void)adRequestReturnsFromConnector:(GADMAdNetworkConnector *)arg1 withInterstitial:(NSObject *)arg2;
- (void)adRequestReturnsFromConnector:(GADMAdNetworkConnector *)arg1 withView:(UIView *)arg2;
@end

@protocol GADMInternalAdNetworkConnector <GADMAdNetworkConnector>
@property(retain, nonatomic) GADMAdNetworkConfig *networkConfig;

@optional
- (void)adapter:(id <GADMAdNetworkAdapter>)arg1 didReceiveAppEvent:(NSString *)arg2 withInfo:(NSString *)arg3;
@end

@protocol GADMRAIDEventHandling <NSObject>
- (void)unloadAdView:(GADAdView *)arg1;
- (void)handleError:(NSString *)arg1 action:(NSString *)arg2;
- (void)notifyOrientationToMRAIDCreative;
- (void)updatePositionFromView:(UIView *)arg1;
- (void)updateVisibility:(_Bool)arg1;
- (void)MRAIDAdDidUnload;
- (void)MRAIDAdDidLoad;
@end

@protocol GADMRewardBasedVideoAdConnectorDelegate
- (void)connectorWillLeaveApplication:(GADMRewardBasedVideoAdNetworkConnector *)arg1;
- (void)connectorDidCloseRewardBasedVideoAd:(GADMRewardBasedVideoAdNetworkConnector *)arg1;
- (void)connectorDidCompletePlayingRewardBasedVideoAd:(GADMRewardBasedVideoAdNetworkConnector *)arg1;
- (void)connectorDidStartPlayingRewardBasedVideoAd:(GADMRewardBasedVideoAdNetworkConnector *)arg1;
- (void)connectorDidOpenRewardBasedVideoAd:(GADMRewardBasedVideoAdNetworkConnector *)arg1;
- (void)connector:(GADMRewardBasedVideoAdNetworkConnector *)arg1 didRewardUserWithReward:(GADAdReward *)arg2;
- (void)connectorDidReceiveClick:(GADMRewardBasedVideoAdNetworkConnector *)arg1;
- (void)connector:(GADMRewardBasedVideoAdNetworkConnector *)arg1 didFailToReceiveRewardBasedVideoAdWithError:(NSError *)arg2;
- (void)connectorDidReceiveRewardBasedVideoAd:(GADMRewardBasedVideoAdNetworkConnector *)arg1;
- (void)connector:(GADMRewardBasedVideoAdNetworkConnector *)arg1 didFailToSetUpRewardBasedVideoAdWithError:(NSError *)arg2;
- (void)connectorDidSetUpRewardBasedVideoAd:(GADMRewardBasedVideoAdNetworkConnector *)arg1;
@end

@protocol GADMRewardBasedVideoAdNetworkAdapter <NSObject>
+ (Class)networkExtrasClass;
+ (NSString *)adapterVersion;
- (void)stopBeingDelegate;
- (void)presentRewardBasedVideoAdWithRootViewController:(UIViewController *)arg1;
- (void)requestRewardBasedVideoAd;
- (void)setUp;
- (id)initWithRewardBasedVideoAdNetworkConnector:(id <GADMRewardBasedVideoAdNetworkConnector>)arg1;

@optional
- (void)setUpWithUserID:(NSString *)arg1;
- (id)initWithGADMAdNetworkConnector:(id <GADMRewardBasedVideoAdNetworkConnector>)arg1;
- (id)initWithRewardBasedVideoAdNetworkConnector:(id <GADMRewardBasedVideoAdNetworkConnector>)arg1 credentials:(NSArray *)arg2;
@end

@protocol GADMRewardBasedVideoAdNetworkConnector <GADMediationAdRequest>
- (void)adapter:(id <GADMRewardBasedVideoAdNetworkAdapter>)arg1 didFailToLoadRewardBasedVideoAdwithError:(NSError *)arg2;
- (void)adapterWillLeaveApplication:(id <GADMRewardBasedVideoAdNetworkAdapter>)arg1;
- (void)adapter:(id <GADMRewardBasedVideoAdNetworkAdapter>)arg1 didRewardUserWithReward:(GADAdReward *)arg2;
- (void)adapterDidCloseRewardBasedVideoAd:(id <GADMRewardBasedVideoAdNetworkAdapter>)arg1;
- (void)adapterDidCompletePlayingRewardBasedVideoAd:(id <GADMRewardBasedVideoAdNetworkAdapter>)arg1;
- (void)adapterDidStartPlayingRewardBasedVideoAd:(id <GADMRewardBasedVideoAdNetworkAdapter>)arg1;
- (void)adapterDidOpenRewardBasedVideoAd:(id <GADMRewardBasedVideoAdNetworkAdapter>)arg1;
- (void)adapterDidReceiveRewardBasedVideoAd:(id <GADMRewardBasedVideoAdNetworkAdapter>)arg1;
- (void)adapterDidGetAdClick:(id <GADMRewardBasedVideoAdNetworkAdapter>)arg1;
- (void)adapter:(id <GADMRewardBasedVideoAdNetworkAdapter>)arg1 didFailToSetUpRewardBasedVideoAdWithError:(NSError *)arg2;
- (void)adapterDidSetUpRewardBasedVideoAd:(id <GADMRewardBasedVideoAdNetworkAdapter>)arg1;
@end

@protocol GADMSlotDelegate <NSObject>
- (void)presentInterstitialFromRootViewController:(UIViewController *)arg1;
- (_Bool)changeAdTypeTo:(GADAdType *)arg1;
- (void)mediateForAdType:(GADAdType *)arg1 config:(GADMConfig *)arg2;
@end

@protocol GADMWebViewRenderedCheckerDelegate <NSObject>
- (void)webView:(UIWebView *)arg1 isRendered:(_Bool)arg2;
@end

@protocol GADMediaContentDelegate <NSObject>

@optional
- (void)mediaContent:(GADMediaContent *)arg1 didLoadVideoWithSize:(struct CGSize)arg2;
@end

@protocol GADMediaContentDisplaying <NSObject>
- (id <GADVideoControlling>)videoController;
- (UIView *)mediaView;
- (void)loadVideoWithCompletionHandler:(void (^)(NSError *))arg1;
@end

@protocol GADMediatedNativeAd <NSObject>
- (NSDictionary *)extraAssets;
- (id <GADMediatedNativeAdDelegate>)mediatedNativeAdDelegate;
@end

@protocol GADMediatedNativeAppInstallAd <GADMediatedNativeAd>
- (NSString *)price;
- (NSString *)store;
- (NSDecimalNumber *)starRating;
- (NSString *)callToAction;
- (GADNativeAdImage *)icon;
- (NSString *)body;
- (NSArray *)images;
- (NSString *)headline;

@optional
- (_Bool)hasVideoContent;
- (UIView *)mediaView;
- (UIView *)adChoicesView;
@end

@protocol GADMediatedNativeContentAd <GADMediatedNativeAd>
- (NSString *)advertiser;
- (NSString *)callToAction;
- (GADNativeAdImage *)logo;
- (NSArray *)images;
- (NSString *)body;
- (NSString *)headline;

@optional
- (_Bool)hasVideoContent;
- (UIView *)mediaView;
- (UIView *)adChoicesView;
@end

@protocol GADMediatedNativeCustomTemplateAd <GADMediatedNativeAd>
@end

@protocol GADMediatedUnifiedNativeAd <NSObject>
@property(readonly, copy, nonatomic) NSDictionary *extraAssets;
@property(readonly, copy, nonatomic) NSString *advertiser;
@property(readonly, copy, nonatomic) NSString *price;
@property(readonly, copy, nonatomic) NSString *store;
@property(readonly, copy, nonatomic) NSDecimalNumber *starRating;
@property(readonly, copy, nonatomic) NSString *callToAction;
@property(readonly, nonatomic) GADNativeAdImage *icon;
@property(readonly, copy, nonatomic) NSString *body;
@property(readonly, nonatomic) NSArray *images;
@property(readonly, copy, nonatomic) NSString *headline;

@optional
@property(readonly, nonatomic) _Bool hasVideoContent;
@property(readonly, nonatomic) UIView *mediaView;
@property(readonly, nonatomic) UIView *adChoicesView;
- (void)didUntrackView:(UIView *)arg1;
- (void)didRecordClickOnAssetWithName:(NSString *)arg1 view:(UIView *)arg2 viewController:(UIViewController *)arg3;
- (void)didRecordImpression;
- (void)didRenderInView:(UIView *)arg1 clickableAssetViews:(NSDictionary *)arg2 nonclickableAssetViews:(NSDictionary *)arg3 viewController:(UIViewController *)arg4;
@end

@protocol GADMediationAdRequest <NSObject>
- (NSArray *)userKeywords;
- (NSString *)userLocationDescription;
- (double)userLocationAccuracyInMeters;
- (double)userLongitude;
- (double)userLatitude;
- (_Bool)userHasLocation;
- (NSDate *)userBirthday;
- (long long)userGender;
- (NSNumber *)childDirectedTreatment;
- (id <GADAdNetworkExtras>)networkExtras;
- (_Bool)testMode;
- (NSDictionary *)credentials;
- (NSString *)publisherId;
@end

@protocol GADMediationAdRequestInternal <GADMediationAdRequest>
- (NSString *)userRequestAgent;
- (NSString *)currentAdapterName;
- (NSArray *)adapterNames;
- (NSDictionary *)extras;
- (NSDictionary *)inlineAd;
@end

@protocol GADMediationNativeAdVideoControllerDelegate <NSObject>
- (void)mediationNativeAdVideoControllerDidEndVideoPlayback:(GADMediationNativeAdVideoController *)arg1;
- (void)mediationNativeAdVideoControllerDidPauseVideo:(GADMediationNativeAdVideoController *)arg1;
- (void)mediationNativeAdVideoControllerDidPlayVideo:(GADMediationNativeAdVideoController *)arg1;
@end

@protocol GADNativeAdDelegate <NSObject>

@optional
- (void)nativeAdWillLeaveApplication:(GADNativeAd *)arg1;
- (void)nativeAdDidDismissScreen:(GADNativeAd *)arg1;
- (void)nativeAdWillDismissScreen:(GADNativeAd *)arg1;
- (void)nativeAdWillPresentScreen:(GADNativeAd *)arg1;
- (void)nativeAdDidRecordClick:(GADNativeAd *)arg1;
- (void)nativeAdDidRecordImpression:(GADNativeAd *)arg1;
@end

@protocol GADNativeAdMediaDisplaying <NSObject>
- (GADVideoController *)videoController;
- (id <GADMediaContentDisplaying>)mediaContent;
@end

@protocol GADNativeAdSourceAttributing <NSObject>
- (UIView *)adChoicesContentView;
@end

@protocol GADNativeAdUnconfirmedClickDelegate <NSObject>
- (void)nativeAdDidCancelUnconfirmedClick:(GADNativeAd *)arg1;
- (void)nativeAd:(GADNativeAd *)arg1 didReceiveUnconfirmedClickOnAssetID:(NSString *)arg2;
@end

@protocol GADNativeAppInstallAdLoaderDelegate <GADAdLoaderDelegate>
- (void)adLoader:(GADAdLoader *)arg1 didReceiveNativeAppInstallAd:(GADNativeAppInstallAd *)arg2;
@end

@protocol GADNativeContentAdLoaderDelegate <GADAdLoaderDelegate>
- (void)adLoader:(GADAdLoader *)arg1 didReceiveNativeContentAd:(GADNativeContentAd *)arg2;
@end

@protocol GADNativeCustomTemplateAdLoaderDelegate <GADAdLoaderDelegate>
- (void)adLoader:(GADAdLoader *)arg1 didReceiveNativeCustomTemplateAd:(GADNativeCustomTemplateAd *)arg2;
- (NSArray *)nativeCustomTemplateIDsForAdLoader:(GADAdLoader *)arg1;
@end

@protocol GADOverlayPresenting <NSObject>
@property(readonly, nonatomic, getter=isReadyToPresent) _Bool readyToPresent;
@property(nonatomic) __weak GADViewController *presentedViewController;
- (void)setNeedsUpdateOrientation;
- (void)dismissWithCompletionHandler:(void (^)(void))arg1;
- (UIViewController *)presentationViewController;
- (void)presentFromViewController:(UIViewController *)arg1 completion:(void (^)(void))arg2;
@end

@protocol GADOverlayViewSource <NSObject>
- (GADOverlayView *)overlayView;
@end

@protocol GADResourceCacheDelegate <NSObject>

@optional
- (void)resourceCache:(GADResourceCache *)arg1 didFailCachingWithError:(NSError *)arg2;
- (void)resourceCacheDidSucceedCaching:(GADResourceCache *)arg1;
- (void)resourceCacheDidReceiveData:(GADResourceCache *)arg1;
- (void)resourceCacheDidReceiveResponse:(GADResourceCache *)arg1;
- (void)resourceCacheDidStartCaching:(GADResourceCache *)arg1;
@end

@protocol GADRewardBasedVideoAdClickDelegate <NSObject>

@optional
- (void)rewardBasedVideoAdDidReceiveAdClick:(GADRewardBasedVideoAd *)arg1;
@end

@protocol GADRewardBasedVideoAdDelegate <NSObject>
- (void)rewardBasedVideoAd:(GADRewardBasedVideoAd *)arg1 didRewardUserWithReward:(GADAdReward *)arg2;

@optional
- (void)rewardBasedVideoAdWillLeaveApplication:(GADRewardBasedVideoAd *)arg1;
- (void)rewardBasedVideoAdDidClose:(GADRewardBasedVideoAd *)arg1;
- (void)rewardBasedVideoAdDidCompletePlaying:(GADRewardBasedVideoAd *)arg1;
- (void)rewardBasedVideoAdDidStartPlaying:(GADRewardBasedVideoAd *)arg1;
- (void)rewardBasedVideoAdDidOpen:(GADRewardBasedVideoAd *)arg1;
- (void)rewardBasedVideoAdDidReceiveAd:(GADRewardBasedVideoAd *)arg1;
- (void)rewardBasedVideoAd:(GADRewardBasedVideoAd *)arg1 didFailToLoadWithError:(NSError *)arg2;
@end

@protocol GADRewardBasedVideoAdGMSGHandlerDelegate <NSObject>

@optional
- (void)rewardBasedVideoAdGMSGHandlerDidReceiveVideoCompleteNotification:(GADRewardBasedVideoAdGMSGHandler *)arg1;
- (void)rewardBasedVideoAdGMSGHandler:(GADRewardBasedVideoAdGMSGHandler *)arg1 didReceiveRewardNotificationWithRewardItem:(GADAdReward *)arg2;
- (void)rewardBasedVideoAdGMSGHandlerDidReceiveStartVideoNotification:(GADRewardBasedVideoAdGMSGHandler *)arg1;
@end

@protocol GADSDKCoreControllerDelegate <NSObject>
- (void)failedJavaScriptFile;
- (void)invalidJavaScriptRequest;
- (void)loadAd:(GADAd *)arg1 headers:(NSDictionary *)arg2;
- (void)loadAdURLWithParameters:(NSDictionary *)arg1;
- (void)setRequestID:(NSString *)arg1;
- (long long)requestedAdType;
- (NSDictionary *)requestParameters;
- (GADCSITimeRecorder *)adLoadActionTimeRecorder;
@end

@protocol GADSDKCoreGMSGHandlerDelegate
- (void)SDKCoreGMSGHandlerDidReceiveResumeSDKCoreRefreshAction:(GADSDKCoreGMSGHandler *)arg1;
- (void)SDKCoreGMSGHandlerDidReceivePauseSDKCoreRefreshAction:(GADSDKCoreGMSGHandler *)arg1;
- (void)SDKCoreGMSGHandler:(GADSDKCoreGMSGHandler *)arg1 didReceiveResultActionWithRequestID:(NSString *)arg2 arguments:(NSDictionary *)arg3;
- (void)SDKCoreGMSGHandlerDidReceiveSDKCoreUpdateNotification:(GADSDKCoreGMSGHandler *)arg1;
- (void)SDKCoreGMSGHandler:(GADSDKCoreGMSGHandler *)arg1 didLoadSDKConstants:(NSDictionary *)arg2;
- (void)SDKCoreGMSGHandler:(GADSDKCoreGMSGHandler *)arg1 didReceiveInvalidAdWithRequestID:(NSString *)arg2 parameters:(NSDictionary *)arg3;
- (void)SDKCoreGMSGHandler:(GADSDKCoreGMSGHandler *)arg1 loadAdWithRequestID:(NSString *)arg2 parameters:(NSDictionary *)arg3;
- (void)SDKCoreGMSGHandler:(GADSDKCoreGMSGHandler *)arg1 loadAdURLWithRequestID:(NSString *)arg2 parameters:(NSDictionary *)arg3;
@end

@protocol GADSDKCoreWebViewNotification
- (void)didFinishLoadingSDKCoreInSDKCoreWebView:(GADSDKCoreWebView *)arg1;
@end

@protocol GADSlotAdEventDelegate <NSObject>

@optional
- (void)slot:(GADSlot *)arg1 didReceiveUnconfirmedClickWithClickInfo:(NSDictionary *)arg2;
- (void)slotDidRecordClick:(GADSlot *)arg1;
- (void)slotDidRecordImpression:(GADSlot *)arg1;
- (void)slot:(GADSlot *)arg1 didLoadVideoWithSize:(struct CGSize)arg2;
- (void)slotWillLeaveApplication:(GADSlot *)arg1;
- (void)slotDidDismissScreen:(GADSlot *)arg1;
- (void)slotWillDismissScreen:(GADSlot *)arg1;
- (void)slotWillPresentScreen:(GADSlot *)arg1;
@end

@protocol GADSlotAdKeyDelegate <NSObject>
- (NSDictionary *)viewHierarchyInformationForSlot:(GADSlot *)arg1;
- (void)cacheViewHierarchyInformationForSlot:(GADSlot *)arg1;
@end

@protocol GADSlotAdLoadDelegate <NSObject>
- (void)slot:(GADSlot *)arg1 didFailToLoadAdContentWithError:(NSError *)arg2;
- (void)slotFinishedLoadingAdContent:(GADSlot *)arg1;
@end

@protocol GADSlotAdResponseDelegate <NSObject>
- (void)slot:(GADSlot *)arg1 willProcessMediatedAdResponse:(GADAd *)arg2;
- (_Bool)slot:(GADSlot *)arg1 shouldProcessAdResponse:(GADAd *)arg2 error:(id *)arg3;
@end

@protocol GADSlotDelegate <NSObject>

@optional
- (void)slot:(GADSlot *)arg1 didChangeAdMetadata:(NSString *)arg2 withInfo:(NSString *)arg3;
- (void)slotDidReceiveAdClick:(GADSlot *)arg1;
- (void)slot:(GADSlot *)arg1 willLoadAdWithRequest:(GADRequest *)arg2;
- (_Bool)slot:(GADSlot *)arg1 notifyPublisherToRenderCustomRenderingAd:(GADAd *)arg2 error:(id *)arg3;
- (void)slot:(GADSlot *)arg1 didReceiveAppEvent:(NSString *)arg2 withInfo:(NSString *)arg3;
- (void)slot:(GADSlot *)arg1 willResizeToAdSize:(struct GADAdSize)arg2;
- (void)slotDidLoadMRAIDAd:(GADSlot *)arg1;
- (NSArray *)validAdSizes;
- (struct GADAdSize)adSize;
- (void)layoutSubviewsIfNeeded;
- (void)setAdSize:(struct GADAdSize)arg1 andReload:(_Bool)arg2;
- (void)slot:(GADSlot *)arg1 contentSizeDidChange:(struct CGSize)arg2;
- (void)slot:(GADSlot *)arg1 didReceiveAdView:(UIView *)arg2;
- (UIViewController *)rootViewController;
- (struct CGRect)bounds;
- (struct CGRect)frameInInterface;
- (struct CGRect)frame;
- (_Bool)slotShouldPreemptInProgressRequest:(GADSlot *)arg1;
- (_Bool)slotShouldReloadCurrentRequest:(GADSlot *)arg1;
- (_Bool)slot:(GADSlot *)arg1 shouldLoadRequest:(GADRequest *)arg2 error:(id *)arg3;
@end

@protocol GADStatisticDictionaryDelegate <NSObject>
- (void)didUpdateStatisticDictionary:(GADStatisticDictionary *)arg1;
- (NSObject<OS_dispatch_queue> *)notificationQueue;
@end

@protocol GADURLConnectionDelegate
- (void)connection:(GADURLConnection *)arg1 loadDidFail:(NSError *)arg2 httpStatusCode:(long long)arg3;
- (void)connection:(GADURLConnection *)arg1 loadDidFinish:(NSString *)arg2 baseURL:(NSURL *)arg3;
- (void)connection:(GADURLConnection *)arg1 loadDidReceiveCachedResponse:(NSURLResponse *)arg2;
- (_Bool)connection:(GADURLConnection *)arg1 loadShouldUseCacheForResponse:(NSURLResponse *)arg2;
- (void)connection:(GADURLConnection *)arg1 willPerformRedirect:(GADURLConnectionRedirect *)arg2;
- (NSError *)connection:(GADURLConnection *)arg1 shouldRedirectToURL:(NSURL *)arg2;
@end

@protocol GADUnifiedNativeAdLoaderDelegate <GADAdLoaderDelegate>
- (void)adLoader:(GADAdLoader *)arg1 didReceiveUnifiedNativeAd:(GADUnifiedNativeAd *)arg2;
@end

@protocol GADVideoControllerDelegate <NSObject>

@optional
- (void)videoControllerDidUnmuteVideo:(GADVideoController *)arg1;
- (void)videoControllerDidMuteVideo:(GADVideoController *)arg1;
- (void)videoControllerDidEndVideoPlayback:(GADVideoController *)arg1;
- (void)videoControllerDidPauseVideo:(GADVideoController *)arg1;
- (void)videoControllerDidPlayVideo:(GADVideoController *)arg1;
@end

@protocol GADVideoControlling <NSObject>
- (_Bool)clickToExpandEnabled;
- (long long)videoPlaybackState;
- (_Bool)customControlsEnabled;
- (double)aspectRatio;
- (_Bool)hasVideoContent;
- (void)setInitialStateWithVideoOptions:(GADVideoOptions *)arg1;
- (void)pause;
- (void)play;
- (void)setMute:(_Bool)arg1;
@end

@protocol GADVideoLoaderDelegate <NSObject>
- (void)videoLoader:(GADVideoLoader *)arg1 didFailToLoadURL:(NSURL *)arg2 withError:(NSError *)arg3;
- (void)videoLoader:(GADVideoLoader *)arg1 didStartedLoadingURL:(NSURL *)arg2;
@end

@protocol GADVideoPlayerDelegate <NSObject>
- (void)player:(GADVideoPlayer *)arg1 didLoadURL:(NSURL *)arg2 withAVPlayer:(AVPlayer *)arg3;
@end

@protocol GADVideoPlayerGLViewDelegate
- (void)videoPlayerGLView:(GADVideoPlayerGLView *)arg1 didFailToSetupVideoPlayer:(AVPlayer *)arg2 withError:(NSError *)arg3;
- (void)videoPlayerGLView:(GADVideoPlayerGLView *)arg1 didSetUpVideoPlayer:(AVPlayer *)arg2;
@end

@protocol GADVideoRendering <NSObject>
- (void)optimizeVideoForAdVisibility:(_Bool)arg1;
- (void)disableVideoPlaybackOptimization;
- (void)resetVideoPlaybackOptimization;
- (void)enableVideoPlaybackOptimization;
- (void)setUpWithPlayer:(AVPlayer *)arg1;
@end

@protocol GADViewMonitorDelegate <NSObject>
- (void)viewMonitorDidRefresh:(GADViewMonitor *)arg1;
@end

@protocol GADWebKitWebViewMRAIDDelegate <NSObject>
- (NSString *)MRAIDJavaScriptURLStringForWebView:(GADWebKitWebView *)arg1;
@end

@protocol GADWebView
@property(readonly, copy, nonatomic) NSURL *URL;
@property(readonly, nonatomic) UIScrollView *scrollView;
- (_Bool)contentSizeUpdatesSynchronously;
- (_Bool)isLoading;
- (_Bool)canGoForward;
- (_Bool)canGoBack;
- (void)reload;
- (void)stopLoading;
- (void)goForward;
- (void)goBack;
- (void)loadRequest:(NSURLRequest *)arg1;
- (void)loadHTMLString:(NSString *)arg1 baseURL:(NSURL *)arg2;
- (void)evaluateJavaScriptFromString:(NSString *)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
@end

@protocol GADWebViewContentSizeDelegate <NSObject>
- (void)webView:(GADWebView *)arg1 didChangeScrollViewContentSize:(struct CGSize)arg2;
@end

@protocol GADWebViewDelegate <NSObject>
- (void)webViewProcessDidTerminate:(GADWebView *)arg1;
- (void)webView:(GADWebView *)arg1 runJavaScriptTextInputPanelWithTitle:(NSString *)arg2 defaultText:(NSString *)arg3 prompt:(NSString *)arg4 completionHandler:(void (^)(NSString *))arg5;
- (void)webView:(GADWebView *)arg1 runJavaScriptConfirmPanelWithTitle:(NSString *)arg2 message:(NSString *)arg3 completionHandler:(void (^)(_Bool))arg4;
- (void)webView:(GADWebView *)arg1 runJavaScriptAlertPanelWithTitle:(NSString *)arg2 message:(NSString *)arg3 completionHandler:(void (^)(void))arg4;
- (void)webView:(GADWebView *)arg1 didFailLoadWithError:(NSError *)arg2;
- (void)webViewDidFinishLoad:(GADWebView *)arg1;
- (void)webViewDidStartLoad:(GADWebView *)arg1;
- (_Bool)webView:(GADWebView *)arg1 shouldStartLoadWithRequest:(NSURLRequest *)arg2 navigationType:(long long)arg3;
@end

@protocol GAIDispatchSender <NSObject>
- (void)queueModel:(GAITrackerModel *)arg1;
- (void)queueDispatch:(NSDictionary *)arg1;
@end

@protocol GAILogger <NSObject>
@property(nonatomic) unsigned long long logLevel;
- (void)error:(NSString *)arg1;
- (void)warning:(NSString *)arg1;
- (void)info:(NSString *)arg1;
- (void)verbose:(NSString *)arg1;
@end

@protocol GAIReachabilityDelegate
- (void)reachability:(GAIReachabilityChecker *)arg1 statusChanged:(int)arg2;
@end

@protocol GAITracker <NSObject>
@property(nonatomic) _Bool allowIDFACollection;
@property(readonly, nonatomic) NSString *name;
- (void)send:(NSDictionary *)arg1;
- (NSString *)get:(NSString *)arg1;
- (void)set:(NSString *)arg1 value:(NSString *)arg2;
@end

@protocol GLKViewDelegate <NSObject>
- (void)glkView:(GLKView *)arg1 drawInRect:(struct CGRect)arg2;
@end

@protocol GPBDictionaryInternalsProtocol
- (void)enumerateForTextFormat:(void (^)(id, id))arg1;
- (void)setGPBGenericValue:(CDUnion_88782d86 *)arg1 forGPBGenericValueKey:(CDUnion_88782d86 *)arg2;
- (void)writeToCodedOutputStream:(GPBCodedOutputStream *)arg1 asField:(GPBFieldDescriptor *)arg2;
- (unsigned long long)computeSerializedSizeAsField:(GPBFieldDescriptor *)arg1;
@end

@protocol GPBMessageSignatureProtocol

@optional
+ (id)getClassValue;
- (void)setArray:(NSArray *)arg1;
- (unsigned long long)getArrayCount;
- (id)getArray;
- (int)getEnumAtIndex:(unsigned long long)arg1;
- (void)setEnum:(int)arg1;
- (int)getEnum;
- (GPBMessage *)getGroupAtIndex:(unsigned long long)arg1;
- (void)setGroup:(GPBMessage *)arg1;
- (GPBMessage *)getGroup;
- (GPBMessage *)getMessageAtIndex:(unsigned long long)arg1;
- (void)setMessage:(GPBMessage *)arg1;
- (GPBMessage *)getMessage;
- (NSString *)getStringAtIndex:(unsigned long long)arg1;
- (void)setString:(NSString *)arg1;
- (NSString *)getString;
- (NSData *)getBytesAtIndex:(unsigned long long)arg1;
- (void)setBytes:(NSData *)arg1;
- (NSData *)getBytes;
- (unsigned long long)getUInt64AtIndex:(unsigned long long)arg1;
- (void)setUInt64:(unsigned long long)arg1;
- (unsigned long long)getUInt64;
- (unsigned int)getUInt32AtIndex:(unsigned long long)arg1;
- (void)setUInt32:(unsigned int)arg1;
- (unsigned int)getUInt32;
- (long long)getSInt64AtIndex:(unsigned long long)arg1;
- (void)setSInt64:(long long)arg1;
- (long long)getSInt64;
- (int)getSInt32AtIndex:(unsigned long long)arg1;
- (void)setSInt32:(int)arg1;
- (int)getSInt32;
- (long long)getInt64AtIndex:(unsigned long long)arg1;
- (void)setInt64:(long long)arg1;
- (long long)getInt64;
- (int)getInt32AtIndex:(unsigned long long)arg1;
- (void)setInt32:(int)arg1;
- (int)getInt32;
- (double)getDoubleAtIndex:(unsigned long long)arg1;
- (void)setDouble:(double)arg1;
- (double)getDouble;
- (long long)getSFixed64AtIndex:(unsigned long long)arg1;
- (void)setSFixed64:(long long)arg1;
- (long long)getSFixed64;
- (unsigned long long)getFixed64AtIndex:(unsigned long long)arg1;
- (void)setFixed64:(unsigned long long)arg1;
- (unsigned long long)getFixed64;
- (float)getFloatAtIndex:(unsigned long long)arg1;
- (void)setFloat:(float)arg1;
- (float)getFloat;
- (int)getSFixed32AtIndex:(unsigned long long)arg1;
- (void)setSFixed32:(int)arg1;
- (int)getSFixed32;
- (unsigned int)getFixed32AtIndex:(unsigned long long)arg1;
- (void)setFixed32:(unsigned int)arg1;
- (unsigned int)getFixed32;
- (_Bool)getBoolAtIndex:(unsigned long long)arg1;
- (void)setBool:(_Bool)arg1;
- (_Bool)getBool;
@end

@protocol GTMLogFilter <NSObject>
- (_Bool)filterAllowsMessage:(NSString *)arg1 level:(int)arg2;
@end

@protocol GTMLogFormatter <NSObject>
- (NSString *)stringForFunc:(NSString *)arg1 withFormat:(NSString *)arg2 valist:(char *)arg3 level:(int)arg4;
@end

@protocol GTMLogWriter <NSObject>
- (void)logMessage:(NSString *)arg1 level:(int)arg2;
@end

@protocol MFMailComposeViewControllerDelegate <NSObject>

@optional
- (void)mailComposeController:(MFMailComposeViewController *)arg1 didFinishWithResult:(long long)arg2 error:(NSError *)arg3;
@end

@protocol MFMessageComposeViewControllerDelegate <NSObject>
- (void)messageComposeViewController:(MFMessageComposeViewController *)arg1 didFinishWithResult:(long long)arg2;
@end

@protocol NANOMessageBase <NSObject>
@property(readonly, nonatomic) CDUnknownFunctionPointerType copyMessageInfoFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType deallocMessageFieldFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType initMessageInfoFn;
@property(readonly, nonatomic) CDStruct_e1a27b1c *messageInfo;
@property(readonly, nonatomic) const char *messageID;
- (NSData *)protoBuffer;
- (id)initWithBuffer:(NSData *)arg1;
- (id)initWithMessageInfo:(CDStruct_e1a27b1c *)arg1;
@end

@protocol NSCoding
- (id)initWithCoder:(NSCoder *)arg1;
- (void)encodeWithCoder:(NSCoder *)arg1;
@end

@protocol NSCopying
- (id)copyWithZone:(struct _NSZone *)arg1;
@end

@protocol NSFastEnumeration
- (unsigned long long)countByEnumeratingWithState:(CDStruct_70511ce9 *)arg1 objects:(id *)arg2 count:(unsigned long long)arg3;
@end

@protocol NSMutableCopying
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
@end

@protocol NSObject
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;
@property(readonly) unsigned long long hash;
- (struct _NSZone *)zone;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (_Bool)respondsToSelector:(SEL)arg1;
- (_Bool)conformsToProtocol:(Protocol *)arg1;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;
- (_Bool)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
- (_Bool)isEqual:(id)arg1;

@optional
@property(readonly, copy) NSString *debugDescription;
@end

@protocol NSSecureCoding <NSCoding>
+ (_Bool)supportsSecureCoding;
@end

@protocol NSStreamDelegate <NSObject>

@optional
- (void)stream:(NSStream *)arg1 handleEvent:(unsigned long long)arg2;
@end

@protocol NSURLConnectionDataDelegate <NSURLConnectionDelegate>

@optional
- (void)connectionDidFinishLoading:(NSURLConnection *)arg1;
- (NSCachedURLResponse *)connection:(NSURLConnection *)arg1 willCacheResponse:(NSCachedURLResponse *)arg2;
- (void)connection:(NSURLConnection *)arg1 didSendBodyData:(long long)arg2 totalBytesWritten:(long long)arg3 totalBytesExpectedToWrite:(long long)arg4;
- (NSInputStream *)connection:(NSURLConnection *)arg1 needNewBodyStream:(NSURLRequest *)arg2;
- (void)connection:(NSURLConnection *)arg1 didReceiveData:(NSData *)arg2;
- (void)connection:(NSURLConnection *)arg1 didReceiveResponse:(NSURLResponse *)arg2;
- (NSURLRequest *)connection:(NSURLConnection *)arg1 willSendRequest:(NSURLRequest *)arg2 redirectResponse:(NSURLResponse *)arg3;
@end

@protocol NSURLConnectionDelegate <NSObject>

@optional
- (void)connection:(NSURLConnection *)arg1 didCancelAuthenticationChallenge:(NSURLAuthenticationChallenge *)arg2;
- (void)connection:(NSURLConnection *)arg1 didReceiveAuthenticationChallenge:(NSURLAuthenticationChallenge *)arg2;
- (_Bool)connection:(NSURLConnection *)arg1 canAuthenticateAgainstProtectionSpace:(NSURLProtectionSpace *)arg2;
- (void)connection:(NSURLConnection *)arg1 willSendRequestForAuthenticationChallenge:(NSURLAuthenticationChallenge *)arg2;
- (_Bool)connectionShouldUseCredentialStorage:(NSURLConnection *)arg1;
- (void)connection:(NSURLConnection *)arg1 didFailWithError:(NSError *)arg2;
@end

@protocol NSURLSessionDelegate <NSObject>

@optional
- (void)URLSessionDidFinishEventsForBackgroundURLSession:(NSURLSession *)arg1;
- (void)URLSession:(NSURLSession *)arg1 didReceiveChallenge:(NSURLAuthenticationChallenge *)arg2 completionHandler:(void (^)(long long, NSURLCredential *))arg3;
- (void)URLSession:(NSURLSession *)arg1 didBecomeInvalidWithError:(NSError *)arg2;
@end

@protocol NSURLSessionDownloadDelegate <NSURLSessionTaskDelegate>
- (void)URLSession:(NSURLSession *)arg1 downloadTask:(NSURLSessionDownloadTask *)arg2 didFinishDownloadingToURL:(NSURL *)arg3;

@optional
- (void)URLSession:(NSURLSession *)arg1 downloadTask:(NSURLSessionDownloadTask *)arg2 didResumeAtOffset:(long long)arg3 expectedTotalBytes:(long long)arg4;
- (void)URLSession:(NSURLSession *)arg1 downloadTask:(NSURLSessionDownloadTask *)arg2 didWriteData:(long long)arg3 totalBytesWritten:(long long)arg4 totalBytesExpectedToWrite:(long long)arg5;
@end

@protocol NSURLSessionTaskDelegate <NSURLSessionDelegate>

@optional
- (void)URLSession:(NSURLSession *)arg1 task:(NSURLSessionTask *)arg2 didCompleteWithError:(NSError *)arg3;
- (void)URLSession:(NSURLSession *)arg1 task:(NSURLSessionTask *)arg2 didFinishCollectingMetrics:(NSURLSessionTaskMetrics *)arg3;
- (void)URLSession:(NSURLSession *)arg1 task:(NSURLSessionTask *)arg2 didSendBodyData:(long long)arg3 totalBytesSent:(long long)arg4 totalBytesExpectedToSend:(long long)arg5;
- (void)URLSession:(NSURLSession *)arg1 task:(NSURLSessionTask *)arg2 needNewBodyStream:(void (^)(NSInputStream *))arg3;
- (void)URLSession:(NSURLSession *)arg1 task:(NSURLSessionTask *)arg2 didReceiveChallenge:(NSURLAuthenticationChallenge *)arg3 completionHandler:(void (^)(long long, NSURLCredential *))arg4;
- (void)URLSession:(NSURLSession *)arg1 task:(NSURLSessionTask *)arg2 willPerformHTTPRedirection:(NSHTTPURLResponse *)arg3 newRequest:(NSURLRequest *)arg4 completionHandler:(void (^)(NSURLRequest *))arg5;
@end

@protocol NSXMLParserDelegate <NSObject>

@optional
- (void)parser:(NSXMLParser *)arg1 validationErrorOccurred:(NSError *)arg2;
- (void)parser:(NSXMLParser *)arg1 parseErrorOccurred:(NSError *)arg2;
- (NSData *)parser:(NSXMLParser *)arg1 resolveExternalEntityName:(NSString *)arg2 systemID:(NSString *)arg3;
- (void)parser:(NSXMLParser *)arg1 foundCDATA:(NSData *)arg2;
- (void)parser:(NSXMLParser *)arg1 foundComment:(NSString *)arg2;
- (void)parser:(NSXMLParser *)arg1 foundProcessingInstructionWithTarget:(NSString *)arg2 data:(NSString *)arg3;
- (void)parser:(NSXMLParser *)arg1 foundIgnorableWhitespace:(NSString *)arg2;
- (void)parser:(NSXMLParser *)arg1 foundCharacters:(NSString *)arg2;
- (void)parser:(NSXMLParser *)arg1 didEndMappingPrefix:(NSString *)arg2;
- (void)parser:(NSXMLParser *)arg1 didStartMappingPrefix:(NSString *)arg2 toURI:(NSString *)arg3;
- (void)parser:(NSXMLParser *)arg1 didEndElement:(NSString *)arg2 namespaceURI:(NSString *)arg3 qualifiedName:(NSString *)arg4;
- (void)parser:(NSXMLParser *)arg1 didStartElement:(NSString *)arg2 namespaceURI:(NSString *)arg3 qualifiedName:(NSString *)arg4 attributes:(NSDictionary *)arg5;
- (void)parser:(NSXMLParser *)arg1 foundExternalEntityDeclarationWithName:(NSString *)arg2 publicID:(NSString *)arg3 systemID:(NSString *)arg4;
- (void)parser:(NSXMLParser *)arg1 foundInternalEntityDeclarationWithName:(NSString *)arg2 value:(NSString *)arg3;
- (void)parser:(NSXMLParser *)arg1 foundElementDeclarationWithName:(NSString *)arg2 model:(NSString *)arg3;
- (void)parser:(NSXMLParser *)arg1 foundAttributeDeclarationWithName:(NSString *)arg2 forElement:(NSString *)arg3 type:(NSString *)arg4 defaultValue:(NSString *)arg5;
- (void)parser:(NSXMLParser *)arg1 foundUnparsedEntityDeclarationWithName:(NSString *)arg2 publicID:(NSString *)arg3 systemID:(NSString *)arg4 notationName:(NSString *)arg5;
- (void)parser:(NSXMLParser *)arg1 foundNotationDeclarationWithName:(NSString *)arg2 publicID:(NSString *)arg3 systemID:(NSString *)arg4;
- (void)parserDidEndDocument:(NSXMLParser *)arg1;
- (void)parserDidStartDocument:(NSXMLParser *)arg1;
@end

@protocol PluginAdapterDelegate <NSObject>
- (void)sendPluginResult:(CDVPluginResult *)arg1 to:(NSString *)arg2;
- (void)fireEvent:(NSString *)arg1 event:(NSString *)arg2 withData:(NSString *)arg3;
- (UIViewController *)getViewController;
- (UIView *)getView;
@end

@protocol SFSafariViewControllerDelegate <NSObject>

@optional
- (void)safariViewController:(SFSafariViewController *)arg1 didCompleteInitialLoad:(_Bool)arg2;
- (void)safariViewControllerDidFinish:(SFSafariViewController *)arg1;
- (NSArray *)safariViewController:(SFSafariViewController *)arg1 activityItemsForURL:(NSURL *)arg2 title:(NSString *)arg3;
@end

@protocol SKPaymentTransactionObserver <NSObject>
- (void)paymentQueue:(SKPaymentQueue *)arg1 updatedTransactions:(NSArray *)arg2;

@optional
- (void)paymentQueue:(SKPaymentQueue *)arg1 updatedDownloads:(NSArray *)arg2;
- (void)paymentQueueRestoreCompletedTransactionsFinished:(SKPaymentQueue *)arg1;
- (void)paymentQueue:(SKPaymentQueue *)arg1 restoreCompletedTransactionsFailedWithError:(NSError *)arg2;
- (void)paymentQueue:(SKPaymentQueue *)arg1 removedTransactions:(NSArray *)arg2;
@end

@protocol SKProductsRequestDelegate <SKRequestDelegate>
- (void)productsRequest:(SKProductsRequest *)arg1 didReceiveResponse:(SKProductsResponse *)arg2;
@end

@protocol SKRequestDelegate <NSObject>

@optional
- (void)request:(SKRequest *)arg1 didFailWithError:(NSError *)arg2;
- (void)requestDidFinish:(SKRequest *)arg1;
@end

@protocol SKStoreProductViewControllerDelegate <NSObject>

@optional
- (void)productViewControllerDidFinish:(SKStoreProductViewController *)arg1;
@end

@protocol TAGAdIdAccess <NSObject>
+ (_Bool)retrieveTrackingFlag;
+ (NSString *)retrieveId;
@end

@protocol TAGAddRemoveSetPopulator
- (void)rulePassed:(TAGExpandedRule *)arg1 add:(NSMutableSet *)arg2 remove:(NSMutableSet *)arg3;
@end

@protocol TAGContainerCallback <NSObject>
- (void)containerRefreshFailure:(TAGContainer *)arg1 failure:(int)arg2 refreshType:(int)arg3;
- (void)containerRefreshSuccess:(TAGContainer *)arg1 refreshType:(int)arg2;
- (void)containerRefreshBegin:(TAGContainer *)arg1 refreshType:(int)arg2;
@end

@protocol TAGContainerFuture
- (_Bool)isDone;
- (TAGContainer *)get;
@end

@protocol TAGContainerOpenerNotifier
- (void)containerAvailable:(TAGContainer *)arg1;
@end

@protocol TAGCustomEvaluator <NSObject>
- (NSObject *)evaluate:(NSString *)arg1 parameters:(NSDictionary *)arg2;
@end

@protocol TAGDataLayerListener <NSObject>
- (void)changed:(NSDictionary *)arg1;
@end

@protocol TAGDataLayerPersistentStore <NSObject>
- (void)clearKeysWithPrefix:(NSString *)arg1;
- (void)loadSaved:(id <TAGDataLayerPersistentStoreCallback>)arg1;
- (void)saveKeyValues:(NSArray *)arg1 lifetimeInMillis:(unsigned long long)arg2;
@end

@protocol TAGDataLayerPersistentStoreCallback <NSObject>
- (void)onKeyValuesLoaded:(NSArray *)arg1;
@end

@protocol TAGHashAlgorithm
- (NSData *)hashData:(NSData *)arg1;
@end

@protocol TAGHitSender <NSObject>
@property(nonatomic) __weak id <TAGLogger> logger;
- (void)sendHitToUrl:(NSString *)arg1;
@end

@protocol TAGLoadCallback <NSObject>
- (void)onFailure:(long long)arg1;
- (void)onSuccess:(id)arg1;
- (void)startLoad;
@end

@protocol TAGLogger <NSObject>
- (int)logLevel;
- (void)setLogLevel:(int)arg1;
- (void)verbose:(NSString *)arg1;
- (void)debug:(NSString *)arg1;
- (void)info:(NSString *)arg1;
- (void)warning:(NSString *)arg1;
- (void)error:(NSString *)arg1;
@end

@protocol TAGPBMessageSignatureProtocol

@optional
+ (id)getClassValue;
- (id)mergeClass:(id)arg1;
- (id)setClassBuilder:(id)arg1;
- (id)setArray:(TAGPBArray *)arg1;
- (id)getArray;
- (int)getEnumAtIndex:(unsigned long long)arg1;
- (id)setEnum:(int)arg1;
- (int)getEnum;
- (TAGPBGeneratedMessage *)getGroupAtIndex:(unsigned long long)arg1;
- (id)setGroup:(TAGPBGeneratedMessage *)arg1;
- (TAGPBGeneratedMessage *)getGroup;
- (TAGPBGeneratedMessage *)getMessageAtIndex:(unsigned long long)arg1;
- (id)setMessage:(TAGPBGeneratedMessage *)arg1;
- (TAGPBGeneratedMessage *)getMessage;
- (NSString *)getStringAtIndex:(unsigned long long)arg1;
- (id)setString:(NSString *)arg1;
- (NSString *)getString;
- (NSData *)getDataAtIndex:(unsigned long long)arg1;
- (id)setData:(NSData *)arg1;
- (NSData *)getData;
- (unsigned long long)getUInt64AtIndex:(unsigned long long)arg1;
- (id)setUInt64:(unsigned long long)arg1;
- (unsigned long long)getUInt64;
- (unsigned int)getUInt32AtIndex:(unsigned long long)arg1;
- (id)setUInt32:(unsigned int)arg1;
- (unsigned int)getUInt32;
- (long long)getSInt64AtIndex:(unsigned long long)arg1;
- (id)setSInt64:(long long)arg1;
- (long long)getSInt64;
- (int)getSInt32AtIndex:(unsigned long long)arg1;
- (id)setSInt32:(int)arg1;
- (int)getSInt32;
- (long long)getInt64AtIndex:(unsigned long long)arg1;
- (id)setInt64:(long long)arg1;
- (long long)getInt64;
- (int)getInt32AtIndex:(unsigned long long)arg1;
- (id)setInt32:(int)arg1;
- (int)getInt32;
- (double)getDoubleAtIndex:(unsigned long long)arg1;
- (id)setDouble:(double)arg1;
- (double)getDouble;
- (long long)getSFixed64AtIndex:(unsigned long long)arg1;
- (id)setSFixed64:(long long)arg1;
- (long long)getSFixed64;
- (unsigned long long)getFixed64AtIndex:(unsigned long long)arg1;
- (id)setFixed64:(unsigned long long)arg1;
- (unsigned long long)getFixed64;
- (float)getFloatAtIndex:(unsigned long long)arg1;
- (id)setFloat:(float)arg1;
- (float)getFloat;
- (int)getSFixed32AtIndex:(unsigned long long)arg1;
- (id)setSFixed32:(int)arg1;
- (int)getSFixed32;
- (unsigned int)getFixed32AtIndex:(unsigned long long)arg1;
- (id)setFixed32:(unsigned int)arg1;
- (unsigned int)getFixed32;
- (_Bool)getBoolAtIndex:(unsigned long long)arg1;
- (id)setBool:(_Bool)arg1;
- (_Bool)getBool;
@end

@protocol TAGPBMutableArrayDelegate <NSObject>
- (void)pbMutableArray:(TAGPBMutableArray *)arg1 willAddElements:(unsigned long long)arg2;
@end

@protocol TAGResourceStorage
@property(retain, nonatomic) id <TAGLoadCallback> loadCallback;
- (TAGExpandedResource *)loadExpandedResourceFromPlistFile:(NSString *)arg1;
- (TAGExpandedResource *)loadExpandedResourceFromJsonFile:(NSString *)arg1;
- (TAGPResource *)loadResourceFromContainerFile:(NSString *)arg1;
- (void)saveResourceToDiskInBackground:(TAGPResourceWithMetadata *)arg1;
- (void)loadResourceFromDiskInBackground;
@end

@protocol UIAlertViewDelegate <NSObject>

@optional
- (_Bool)alertViewShouldEnableFirstOtherButton:(UIAlertView *)arg1;
- (void)alertView:(UIAlertView *)arg1 didDismissWithButtonIndex:(long long)arg2;
- (void)alertView:(UIAlertView *)arg1 willDismissWithButtonIndex:(long long)arg2;
- (void)didPresentAlertView:(UIAlertView *)arg1;
- (void)willPresentAlertView:(UIAlertView *)arg1;
- (void)alertViewCancel:(UIAlertView *)arg1;
- (void)alertView:(UIAlertView *)arg1 clickedButtonAtIndex:(long long)arg2;
@end

@protocol UIApplicationDelegate <NSObject>

@optional
@property(retain, nonatomic) UIWindow *window;
- (void)application:(UIApplication *)arg1 userDidAcceptCloudKitShareWithMetadata:(CKShareMetadata *)arg2;
- (void)application:(UIApplication *)arg1 didUpdateUserActivity:(NSUserActivity *)arg2;
- (void)application:(UIApplication *)arg1 didFailToContinueUserActivityWithType:(NSString *)arg2 error:(NSError *)arg3;
- (_Bool)application:(UIApplication *)arg1 continueUserActivity:(NSUserActivity *)arg2 restorationHandler:(void (^)(NSArray *))arg3;
- (_Bool)application:(UIApplication *)arg1 willContinueUserActivityWithType:(NSString *)arg2;
- (void)application:(UIApplication *)arg1 didDecodeRestorableStateWithCoder:(NSCoder *)arg2;
- (void)application:(UIApplication *)arg1 willEncodeRestorableStateWithCoder:(NSCoder *)arg2;
- (_Bool)application:(UIApplication *)arg1 shouldRestoreApplicationState:(NSCoder *)arg2;
- (_Bool)application:(UIApplication *)arg1 shouldSaveApplicationState:(NSCoder *)arg2;
- (UIViewController *)application:(UIApplication *)arg1 viewControllerWithRestorationIdentifierPath:(NSArray *)arg2 coder:(NSCoder *)arg3;
- (_Bool)application:(UIApplication *)arg1 shouldAllowExtensionPointIdentifier:(NSString *)arg2;
- (unsigned long long)application:(UIApplication *)arg1 supportedInterfaceOrientationsForWindow:(UIWindow *)arg2;
- (void)applicationProtectedDataDidBecomeAvailable:(UIApplication *)arg1;
- (void)applicationProtectedDataWillBecomeUnavailable:(UIApplication *)arg1;
- (void)applicationWillEnterForeground:(UIApplication *)arg1;
- (void)applicationDidEnterBackground:(UIApplication *)arg1;
- (void)applicationShouldRequestHealthAuthorization:(UIApplication *)arg1;
- (void)application:(UIApplication *)arg1 handleWatchKitExtensionRequest:(NSDictionary *)arg2 reply:(void (^)(NSDictionary *))arg3;
- (void)application:(UIApplication *)arg1 handleEventsForBackgroundURLSession:(NSString *)arg2 completionHandler:(void (^)(void))arg3;
- (void)application:(UIApplication *)arg1 performActionForShortcutItem:(UIApplicationShortcutItem *)arg2 completionHandler:(void (^)(_Bool))arg3;
- (void)application:(UIApplication *)arg1 performFetchWithCompletionHandler:(void (^)(unsigned long long))arg2;
- (void)application:(UIApplication *)arg1 didReceiveRemoteNotification:(NSDictionary *)arg2 fetchCompletionHandler:(void (^)(unsigned long long))arg3;
- (void)application:(UIApplication *)arg1 handleActionWithIdentifier:(NSString *)arg2 forLocalNotification:(UILocalNotification *)arg3 withResponseInfo:(NSDictionary *)arg4 completionHandler:(void (^)(void))arg5;
- (void)application:(UIApplication *)arg1 handleActionWithIdentifier:(NSString *)arg2 forRemoteNotification:(NSDictionary *)arg3 completionHandler:(void (^)(void))arg4;
- (void)application:(UIApplication *)arg1 handleActionWithIdentifier:(NSString *)arg2 forRemoteNotification:(NSDictionary *)arg3 withResponseInfo:(NSDictionary *)arg4 completionHandler:(void (^)(void))arg5;
- (void)application:(UIApplication *)arg1 handleActionWithIdentifier:(NSString *)arg2 forLocalNotification:(UILocalNotification *)arg3 completionHandler:(void (^)(void))arg4;
- (void)application:(UIApplication *)arg1 didReceiveLocalNotification:(UILocalNotification *)arg2;
- (void)application:(UIApplication *)arg1 didReceiveRemoteNotification:(NSDictionary *)arg2;
- (void)application:(UIApplication *)arg1 didFailToRegisterForRemoteNotificationsWithError:(NSError *)arg2;
- (void)application:(UIApplication *)arg1 didRegisterForRemoteNotificationsWithDeviceToken:(NSData *)arg2;
- (void)application:(UIApplication *)arg1 didRegisterUserNotificationSettings:(UIUserNotificationSettings *)arg2;
- (void)application:(UIApplication *)arg1 didChangeStatusBarFrame:(struct CGRect)arg2;
- (void)application:(UIApplication *)arg1 willChangeStatusBarFrame:(struct CGRect)arg2;
- (void)application:(UIApplication *)arg1 didChangeStatusBarOrientation:(long long)arg2;
- (void)application:(UIApplication *)arg1 willChangeStatusBarOrientation:(long long)arg2 duration:(double)arg3;
- (void)applicationSignificantTimeChange:(UIApplication *)arg1;
- (void)applicationWillTerminate:(UIApplication *)arg1;
- (void)applicationDidReceiveMemoryWarning:(UIApplication *)arg1;
- (_Bool)application:(UIApplication *)arg1 openURL:(NSURL *)arg2 options:(NSDictionary *)arg3;
- (_Bool)application:(UIApplication *)arg1 openURL:(NSURL *)arg2 sourceApplication:(NSString *)arg3 annotation:(id)arg4;
- (_Bool)application:(UIApplication *)arg1 handleOpenURL:(NSURL *)arg2;
- (void)applicationWillResignActive:(UIApplication *)arg1;
- (void)applicationDidBecomeActive:(UIApplication *)arg1;
- (_Bool)application:(UIApplication *)arg1 didFinishLaunchingWithOptions:(NSDictionary *)arg2;
- (_Bool)application:(UIApplication *)arg1 willFinishLaunchingWithOptions:(NSDictionary *)arg2;
- (void)applicationDidFinishLaunching:(UIApplication *)arg1;
@end

@protocol UIDocumentInteractionControllerDelegate <NSObject>

@optional
- (_Bool)documentInteractionController:(UIDocumentInteractionController *)arg1 performAction:(SEL)arg2;
- (_Bool)documentInteractionController:(UIDocumentInteractionController *)arg1 canPerformAction:(SEL)arg2;
- (void)documentInteractionController:(UIDocumentInteractionController *)arg1 didEndSendingToApplication:(NSString *)arg2;
- (void)documentInteractionController:(UIDocumentInteractionController *)arg1 willBeginSendingToApplication:(NSString *)arg2;
- (void)documentInteractionControllerDidDismissOpenInMenu:(UIDocumentInteractionController *)arg1;
- (void)documentInteractionControllerWillPresentOpenInMenu:(UIDocumentInteractionController *)arg1;
- (void)documentInteractionControllerDidDismissOptionsMenu:(UIDocumentInteractionController *)arg1;
- (void)documentInteractionControllerWillPresentOptionsMenu:(UIDocumentInteractionController *)arg1;
- (void)documentInteractionControllerDidEndPreview:(UIDocumentInteractionController *)arg1;
- (void)documentInteractionControllerWillBeginPreview:(UIDocumentInteractionController *)arg1;
- (UIView *)documentInteractionControllerViewForPreview:(UIDocumentInteractionController *)arg1;
- (struct CGRect)documentInteractionControllerRectForPreview:(UIDocumentInteractionController *)arg1;
- (UIViewController *)documentInteractionControllerViewControllerForPreview:(UIDocumentInteractionController *)arg1;
@end

@protocol UIGestureRecognizerDelegate <NSObject>

@optional
- (_Bool)gestureRecognizer:(UIGestureRecognizer *)arg1 shouldReceivePress:(UIPress *)arg2;
- (_Bool)gestureRecognizer:(UIGestureRecognizer *)arg1 shouldReceiveTouch:(UITouch *)arg2;
- (_Bool)gestureRecognizer:(UIGestureRecognizer *)arg1 shouldBeRequiredToFailByGestureRecognizer:(UIGestureRecognizer *)arg2;
- (_Bool)gestureRecognizer:(UIGestureRecognizer *)arg1 shouldRequireFailureOfGestureRecognizer:(UIGestureRecognizer *)arg2;
- (_Bool)gestureRecognizer:(UIGestureRecognizer *)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(UIGestureRecognizer *)arg2;
- (_Bool)gestureRecognizerShouldBegin:(UIGestureRecognizer *)arg1;
@end

@protocol UIPopoverControllerDelegate <NSObject>

@optional
- (void)popoverController:(UIPopoverController *)arg1 willRepositionPopoverToRect:(inout struct CGRect *)arg2 inView:(inout id *)arg3;
- (void)popoverControllerDidDismissPopover:(UIPopoverController *)arg1;
- (_Bool)popoverControllerShouldDismissPopover:(UIPopoverController *)arg1;
@end

@protocol UIScrollViewDelegate <NSObject>

@optional
- (void)scrollViewDidChangeAdjustedContentInset:(UIScrollView *)arg1;
- (void)scrollViewDidScrollToTop:(UIScrollView *)arg1;
- (_Bool)scrollViewShouldScrollToTop:(UIScrollView *)arg1;
- (void)scrollViewDidEndZooming:(UIScrollView *)arg1 withView:(UIView *)arg2 atScale:(double)arg3;
- (void)scrollViewWillBeginZooming:(UIScrollView *)arg1 withView:(UIView *)arg2;
- (UIView *)viewForZoomingInScrollView:(UIScrollView *)arg1;
- (void)scrollViewDidEndScrollingAnimation:(UIScrollView *)arg1;
- (void)scrollViewDidEndDecelerating:(UIScrollView *)arg1;
- (void)scrollViewWillBeginDecelerating:(UIScrollView *)arg1;
- (void)scrollViewDidEndDragging:(UIScrollView *)arg1 willDecelerate:(_Bool)arg2;
- (void)scrollViewWillEndDragging:(UIScrollView *)arg1 withVelocity:(struct CGPoint)arg2 targetContentOffset:(inout struct CGPoint *)arg3;
- (void)scrollViewWillBeginDragging:(UIScrollView *)arg1;
- (void)scrollViewDidZoom:(UIScrollView *)arg1;
- (void)scrollViewDidScroll:(UIScrollView *)arg1;
@end

@protocol UIWebViewDelegate <NSObject>

@optional
- (void)webView:(UIWebView *)arg1 didFailLoadWithError:(NSError *)arg2;
- (void)webViewDidFinishLoad:(UIWebView *)arg1;
- (void)webViewDidStartLoad:(UIWebView *)arg1;
- (_Bool)webView:(UIWebView *)arg1 shouldStartLoadWithRequest:(NSURLRequest *)arg2 navigationType:(long long)arg3;
@end

@protocol WKNavigationDelegate <NSObject>

@optional
- (void)webViewWebContentProcessDidTerminate:(WKWebView *)arg1;
- (void)webView:(WKWebView *)arg1 didReceiveAuthenticationChallenge:(NSURLAuthenticationChallenge *)arg2 completionHandler:(void (^)(long long, NSURLCredential *))arg3;
- (void)webView:(WKWebView *)arg1 didFailNavigation:(WKNavigation *)arg2 withError:(NSError *)arg3;
- (void)webView:(WKWebView *)arg1 didFinishNavigation:(WKNavigation *)arg2;
- (void)webView:(WKWebView *)arg1 didCommitNavigation:(WKNavigation *)arg2;
- (void)webView:(WKWebView *)arg1 didFailProvisionalNavigation:(WKNavigation *)arg2 withError:(NSError *)arg3;
- (void)webView:(WKWebView *)arg1 didReceiveServerRedirectForProvisionalNavigation:(WKNavigation *)arg2;
- (void)webView:(WKWebView *)arg1 didStartProvisionalNavigation:(WKNavigation *)arg2;
- (void)webView:(WKWebView *)arg1 decidePolicyForNavigationResponse:(WKNavigationResponse *)arg2 decisionHandler:(void (^)(long long))arg3;
- (void)webView:(WKWebView *)arg1 decidePolicyForNavigationAction:(WKNavigationAction *)arg2 decisionHandler:(void (^)(long long))arg3;
@end

@protocol WKScriptMessageHandler <NSObject>
- (void)userContentController:(WKUserContentController *)arg1 didReceiveScriptMessage:(WKScriptMessage *)arg2;
@end

@protocol WKUIDelegate <NSObject>

@optional
- (void)webView:(WKWebView *)arg1 commitPreviewingViewController:(UIViewController *)arg2;
- (UIViewController *)webView:(WKWebView *)arg1 previewingViewControllerForElement:(WKPreviewElementInfo *)arg2 defaultActions:(NSArray *)arg3;
- (_Bool)webView:(WKWebView *)arg1 shouldPreviewElement:(WKPreviewElementInfo *)arg2;
- (void)webView:(WKWebView *)arg1 runJavaScriptTextInputPanelWithPrompt:(NSString *)arg2 defaultText:(NSString *)arg3 initiatedByFrame:(WKFrameInfo *)arg4 completionHandler:(void (^)(NSString *))arg5;
- (void)webView:(WKWebView *)arg1 runJavaScriptConfirmPanelWithMessage:(NSString *)arg2 initiatedByFrame:(WKFrameInfo *)arg3 completionHandler:(void (^)(_Bool))arg4;
- (void)webView:(WKWebView *)arg1 runJavaScriptAlertPanelWithMessage:(NSString *)arg2 initiatedByFrame:(WKFrameInfo *)arg3 completionHandler:(void (^)(void))arg4;
- (void)webViewDidClose:(WKWebView *)arg1;
- (WKWebView *)webView:(WKWebView *)arg1 createWebViewWithConfiguration:(WKWebViewConfiguration *)arg2 forNavigationAction:(WKNavigationAction *)arg3 windowFeatures:(WKWindowFeatures *)arg4;
@end

@interface AppDelegate : CDVAppDelegate
{
}

- (_Bool)application:(id)arg1 didFinishLaunchingWithOptions:(id)arg2;

@end

@interface MainViewController : CDVViewController
{
}

- (void)viewDidUnload;
- (void)viewDidLoad;
- (void)viewWillAppear:(_Bool)arg1;
- (void)didReceiveMemoryWarning;
- (id)init;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

@end

@interface MainCommandDelegate : CDVCommandDelegateImpl
{
}

- (id)pathForResource:(id)arg1;
- (id)getCommandInstance:(id)arg1;

@end

@interface MainCommandQueue : CDVCommandQueue
{
}

- (_Bool)execute:(id)arg1;

@end

@interface SCORComScore : CDVPlugin
{
}

- (void)getSystemInfo:(id)arg1;
- (void)isJailBroken:(id)arg1;
- (void)loadDeviceIds:(id)arg1;
- (void)networkInfo:(id)arg1;
- (void)getScreenSize:(id)arg1;

@end

@interface CDVPluginExt : CDVPlugin <PluginAdapterDelegate>
{
    id <PluginAdapterDelegate> _adapter;
}

@property(retain, nonatomic) id <PluginAdapterDelegate> adapter; // @synthesize adapter=_adapter;
- (void).cxx_destruct;
- (void)sendPluginResult:(id)arg1 to:(id)arg2;
- (void)fireEvent:(id)arg1 event:(id)arg2 withData:(id)arg3;
- (id)getViewController;
- (id)getView;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CDVAdMobPlugin : GenericAdPlugin <GADBannerViewDelegate, GADInterstitialDelegate, GADRewardBasedVideoAdDelegate>
{
    NSDictionary *_adExtras;
    NSMutableDictionary *_mediations;
    NSString *_mGender;
    NSArray *_mLocation;
    NSString *_mForChild;
    NSString *_mContentURL;
    NSDictionary *_mCustomTargeting;
    NSArray *_mExclude;
    NSString *_rewardVideoAdId;
    struct GADAdSize _adSize;
}

@property(retain, nonatomic) NSString *rewardVideoAdId; // @synthesize rewardVideoAdId=_rewardVideoAdId;
@property(retain, nonatomic) NSArray *mExclude; // @synthesize mExclude=_mExclude;
@property(retain, nonatomic) NSDictionary *mCustomTargeting; // @synthesize mCustomTargeting=_mCustomTargeting;
@property(retain, nonatomic) NSString *mContentURL; // @synthesize mContentURL=_mContentURL;
@property(retain, nonatomic) NSString *mForChild; // @synthesize mForChild=_mForChild;
@property(retain, nonatomic) NSArray *mLocation; // @synthesize mLocation=_mLocation;
@property(retain, nonatomic) NSString *mGender; // @synthesize mGender=_mGender;
@property(retain, nonatomic) NSMutableDictionary *mediations; // @synthesize mediations=_mediations;
@property(retain, nonatomic) NSDictionary *adExtras; // @synthesize adExtras=_adExtras;
@property struct GADAdSize adSize; // @synthesize adSize=_adSize;
- (void).cxx_destruct;
- (void)rewardBasedVideoAd:(id)arg1 didFailToLoadWithError:(id)arg2;
- (void)rewardBasedVideoAdWillLeaveApplication:(id)arg1;
- (void)rewardBasedVideoAdDidClose:(id)arg1;
- (void)rewardBasedVideoAdDidStartPlaying:(id)arg1;
- (void)rewardBasedVideoAdDidOpen:(id)arg1;
- (void)rewardBasedVideoAdDidReceiveAd:(id)arg1;
- (void)rewardBasedVideoAd:(id)arg1 didRewardUserWithReward:(id)arg2;
- (void)interstitialWillLeaveApplication:(id)arg1;
- (void)interstitialDidDismissScreen:(id)arg1;
- (void)interstitialWillPresentScreen:(id)arg1;
- (void)interstitialDidReceiveAd:(id)arg1;
- (void)interstitial:(id)arg1 didFailToReceiveAdWithError:(id)arg2;
- (void)adViewDidDismissScreen:(id)arg1;
- (void)adViewWillPresentScreen:(id)arg1;
- (void)adViewWillLeaveApplication:(id)arg1;
- (void)adView:(id)arg1 didFailToReceiveAdWithError:(id)arg2;
- (void)adViewDidReceiveAd:(id)arg1;
- (_Bool)__showRewardVideoAd:(id)arg1;
- (id)__prepareRewardVideoAd:(id)arg1;
- (void)__destroyInterstitial:(id)arg1;
- (void)__showInterstitial:(id)arg1;
- (void)__loadInterstitial:(id)arg1;
- (id)__createInterstitial:(id)arg1;
- (void)__destroyAdView:(id)arg1;
- (void)__resumeAdView:(id)arg1;
- (void)__pauseAdView:(id)arg1;
- (void)__loadAdView:(id)arg1;
- (int)__getAdViewHeight:(id)arg1;
- (int)__getAdViewWidth:(id)arg1;
- (void)__showBanner:(int)arg1 atX:(int)arg2 atY:(int)arg3;
- (id)__getAdMobDeviceId;
- (struct GADAdSize)__AdSizeFromString:(id)arg1;
- (id)__buildAdRequest:(_Bool)arg1 forDFP:(_Bool)arg2;
- (id)__createAdView:(id)arg1;
- (void)parseOptions:(id)arg1;
- (id)__getTestRewardVideoId;
- (id)__getTestInterstitialId;
- (id)__getTestBannerId;
- (id)__getProductShortName;
- (void)pluginInitialize;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface AdMobMediation : NSObject
{
}

- (void)onDestroy;
- (void)onResume;
- (void)onPause;
- (void)joinAdRequest:(id)arg1;
- (id)initWithOptions:(id)arg1;

@end

@interface CDVDevice : CDVPlugin
{
}

+ (id)cordovaVersion;
- (_Bool)isVirtual;
- (id)deviceProperties;
- (void)getDeviceInfo:(id)arg1;
- (id)uniqueAppInstanceIdentifier:(id)arg1;

@end

@interface UniversalAnalyticsPlugin : CDVPlugin
{
    _Bool _trackerStarted;
    _Bool _debugMode;
    NSMutableDictionary *_customDimensions;
}

- (void).cxx_destruct;
- (void)addTransactionItem:(id)arg1;
- (void)addTransaction:(id)arg1;
- (void)trackTiming:(id)arg1;
- (void)trackView:(id)arg1;
- (void)trackException:(id)arg1;
- (void)trackEvent:(id)arg1;
- (void)trackMetric:(id)arg1;
- (void)addCustomDimension:(id)arg1;
- (void)enableUncaughtExceptionReporting:(id)arg1;
- (void)setAppVersion:(id)arg1;
- (void)setOptOut:(id)arg1;
- (void)setAnonymizeIp:(id)arg1;
- (void)setUserId:(id)arg1;
- (void)debugMode:(id)arg1;
- (void)dispatch:(id)arg1;
- (void)setVar:(id)arg1;
- (void)getVar:(id)arg1;
- (void)addCustomDimensionsToTracker:(id)arg1;
- (void)setAllowIDFACollection:(id)arg1;
- (void)startTrackerWithId:(id)arg1;
- (void)pluginInitialize;

@end

@interface CDVInAppBrowser : CDVPlugin
{
    long long _previousStatusBarStyle;
    CDVInAppBrowserViewController *_inAppBrowserViewController;
    NSString *_callbackId;
    NSRegularExpression *_callbackIdPattern;
}

@property(copy, nonatomic) NSRegularExpression *callbackIdPattern; // @synthesize callbackIdPattern=_callbackIdPattern;
@property(copy, nonatomic) NSString *callbackId; // @synthesize callbackId=_callbackId;
@property(retain, nonatomic) CDVInAppBrowserViewController *inAppBrowserViewController; // @synthesize inAppBrowserViewController=_inAppBrowserViewController;
- (void).cxx_destruct;
- (void)browserExit;
- (void)webView:(id)arg1 didFailLoadWithError:(id)arg2;
- (void)webViewDidFinishLoad:(id)arg1;
- (void)webViewDidStartLoad:(id)arg1;
- (_Bool)webView:(id)arg1 shouldStartLoadWithRequest:(id)arg2 navigationType:(long long)arg3;
- (_Bool)isValidCallbackId:(id)arg1;
- (void)injectStyleFile:(id)arg1;
- (void)injectStyleCode:(id)arg1;
- (void)injectScriptFile:(id)arg1;
- (void)injectScriptCode:(id)arg1;
- (void)injectDeferredObject:(id)arg1 withWrapper:(id)arg2;
- (void)openInSystem:(id)arg1;
- (void)openInCordovaWebView:(id)arg1 withOptions:(id)arg2;
- (void)hide:(id)arg1;
- (void)show:(id)arg1;
- (void)openInInAppBrowser:(id)arg1 withOptions:(id)arg2;
- (void)open:(id)arg1;
- (_Bool)isSystemUrl:(id)arg1;
- (void)close:(id)arg1;
- (void)onReset;
- (id)settingForKey:(id)arg1;
- (void)pluginInitialize;

@end

@interface CDVInAppBrowserViewController : UIViewController <UIWebViewDelegate, CDVScreenOrientationDelegate>
{
    NSString *_userAgent;
    NSString *_prevUserAgent;
    long long _userAgentLockToken;
    CDVInAppBrowserOptions *_browserOptions;
    CDVUIWebViewDelegate *_webViewDelegate;
    NSURL *currentURL;
    UIWebView *_webView;
    UIBarButtonItem *_closeButton;
    UILabel *_addressLabel;
    UIBarButtonItem *_backButton;
    UIBarButtonItem *_forwardButton;
    UIActivityIndicatorView *_spinner;
    UIToolbar *_toolbar;
    id <CDVScreenOrientationDelegate> _orientationDelegate;
    CDVInAppBrowser *_navigationDelegate;
}

@property(nonatomic) __weak CDVInAppBrowser *navigationDelegate; // @synthesize navigationDelegate=_navigationDelegate;
@property(nonatomic) __weak id <CDVScreenOrientationDelegate> orientationDelegate; // @synthesize orientationDelegate=_orientationDelegate;
@property(retain, nonatomic) UIToolbar *toolbar; // @synthesize toolbar=_toolbar;
@property(retain, nonatomic) UIActivityIndicatorView *spinner; // @synthesize spinner=_spinner;
@property(retain, nonatomic) UIBarButtonItem *forwardButton; // @synthesize forwardButton=_forwardButton;
@property(retain, nonatomic) UIBarButtonItem *backButton; // @synthesize backButton=_backButton;
@property(retain, nonatomic) UILabel *addressLabel; // @synthesize addressLabel=_addressLabel;
@property(retain, nonatomic) UIBarButtonItem *closeButton; // @synthesize closeButton=_closeButton;
@property(retain, nonatomic) UIWebView *webView; // @synthesize webView=_webView;
@property(retain, nonatomic) NSURL *currentURL; // @synthesize currentURL;
- (void).cxx_destruct;
- (_Bool)shouldAutorotateToInterfaceOrientation:(long long)arg1;
- (unsigned long long)supportedInterfaceOrientations;
- (_Bool)shouldAutorotate;
- (void)webView:(id)arg1 didFailLoadWithError:(id)arg2;
- (void)webViewDidFinishLoad:(id)arg1;
- (_Bool)webView:(id)arg1 shouldStartLoadWithRequest:(id)arg2 navigationType:(long long)arg3;
- (void)webViewDidStartLoad:(id)arg1;
- (id)colorFromHexString:(id)arg1;
- (void)rePositionViews;
- (float)getStatusBarOffset;
- (void)viewWillAppear:(_Bool)arg1;
- (void)goForward:(id)arg1;
- (void)goBack:(id)arg1;
- (void)navigateTo:(id)arg1;
- (void)close;
- (_Bool)prefersStatusBarHidden;
- (long long)preferredStatusBarStyle;
- (void)viewDidUnload;
- (void)viewDidLoad;
- (void)showToolBar:(_Bool)arg1:(id)arg2;
- (void)showLocationBar:(_Bool)arg1;
- (void)setCloseButtonTitle:(id)arg1:(id)arg2;
- (void)setWebViewFrame:(struct CGRect)arg1;
- (void)createViews;
- (void)dealloc;
- (id)initWithUserAgent:(id)arg1 prevUserAgent:(id)arg2 browserOptions:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CDVInAppBrowserOptions : NSObject
{
    _Bool _location;
    _Bool _toolbar;
    _Bool _toolbartranslucent;
    _Bool _hidenavigationbuttons;
    _Bool _clearcache;
    _Bool _clearsessioncache;
    _Bool _enableviewportscale;
    _Bool _mediaplaybackrequiresuseraction;
    _Bool _allowinlinemediaplayback;
    _Bool _keyboarddisplayrequiresuseraction;
    _Bool _suppressesincrementalrendering;
    _Bool _hidden;
    _Bool _disallowoverscroll;
    NSString *_closebuttoncaption;
    NSString *_closebuttoncolor;
    NSString *_toolbarposition;
    NSString *_toolbarcolor;
    NSString *_presentationstyle;
    NSString *_transitionstyle;
}

+ (id)parseOptions:(id)arg1;
@property(nonatomic) _Bool disallowoverscroll; // @synthesize disallowoverscroll=_disallowoverscroll;
@property(nonatomic) _Bool hidden; // @synthesize hidden=_hidden;
@property(nonatomic) _Bool suppressesincrementalrendering; // @synthesize suppressesincrementalrendering=_suppressesincrementalrendering;
@property(nonatomic) _Bool keyboarddisplayrequiresuseraction; // @synthesize keyboarddisplayrequiresuseraction=_keyboarddisplayrequiresuseraction;
@property(nonatomic) _Bool allowinlinemediaplayback; // @synthesize allowinlinemediaplayback=_allowinlinemediaplayback;
@property(nonatomic) _Bool mediaplaybackrequiresuseraction; // @synthesize mediaplaybackrequiresuseraction=_mediaplaybackrequiresuseraction;
@property(nonatomic) _Bool enableviewportscale; // @synthesize enableviewportscale=_enableviewportscale;
@property(copy, nonatomic) NSString *transitionstyle; // @synthesize transitionstyle=_transitionstyle;
@property(copy, nonatomic) NSString *presentationstyle; // @synthesize presentationstyle=_presentationstyle;
@property(nonatomic) _Bool clearsessioncache; // @synthesize clearsessioncache=_clearsessioncache;
@property(nonatomic) _Bool clearcache; // @synthesize clearcache=_clearcache;
@property(nonatomic) _Bool hidenavigationbuttons; // @synthesize hidenavigationbuttons=_hidenavigationbuttons;
@property(nonatomic) _Bool toolbartranslucent; // @synthesize toolbartranslucent=_toolbartranslucent;
@property(copy, nonatomic) NSString *toolbarcolor; // @synthesize toolbarcolor=_toolbarcolor;
@property(copy, nonatomic) NSString *toolbarposition; // @synthesize toolbarposition=_toolbarposition;
@property(copy, nonatomic) NSString *closebuttoncolor; // @synthesize closebuttoncolor=_closebuttoncolor;
@property(copy, nonatomic) NSString *closebuttoncaption; // @synthesize closebuttoncaption=_closebuttoncaption;
@property(nonatomic) _Bool toolbar; // @synthesize toolbar=_toolbar;
@property(nonatomic) _Bool location; // @synthesize location=_location;
- (void).cxx_destruct;
- (id)init;

@end

@interface CDVInAppBrowserNavigationController : UINavigationController
{
    id <CDVScreenOrientationDelegate> _orientationDelegate;
}

@property(nonatomic) __weak id <CDVScreenOrientationDelegate> orientationDelegate; // @synthesize orientationDelegate=_orientationDelegate;
- (void).cxx_destruct;
- (_Bool)shouldAutorotateToInterfaceOrientation:(long long)arg1;
- (unsigned long long)supportedInterfaceOrientations;
- (_Bool)shouldAutorotate;
- (struct CGRect)invertFrameIfNeeded:(struct CGRect)arg1;
- (void)viewDidLoad;
- (void)dismissViewControllerAnimated:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;

@end

@interface CDVConnection : CDVPlugin
{
    NSString *type;
    NSString *_callbackId;
    CDVReachability *internetReach;
    NSString *connectionType;
}

@property(retain) CDVReachability *internetReach; // @synthesize internetReach;
@property(copy) NSString *connectionType; // @synthesize connectionType;
- (void).cxx_destruct;
- (void)pluginInitialize;
- (void)onResume;
- (void)onPause;
- (void)updateConnectionType:(id)arg1;
- (void)updateReachability:(id)arg1;
- (_Bool)isCellularConnection:(id)arg1;
- (id)w3cConnectionTypeFor:(id)arg1;
- (void)sendPluginResult;
- (void)getConnectionInfo:(id)arg1;

@end

@interface CDVReachability : NSObject
{
    struct __SCNetworkReachability *reachabilityRef;
}

+ (id)reachabilityForInternetConnection;
+ (id)reachabilityWithAddress:(const struct sockaddr *)arg1;
+ (id)reachabilityWithHostName:(id)arg1;
- (int)currentReachabilityStatus;
- (_Bool)connectionRequired;
- (int)networkStatusForFlags:(unsigned int)arg1;
- (void)dealloc;
- (void)stopNotifier;
- (_Bool)startNotifier;

@end

@interface CDVOrientation : CDVPlugin
{
    _Bool _isLocked;
    long long _lastOrientation;
}

- (void)screenOrientation:(id)arg1;

@end

@interface CDVStatusBar : CDVPlugin <UIScrollViewDelegate>
{
    _Bool _statusBarOverlaysWebView;
    UIView *_statusBarBackgroundView;
    _Bool _uiviewControllerBasedStatusBarAppearance;
    UIColor *_statusBarBackgroundColor;
    NSString *_eventsCallbackId;
    _Bool _statusBarVisible;
}

@property _Bool statusBarVisible; // @synthesize statusBarVisible=_statusBarVisible;
- (void).cxx_destruct;
- (_Bool)scrollViewShouldScrollToTop:(id)arg1;
- (void)dealloc;
- (void)resizeWebView;
- (void)resizeStatusBarBackgroundView;
- (void)show:(id)arg1;
- (void)showStatusBar;
- (void)hide:(id)arg1;
- (void)hideStatusBar;
- (void)backgroundColorByHexString:(id)arg1;
- (void)_backgroundColorByHexString:(id)arg1;
- (void)backgroundColorByName:(id)arg1;
- (void)styleBlackOpaque:(id)arg1;
- (void)styleBlackTranslucent:(id)arg1;
- (void)styleLightContent:(id)arg1;
- (void)styleDefault:(id)arg1;
- (void)setStatusBarStyle:(id)arg1;
- (void)setStyleForStatusBar:(long long)arg1;
- (void)refreshStatusBarAppearance;
- (void)overlaysWebView:(id)arg1;
@property _Bool statusBarOverlaysWebView;
- (void)initializeStatusBarBackgroundView;
- (void)_ready:(id)arg1;
- (void)updateIsVisible:(_Bool)arg1;
- (void)fireTappedEvent;
- (void)onReset;
- (void)pluginInitialize;
- (void)statusBarDidChangeFrame:(id)arg1;
- (void)cordovaViewWillAppear:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (id)settingForKey:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SocialSharing : CDVPlugin <UIPopoverControllerDelegate, MFMailComposeViewControllerDelegate, UIDocumentInteractionControllerDelegate>
{
    UIPopoverController *_popover;
    NSString *_popupCoordinates;
    MFMailComposeViewController *_globalMailComposer;
    UIDocumentInteractionController *_documentInteractionController;
    NSString *_tempStoredFile;
    CDVInvokedUrlCommand *_command;
}

+ (id)dataFromBase64String:(id)arg1;
@property(retain) CDVInvokedUrlCommand *command; // @synthesize command=_command;
@property(retain) NSString *tempStoredFile; // @synthesize tempStoredFile=_tempStoredFile;
@property(retain, nonatomic) UIDocumentInteractionController *documentInteractionController; // @synthesize documentInteractionController=_documentInteractionController;
@property(retain, nonatomic) MFMailComposeViewController *globalMailComposer; // @synthesize globalMailComposer=_globalMailComposer;
- (void).cxx_destruct;
- (void)documentInteractionControllerDidDismissOpenInMenu:(id)arg1;
- (void)documentInteractionController:(id)arg1 willBeginSendingToApplication:(id)arg2;
- (void)popoverControllerDidDismissPopover:(id)arg1;
- (void)popoverController:(id)arg1 willRepositionPopoverToRect:(inout struct CGRect *)arg2 inView:(inout id *)arg3;
- (void)cleanupStoredFiles;
- (id)storeInFile:(id)arg1 fileData:(id)arg2;
- (id)getFile:(id)arg1;
- (id)getImage:(id)arg1;
- (void)thisImage:(id)arg1 wasSavedToPhotoAlbumWithError:(id)arg2 contextInfo:(void *)arg3;
- (void)saveToPhotoAlbum:(id)arg1;
- (void)shareViaWhatsApp:(id)arg1;
- (void)shareViaInstagram:(id)arg1;
- (void)openImage:(id)arg1;
- (_Bool)canShareViaWhatsApp;
- (_Bool)canShareViaInstagram;
- (void)messageComposeViewController:(id)arg1 didFinishWithResult:(long long)arg2;
- (void)shareViaSMS:(id)arg1;
- (_Bool)canShareViaSMS;
- (void)cycleTheGlobalMailComposer;
- (void)mailComposeController:(id)arg1 didFinishWithResult:(long long)arg2 error:(id)arg3;
- (id)getMimeTypeFromFileExtension:(id)arg1;
- (id)getBasenameFromAttachmentPath:(id)arg1;
- (id)getTopMostViewController;
- (void)shareViaEmail:(id)arg1;
- (void)shareViaInternal:(id)arg1 type:(id)arg2;
- (_Bool)isAvailableForSharing:(id)arg1 type:(id)arg2;
- (_Bool)isEmailAvailable;
- (void)canShareViaEmail:(id)arg1;
- (void)canShareVia:(id)arg1;
- (void)shareVia:(id)arg1;
- (void)shareViaFacebookWithPasteMessageHint:(id)arg1;
- (void)shareViaFacebook:(id)arg1;
- (void)shareViaTwitter:(id)arg1;
- (void)shareInternal:(id)arg1 withOptions:(id)arg2 isBooleanResponse:(_Bool)arg3;
- (void)shareWithOptions:(id)arg1;
- (void)share:(id)arg1;
- (struct CGRect)getPopupRectFromIPadPopupCoordinates:(id)arg1;
- (void)setIPadPopupCoordinates:(id)arg1;
- (id)getIPadPopupCoordinates;
- (void)available:(id)arg1;
- (void)pluginInitialize;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PushPlugin : CDVPlugin
{
    NSDictionary *notificationMessage;
    _Bool isInline;
    NSString *notificationCallbackId;
    NSString *callback;
    _Bool clearBadge;
    NSMutableDictionary *handlerObj;
    CDUnknownBlockType completionHandler;
    _Bool ready;
    _Bool coldstart;
    _Bool usesFCM;
    NSString *callbackId;
    NSNumber *fcmSandbox;
    NSString *fcmSenderId;
    NSDictionary *fcmRegistrationOptions;
    NSString *fcmRegistrationToken;
    NSArray *fcmTopics;
}

@property(retain, nonatomic) NSArray *fcmTopics; // @synthesize fcmTopics;
@property(retain, nonatomic) NSString *fcmRegistrationToken; // @synthesize fcmRegistrationToken;
@property(retain, nonatomic) NSDictionary *fcmRegistrationOptions; // @synthesize fcmRegistrationOptions;
@property(retain, nonatomic) NSString *fcmSenderId; // @synthesize fcmSenderId;
@property(retain, nonatomic) NSNumber *fcmSandbox; // @synthesize fcmSandbox;
@property(nonatomic) _Bool usesFCM; // @synthesize usesFCM;
@property(retain, nonatomic) NSMutableDictionary *handlerObj; // @synthesize handlerObj;
@property _Bool clearBadge; // @synthesize clearBadge;
@property(copy, nonatomic) NSString *callback; // @synthesize callback;
@property(copy, nonatomic) NSString *notificationCallbackId; // @synthesize notificationCallbackId;
@property(copy, nonatomic) NSString *callbackId; // @synthesize callbackId;
@property _Bool coldstart; // @synthesize coldstart;
@property _Bool isInline; // @synthesize isInline;
@property(retain, nonatomic) NSDictionary *notificationMessage; // @synthesize notificationMessage;
- (void).cxx_destruct;
- (void)stopBackgroundTask:(id)arg1;
- (void)finish:(id)arg1;
- (void)failWithMessage:(id)arg1 withMsg:(id)arg2 withError:(id)arg3;
- (void)registerWithToken:(id)arg1;
- (void)successWithMessage:(id)arg1 withMsg:(id)arg2;
- (void)hasPermission:(id)arg1;
- (void)clearAllNotifications:(id)arg1;
- (void)getApplicationIconBadgeNumber:(id)arg1;
- (void)setApplicationIconBadgeNumber:(id)arg1;
- (void)notificationReceived;
- (void)didFailToRegisterForRemoteNotificationsWithError:(id)arg1;
- (void)didRegisterForRemoteNotificationsWithDeviceToken:(id)arg1;
- (id)createAction:(id)arg1;
- (void)init:(id)arg1;
- (void)unsubscribe:(id)arg1;
- (void)subscribe:(id)arg1;
- (void)unregister:(id)arg1;
- (void)didDeleteMessagesOnServer;
- (void)willSendDataMessageWithID:(id)arg1 error:(id)arg2;
- (void)didSendDataMessageWithID:(id)arg1;
- (void)sendDataMessageSuccess:(id)arg1;
- (void)sendDataMessageFailure:(id)arg1;
- (void)onTokenRefresh;
- (void)initRegistration;

@end

@interface CDVSplashScreen : CDVPlugin
{
    UIActivityIndicatorView *_activityView;
    UIImageView *_imageView;
    NSString *_curImageName;
    _Bool _visible;
    _Bool _destroyed;
}

- (void).cxx_destruct;
- (void)setVisible:(_Bool)arg1 andForce:(_Bool)arg2;
- (void)setVisible:(_Bool)arg1;
- (void)updateBounds;
- (void)updateImage;
- (long long)getCurrentOrientation;
- (id)getImageName:(long long)arg1 delegate:(id)arg2 device:(CDStruct_90d8b0f6)arg3;
- (_Bool)isUsingCDVLaunchScreen;
- (CDStruct_90d8b0f6)getCurrentDevice;
- (void)destroyViews;
- (void)hideViews;
- (void)createViews;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)pageDidLoad;
- (void)hide:(id)arg1;
- (void)show:(id)arg1;
- (void)pluginInitialize;

@end

@interface PodsDummy_GoogleToolboxForMac : NSObject
{
}

@end

@interface GTMLogger : NSObject <GTMLogWriter>
{
    id <GTMLogWriter> writer_;
    id <GTMLogFormatter> formatter_;
    id <GTMLogFilter> filter_;
}

+ (id)logger;
+ (id)loggerWithWriter:(id)arg1 formatter:(id)arg2 filter:(id)arg3;
+ (id)standardLoggerWithPath:(id)arg1;
+ (id)standardLoggerWithStdoutAndStderr;
+ (id)standardLoggerWithStderr;
+ (id)standardLogger;
+ (void)setSharedLogger:(id)arg1;
+ (id)sharedLogger;
- (void)logAssert:(id)arg1;
- (void)logError:(id)arg1;
- (void)logInfo:(id)arg1;
- (void)logDebug:(id)arg1;
- (void)setFilter:(id)arg1;
- (id)filter;
- (void)setFormatter:(id)arg1;
- (id)formatter;
- (void)setWriter:(id)arg1;
- (id)writer;
- (void)dealloc;
- (id)initWithWriter:(id)arg1 formatter:(id)arg2 filter:(id)arg3;
- (id)init;
- (void)logFuncAssert:(const char *)arg1 msg:(id)arg2;
- (void)logFuncError:(const char *)arg1 msg:(id)arg2;
- (void)logFuncInfo:(const char *)arg1 msg:(id)arg2;
- (void)logFuncDebug:(const char *)arg1 msg:(id)arg2;
- (void)logInternalFunc:(const char *)arg1 format:(id)arg2 valist:(char *)arg3 level:(int)arg4;
- (void)logMessage:(id)arg1 level:(int)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GTMLogBasicFormatter : NSObject <GTMLogFormatter>
{
}

- (id)stringForFunc:(id)arg1 withFormat:(id)arg2 valist:(char *)arg3 level:(int)arg4;
- (id)prettyNameForFunc:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GTMLogStandardFormatter : GTMLogBasicFormatter
{
    NSDateFormatter *dateFormatter_;
    NSString *pname_;
    int pid_;
}

- (id)stringForFunc:(id)arg1 withFormat:(id)arg2 valist:(char *)arg3 level:(int)arg4;
- (void)dealloc;
- (id)init;

@end

@interface GTMLogLevelFilter : NSObject <GTMLogFilter>
{
    _Bool verboseLoggingEnabled_;
    NSUserDefaults *userDefaults_;
}

- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (_Bool)filterAllowsMessage:(id)arg1 level:(int)arg2;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GTMLogNoFilter : NSObject <GTMLogFilter>
{
}

- (_Bool)filterAllowsMessage:(id)arg1 level:(int)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GTMLogAllowedLevelFilter : NSObject <GTMLogFilter>
{
    NSIndexSet *allowedLevels_;
}

- (_Bool)filterAllowsMessage:(id)arg1 level:(int)arg2;
- (void)dealloc;
- (id)init;
- (id)initWithAllowedLevels:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GTMLogMininumLevelFilter : GTMLogAllowedLevelFilter
{
}

- (id)initWithMinimumLevel:(int)arg1;

@end

@interface GTMLogMaximumLevelFilter : GTMLogAllowedLevelFilter
{
}

- (id)initWithMaximumLevel:(int)arg1;

@end

@interface GPBAnyRoot : GPBRootObject
{
}

@end

@interface GPBAny : GPBMessage
{
}

+ (id)descriptor;
+ (id)anyWithMessage:(id)arg1 typeURLPrefix:(id)arg2 error:(id *)arg3;
+ (id)anyWithMessage:(id)arg1 error:(id *)arg2;
- (id)unpackMessageClass:(Class)arg1 error:(id *)arg2;
- (_Bool)packWithMessage:(id)arg1 typeURLPrefix:(id)arg2 error:(id *)arg3;
- (_Bool)packWithMessage:(id)arg1 error:(id *)arg2;
- (id)initWithMessage:(id)arg1 typeURLPrefix:(id)arg2 error:(id *)arg3;
- (id)initWithMessage:(id)arg1 error:(id *)arg2;

// Remaining properties
@property(copy, nonatomic) NSString *typeURL; // @dynamic typeURL;
@property(copy, nonatomic) NSData *value; // @dynamic value;

@end

@interface GPBApiRoot : GPBRootObject
{
}

@end

@interface GPBApi : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) _Bool hasSourceContext; // @dynamic hasSourceContext;
@property(retain, nonatomic) NSMutableArray *methodsArray; // @dynamic methodsArray;
@property(readonly, nonatomic) unsigned long long methodsArray_Count; // @dynamic methodsArray_Count;
@property(retain, nonatomic) NSMutableArray *mixinsArray; // @dynamic mixinsArray;
@property(readonly, nonatomic) unsigned long long mixinsArray_Count; // @dynamic mixinsArray_Count;
@property(copy, nonatomic) NSString *name; // @dynamic name;
@property(retain, nonatomic) NSMutableArray *optionsArray; // @dynamic optionsArray;
@property(readonly, nonatomic) unsigned long long optionsArray_Count; // @dynamic optionsArray_Count;
@property(retain, nonatomic) GPBSourceContext *sourceContext; // @dynamic sourceContext;
@property(nonatomic) int syntax; // @dynamic syntax;
@property(copy, nonatomic) NSString *version; // @dynamic version;

@end

@interface GPBMethod : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(copy, nonatomic) NSString *name; // @dynamic name;
@property(retain, nonatomic) NSMutableArray *optionsArray; // @dynamic optionsArray;
@property(readonly, nonatomic) unsigned long long optionsArray_Count; // @dynamic optionsArray_Count;
@property(nonatomic) _Bool requestStreaming; // @dynamic requestStreaming;
@property(copy, nonatomic) NSString *requestTypeURL; // @dynamic requestTypeURL;
@property(nonatomic) _Bool responseStreaming; // @dynamic responseStreaming;
@property(copy, nonatomic) NSString *responseTypeURL; // @dynamic responseTypeURL;
@property(nonatomic) int syntax; // @dynamic syntax;

@end

@interface GPBMixin : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(copy, nonatomic) NSString *name; // @dynamic name;
@property(copy, nonatomic) NSString *root; // @dynamic root;

@end

@interface GPBDurationRoot : GPBRootObject
{
}

@end

@interface GPBDuration : GPBMessage
{
}

+ (id)descriptor;
@property(nonatomic) double timeIntervalSince1970;
@property(nonatomic) double timeInterval;
- (id)initWithTimeIntervalSince1970:(double)arg1;
- (id)initWithTimeInterval:(double)arg1;

// Remaining properties
@property(nonatomic) int nanos; // @dynamic nanos;
@property(nonatomic) long long seconds; // @dynamic seconds;

@end

@interface GPBEmptyRoot : GPBRootObject
{
}

@end

@interface GPBEmpty : GPBMessage
{
}

+ (id)descriptor;

@end

@interface GPBFieldMaskRoot : GPBRootObject
{
}

@end

@interface GPBFieldMask : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(retain, nonatomic) NSMutableArray *pathsArray; // @dynamic pathsArray;
@property(readonly, nonatomic) unsigned long long pathsArray_Count; // @dynamic pathsArray_Count;

@end

@interface GPBInt32Array : NSObject <NSCopying>
{
    GPBMessage *_autocreator;
    int *_values;
    unsigned long long _count;
    unsigned long long _capacity;
}

+ (id)arrayWithCapacity:(unsigned long long)arg1;
+ (id)arrayWithValueArray:(id)arg1;
+ (id)arrayWithValue:(int)arg1;
+ (id)array;
@property(readonly, nonatomic) unsigned long long count; // @synthesize count=_count;
- (void)exchangeValueAtIndex:(unsigned long long)arg1 withValueAtIndex:(unsigned long long)arg2;
- (void)removeAll;
- (void)removeValueAtIndex:(unsigned long long)arg1;
- (void)addValuesFromArray:(id)arg1;
- (void)replaceValueAtIndex:(unsigned long long)arg1 withValue:(int)arg2;
- (void)insertValue:(int)arg1 atIndex:(unsigned long long)arg2;
- (void)addValues:(const int *)arg1 count:(unsigned long long)arg2;
- (void)addValue:(int)arg1;
- (void)internalResizeToCapacity:(unsigned long long)arg1;
- (int)valueAtIndex:(unsigned long long)arg1;
- (void)enumerateValuesWithOptions:(unsigned long long)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (void)enumerateValuesWithBlock:(CDUnknownBlockType)arg1;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)initWithValues:(const int *)arg1 count:(unsigned long long)arg2;
- (id)initWithValueArray:(id)arg1;
- (id)init;

@end

@interface GPBUInt32Array : NSObject <NSCopying>
{
    GPBMessage *_autocreator;
    unsigned int *_values;
    unsigned long long _count;
    unsigned long long _capacity;
}

+ (id)arrayWithCapacity:(unsigned long long)arg1;
+ (id)arrayWithValueArray:(id)arg1;
+ (id)arrayWithValue:(unsigned int)arg1;
+ (id)array;
@property(readonly, nonatomic) unsigned long long count; // @synthesize count=_count;
- (void)exchangeValueAtIndex:(unsigned long long)arg1 withValueAtIndex:(unsigned long long)arg2;
- (void)removeAll;
- (void)removeValueAtIndex:(unsigned long long)arg1;
- (void)addValuesFromArray:(id)arg1;
- (void)replaceValueAtIndex:(unsigned long long)arg1 withValue:(unsigned int)arg2;
- (void)insertValue:(unsigned int)arg1 atIndex:(unsigned long long)arg2;
- (void)addValues:(const unsigned int *)arg1 count:(unsigned long long)arg2;
- (void)addValue:(unsigned int)arg1;
- (void)internalResizeToCapacity:(unsigned long long)arg1;
- (unsigned int)valueAtIndex:(unsigned long long)arg1;
- (void)enumerateValuesWithOptions:(unsigned long long)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (void)enumerateValuesWithBlock:(CDUnknownBlockType)arg1;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)initWithValues:(const unsigned int *)arg1 count:(unsigned long long)arg2;
- (id)initWithValueArray:(id)arg1;
- (id)init;

@end

@interface GPBInt64Array : NSObject <NSCopying>
{
    GPBMessage *_autocreator;
    long long *_values;
    unsigned long long _count;
    unsigned long long _capacity;
}

+ (id)arrayWithCapacity:(unsigned long long)arg1;
+ (id)arrayWithValueArray:(id)arg1;
+ (id)arrayWithValue:(long long)arg1;
+ (id)array;
@property(readonly, nonatomic) unsigned long long count; // @synthesize count=_count;
- (void)exchangeValueAtIndex:(unsigned long long)arg1 withValueAtIndex:(unsigned long long)arg2;
- (void)removeAll;
- (void)removeValueAtIndex:(unsigned long long)arg1;
- (void)addValuesFromArray:(id)arg1;
- (void)replaceValueAtIndex:(unsigned long long)arg1 withValue:(long long)arg2;
- (void)insertValue:(long long)arg1 atIndex:(unsigned long long)arg2;
- (void)addValues:(const long long *)arg1 count:(unsigned long long)arg2;
- (void)addValue:(long long)arg1;
- (void)internalResizeToCapacity:(unsigned long long)arg1;
- (long long)valueAtIndex:(unsigned long long)arg1;
- (void)enumerateValuesWithOptions:(unsigned long long)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (void)enumerateValuesWithBlock:(CDUnknownBlockType)arg1;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)initWithValues:(const long long *)arg1 count:(unsigned long long)arg2;
- (id)initWithValueArray:(id)arg1;
- (id)init;

@end

@interface GPBUInt64Array : NSObject <NSCopying>
{
    GPBMessage *_autocreator;
    unsigned long long *_values;
    unsigned long long _count;
    unsigned long long _capacity;
}

+ (id)arrayWithCapacity:(unsigned long long)arg1;
+ (id)arrayWithValueArray:(id)arg1;
+ (id)arrayWithValue:(unsigned long long)arg1;
+ (id)array;
@property(readonly, nonatomic) unsigned long long count; // @synthesize count=_count;
- (void)exchangeValueAtIndex:(unsigned long long)arg1 withValueAtIndex:(unsigned long long)arg2;
- (void)removeAll;
- (void)removeValueAtIndex:(unsigned long long)arg1;
- (void)addValuesFromArray:(id)arg1;
- (void)replaceValueAtIndex:(unsigned long long)arg1 withValue:(unsigned long long)arg2;
- (void)insertValue:(unsigned long long)arg1 atIndex:(unsigned long long)arg2;
- (void)addValues:(const unsigned long long *)arg1 count:(unsigned long long)arg2;
- (void)addValue:(unsigned long long)arg1;
- (void)internalResizeToCapacity:(unsigned long long)arg1;
- (unsigned long long)valueAtIndex:(unsigned long long)arg1;
- (void)enumerateValuesWithOptions:(unsigned long long)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (void)enumerateValuesWithBlock:(CDUnknownBlockType)arg1;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)initWithValues:(const unsigned long long *)arg1 count:(unsigned long long)arg2;
- (id)initWithValueArray:(id)arg1;
- (id)init;

@end

@interface GPBFloatArray : NSObject <NSCopying>
{
    GPBMessage *_autocreator;
    float *_values;
    unsigned long long _count;
    unsigned long long _capacity;
}

+ (id)arrayWithCapacity:(unsigned long long)arg1;
+ (id)arrayWithValueArray:(id)arg1;
+ (id)arrayWithValue:(float)arg1;
+ (id)array;
@property(readonly, nonatomic) unsigned long long count; // @synthesize count=_count;
- (void)exchangeValueAtIndex:(unsigned long long)arg1 withValueAtIndex:(unsigned long long)arg2;
- (void)removeAll;
- (void)removeValueAtIndex:(unsigned long long)arg1;
- (void)addValuesFromArray:(id)arg1;
- (void)replaceValueAtIndex:(unsigned long long)arg1 withValue:(float)arg2;
- (void)insertValue:(float)arg1 atIndex:(unsigned long long)arg2;
- (void)addValues:(const float *)arg1 count:(unsigned long long)arg2;
- (void)addValue:(float)arg1;
- (void)internalResizeToCapacity:(unsigned long long)arg1;
- (float)valueAtIndex:(unsigned long long)arg1;
- (void)enumerateValuesWithOptions:(unsigned long long)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (void)enumerateValuesWithBlock:(CDUnknownBlockType)arg1;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)initWithValues:(const float *)arg1 count:(unsigned long long)arg2;
- (id)initWithValueArray:(id)arg1;
- (id)init;

@end

@interface GPBDoubleArray : NSObject <NSCopying>
{
    GPBMessage *_autocreator;
    double *_values;
    unsigned long long _count;
    unsigned long long _capacity;
}

+ (id)arrayWithCapacity:(unsigned long long)arg1;
+ (id)arrayWithValueArray:(id)arg1;
+ (id)arrayWithValue:(double)arg1;
+ (id)array;
@property(readonly, nonatomic) unsigned long long count; // @synthesize count=_count;
- (void)exchangeValueAtIndex:(unsigned long long)arg1 withValueAtIndex:(unsigned long long)arg2;
- (void)removeAll;
- (void)removeValueAtIndex:(unsigned long long)arg1;
- (void)addValuesFromArray:(id)arg1;
- (void)replaceValueAtIndex:(unsigned long long)arg1 withValue:(double)arg2;
- (void)insertValue:(double)arg1 atIndex:(unsigned long long)arg2;
- (void)addValues:(const double *)arg1 count:(unsigned long long)arg2;
- (void)addValue:(double)arg1;
- (void)internalResizeToCapacity:(unsigned long long)arg1;
- (double)valueAtIndex:(unsigned long long)arg1;
- (void)enumerateValuesWithOptions:(unsigned long long)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (void)enumerateValuesWithBlock:(CDUnknownBlockType)arg1;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)initWithValues:(const double *)arg1 count:(unsigned long long)arg2;
- (id)initWithValueArray:(id)arg1;
- (id)init;

@end

@interface GPBBoolArray : NSObject <NSCopying>
{
    GPBMessage *_autocreator;
    _Bool *_values;
    unsigned long long _count;
    unsigned long long _capacity;
}

+ (id)arrayWithCapacity:(unsigned long long)arg1;
+ (id)arrayWithValueArray:(id)arg1;
+ (id)arrayWithValue:(_Bool)arg1;
+ (id)array;
@property(readonly, nonatomic) unsigned long long count; // @synthesize count=_count;
- (void)exchangeValueAtIndex:(unsigned long long)arg1 withValueAtIndex:(unsigned long long)arg2;
- (void)removeAll;
- (void)removeValueAtIndex:(unsigned long long)arg1;
- (void)addValuesFromArray:(id)arg1;
- (void)replaceValueAtIndex:(unsigned long long)arg1 withValue:(_Bool)arg2;
- (void)insertValue:(_Bool)arg1 atIndex:(unsigned long long)arg2;
- (void)addValues:(const _Bool *)arg1 count:(unsigned long long)arg2;
- (void)addValue:(_Bool)arg1;
- (void)internalResizeToCapacity:(unsigned long long)arg1;
- (_Bool)valueAtIndex:(unsigned long long)arg1;
- (void)enumerateValuesWithOptions:(unsigned long long)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (void)enumerateValuesWithBlock:(CDUnknownBlockType)arg1;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)initWithValues:(const _Bool *)arg1 count:(unsigned long long)arg2;
- (id)initWithValueArray:(id)arg1;
- (id)init;

@end

@interface GPBEnumArray : NSObject <NSCopying>
{
    GPBMessage *_autocreator;
    CDUnknownFunctionPointerType _validationFunc;
    int *_values;
    unsigned long long _count;
    unsigned long long _capacity;
}

+ (id)arrayWithValidationFunction:(CDUnknownFunctionPointerType)arg1 capacity:(unsigned long long)arg2;
+ (id)arrayWithValueArray:(id)arg1;
+ (id)arrayWithValidationFunction:(CDUnknownFunctionPointerType)arg1 rawValue:(int)arg2;
+ (id)arrayWithValidationFunction:(CDUnknownFunctionPointerType)arg1;
+ (id)array;
@property(readonly, nonatomic) CDUnknownFunctionPointerType validationFunc; // @synthesize validationFunc=_validationFunc;
@property(readonly, nonatomic) unsigned long long count; // @synthesize count=_count;
- (void)replaceValueAtIndex:(unsigned long long)arg1 withValue:(int)arg2;
- (void)insertValue:(int)arg1 atIndex:(unsigned long long)arg2;
- (void)addValues:(const int *)arg1 count:(unsigned long long)arg2;
- (void)addValue:(int)arg1;
- (void)exchangeValueAtIndex:(unsigned long long)arg1 withValueAtIndex:(unsigned long long)arg2;
- (void)removeAll;
- (void)removeValueAtIndex:(unsigned long long)arg1;
- (void)addRawValuesFromArray:(id)arg1;
- (void)replaceValueAtIndex:(unsigned long long)arg1 withRawValue:(int)arg2;
- (void)insertRawValue:(int)arg1 atIndex:(unsigned long long)arg2;
- (void)addRawValues:(const int *)arg1 count:(unsigned long long)arg2;
- (void)addRawValue:(int)arg1;
- (void)internalResizeToCapacity:(unsigned long long)arg1;
- (void)enumerateValuesWithOptions:(unsigned long long)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (void)enumerateValuesWithBlock:(CDUnknownBlockType)arg1;
- (int)rawValueAtIndex:(unsigned long long)arg1;
- (int)valueAtIndex:(unsigned long long)arg1;
- (void)enumerateRawValuesWithOptions:(unsigned long long)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (void)enumerateRawValuesWithBlock:(CDUnknownBlockType)arg1;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithValidationFunction:(CDUnknownFunctionPointerType)arg1 capacity:(unsigned long long)arg2;
- (id)initWithValidationFunction:(CDUnknownFunctionPointerType)arg1 rawValues:(const int *)arg2 count:(unsigned long long)arg3;
- (id)initWithValidationFunction:(CDUnknownFunctionPointerType)arg1;
- (id)initWithValueArray:(id)arg1;
- (id)init;

@end

@interface GPBAutocreatedArray : NSMutableArray
{
    GPBMessage *_autocreator;
    NSMutableArray *_array;
}

- (void)enumerateObjectsWithOptions:(unsigned long long)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (void)enumerateObjectsUsingBlock:(CDUnknownBlockType)arg1;
- (unsigned long long)countByEnumeratingWithState:(CDStruct_70511ce9 *)arg1 objects:(id *)arg2 count:(unsigned long long)arg3;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)replaceObjectAtIndex:(unsigned long long)arg1 withObject:(id)arg2;
- (void)removeLastObject;
- (void)addObject:(id)arg1;
- (void)removeObjectAtIndex:(unsigned long long)arg1;
- (void)removeObject:(id)arg1;
- (void)insertObject:(id)arg1 atIndex:(unsigned long long)arg2;
- (id)objectAtIndex:(unsigned long long)arg1;
- (unsigned long long)count;
- (void)dealloc;

@end

@interface GPBCodedInputStream : NSObject
{
    struct GPBCodedInputStreamState state_;
    NSData *buffer_;
}

+ (id)streamWithData:(id)arg1;
- (long long)readSInt64;
- (int)readSInt32;
- (long long)readSFixed64;
- (int)readSFixed32;
- (int)readEnum;
- (unsigned int)readUInt32;
- (id)readBytes;
- (void)readMapEntry:(id)arg1 extensionRegistry:(id)arg2 field:(id)arg3 parentMessage:(id)arg4;
- (void)readMessage:(id)arg1 extensionRegistry:(id)arg2;
- (void)readUnknownGroup:(int)arg1 message:(id)arg2;
- (void)readGroup:(int)arg1 message:(id)arg2 extensionRegistry:(id)arg3;
- (id)readString;
- (_Bool)readBool;
- (unsigned int)readFixed32;
- (unsigned long long)readFixed64;
- (int)readInt32;
- (long long)readInt64;
- (unsigned long long)readUInt64;
- (float)readFloat;
- (double)readDouble;
- (void)popLimit:(unsigned long long)arg1;
- (unsigned long long)pushLimit:(unsigned long long)arg1;
- (unsigned long long)position;
- (_Bool)isAtEnd;
- (void)skipMessage;
- (_Bool)skipField:(int)arg1;
- (void)checkLastTagWas:(int)arg1;
- (int)readTag;
- (void)dealloc;
- (id)initWithData:(id)arg1;

@end

@interface GPBCodedOutputStream : NSObject
{
    struct GPBOutputBufferState state_;
    NSMutableData *buffer_;
}

+ (id)streamWithData:(id)arg1;
+ (id)streamWithOutputStream:(id)arg1;
- (void)writeRawLittleEndian64:(long long)arg1;
- (void)writeRawLittleEndian32:(int)arg1;
- (void)writeRawVarint64:(long long)arg1;
- (void)writeRawVarintSizeTAs32:(unsigned long long)arg1;
- (void)writeRawVarint32:(int)arg1;
- (void)writeTag:(unsigned int)arg1 format:(int)arg2;
- (void)writeRawPtr:(const void *)arg1 offset:(unsigned long long)arg2 length:(unsigned long long)arg3;
- (void)writeRawData:(id)arg1;
- (void)writeRawByte:(unsigned char)arg1;
- (void)flush;
- (void)writeRawMessageSetExtension:(int)arg1 value:(id)arg2;
- (void)writeMessageSetExtension:(int)arg1 value:(id)arg2;
- (void)writeUnknownGroupArray:(int)arg1 values:(id)arg2;
- (void)writeGroupArray:(int)arg1 values:(id)arg2;
- (void)writeBytesArray:(int)arg1 values:(id)arg2;
- (void)writeMessageArray:(int)arg1 values:(id)arg2;
- (void)writeStringArray:(int)arg1 values:(id)arg2;
- (void)writeEnumArray:(int)arg1 values:(id)arg2 tag:(unsigned int)arg3;
- (void)writeBoolArray:(int)arg1 values:(id)arg2 tag:(unsigned int)arg3;
- (void)writeSFixed32Array:(int)arg1 values:(id)arg2 tag:(unsigned int)arg3;
- (void)writeSFixed64Array:(int)arg1 values:(id)arg2 tag:(unsigned int)arg3;
- (void)writeSInt64Array:(int)arg1 values:(id)arg2 tag:(unsigned int)arg3;
- (void)writeSInt32Array:(int)arg1 values:(id)arg2 tag:(unsigned int)arg3;
- (void)writeFixed32Array:(int)arg1 values:(id)arg2 tag:(unsigned int)arg3;
- (void)writeFixed64Array:(int)arg1 values:(id)arg2 tag:(unsigned int)arg3;
- (void)writeUInt32Array:(int)arg1 values:(id)arg2 tag:(unsigned int)arg3;
- (void)writeInt32Array:(int)arg1 values:(id)arg2 tag:(unsigned int)arg3;
- (void)writeInt64Array:(int)arg1 values:(id)arg2 tag:(unsigned int)arg3;
- (void)writeUInt64Array:(int)arg1 values:(id)arg2 tag:(unsigned int)arg3;
- (void)writeFloatArray:(int)arg1 values:(id)arg2 tag:(unsigned int)arg3;
- (void)writeDoubleArray:(int)arg1 values:(id)arg2 tag:(unsigned int)arg3;
- (void)writeSInt64:(int)arg1 value:(long long)arg2;
- (void)writeSInt64NoTag:(long long)arg1;
- (void)writeSInt32:(int)arg1 value:(int)arg2;
- (void)writeSInt32NoTag:(int)arg1;
- (void)writeSFixed64:(int)arg1 value:(long long)arg2;
- (void)writeSFixed64NoTag:(long long)arg1;
- (void)writeSFixed32:(int)arg1 value:(int)arg2;
- (void)writeSFixed32NoTag:(int)arg1;
- (void)writeEnum:(int)arg1 value:(int)arg2;
- (void)writeEnumNoTag:(int)arg1;
- (void)writeUInt32:(int)arg1 value:(unsigned int)arg2;
- (void)writeUInt32NoTag:(unsigned int)arg1;
- (void)writeBytes:(int)arg1 value:(id)arg2;
- (void)writeBytesNoTag:(id)arg1;
- (void)writeMessage:(int)arg1 value:(id)arg2;
- (void)writeMessageNoTag:(id)arg1;
- (void)writeUnknownGroup:(int)arg1 value:(id)arg2;
- (void)writeUnknownGroupNoTag:(int)arg1 value:(id)arg2;
- (void)writeGroup:(int)arg1 value:(id)arg2;
- (void)writeGroupNoTag:(int)arg1 value:(id)arg2;
- (void)writeString:(int)arg1 value:(id)arg2;
- (void)writeStringNoTag:(id)arg1;
- (void)writeBool:(int)arg1 value:(_Bool)arg2;
- (void)writeBoolNoTag:(_Bool)arg1;
- (void)writeFixed32:(int)arg1 value:(unsigned int)arg2;
- (void)writeFixed32NoTag:(unsigned int)arg1;
- (void)writeFixed64:(int)arg1 value:(unsigned long long)arg2;
- (void)writeFixed64NoTag:(unsigned long long)arg1;
- (void)writeInt32:(int)arg1 value:(int)arg2;
- (void)writeInt32NoTag:(int)arg1;
- (void)writeInt64:(int)arg1 value:(long long)arg2;
- (void)writeInt64NoTag:(long long)arg1;
- (void)writeUInt64:(int)arg1 value:(unsigned long long)arg2;
- (void)writeUInt64NoTag:(unsigned long long)arg1;
- (void)writeFloat:(int)arg1 value:(float)arg2;
- (void)writeFloatNoTag:(float)arg1;
- (void)writeDouble:(int)arg1 value:(double)arg2;
- (void)writeDoubleNoTag:(double)arg1;
- (id)initWithOutputStream:(id)arg1 data:(id)arg2;
- (id)initWithData:(id)arg1;
- (id)initWithOutputStream:(id)arg1;
- (void)dealloc;

@end

@interface GPBDescriptor : NSObject <NSCopying>
{
    NSArray *fields_;
    NSArray *oneofs_;
    unsigned int storageSize_;
    Class messageClass_;
    GPBFileDescriptor *file_;
    _Bool wireFormat_;
    unsigned int extensionRangesCount_;
    const struct GPBExtensionRange *extensionRanges_;
}

+ (id)allocDescriptorForClass:(Class)arg1 rootClass:(Class)arg2 file:(id)arg3 fields:(void *)arg4 fieldCount:(unsigned int)arg5 storageSize:(unsigned int)arg6 flags:(unsigned int)arg7;
@property(readonly, nonatomic, getter=isWireFormat) _Bool wireFormat; // @synthesize wireFormat=wireFormat_;
@property(readonly, nonatomic) GPBFileDescriptor *file; // @synthesize file=file_;
@property(readonly, nonatomic) unsigned int extensionRangesCount; // @synthesize extensionRangesCount=extensionRangesCount_;
@property(readonly, nonatomic) const struct GPBExtensionRange *extensionRanges; // @synthesize extensionRanges=extensionRanges_;
@property(readonly, nonatomic) NSArray *oneofs; // @synthesize oneofs=oneofs_;
@property(readonly, nonatomic) NSArray *fields; // @synthesize fields=fields_;
@property(readonly, nonatomic) Class messageClass; // @synthesize messageClass=messageClass_;
- (id)oneofWithName:(id)arg1;
- (id)fieldWithName:(id)arg1;
- (id)fieldWithNumber:(unsigned int)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
@property(readonly) NSString *fullName;
@property(readonly) GPBDescriptor *containingType;
@property(readonly, copy, nonatomic) NSString *name;
- (void)setupMessageClassNameSuffix:(id)arg1;
- (void)setupContainingMessageClassName:(const char *)arg1;
- (void)setupExtensionRanges:(const struct GPBExtensionRange *)arg1 count:(int)arg2;
- (void)setupExtraTextInfo:(const char *)arg1;
- (void)setupOneofs:(const char **)arg1 count:(unsigned int)arg2 firstHasIndex:(int)arg3;
- (void)dealloc;
- (id)initWithClass:(Class)arg1 file:(id)arg2 fields:(id)arg3 storageSize:(unsigned int)arg4 wireFormat:(_Bool)arg5;

@end

@interface GPBFileDescriptor : NSObject
{
    NSString *package_;
    NSString *objcPrefix_;
    unsigned char syntax_;
}

@property(readonly, nonatomic) unsigned char syntax; // @synthesize syntax=syntax_;
@property(readonly, copy, nonatomic) NSString *objcPrefix; // @synthesize objcPrefix=objcPrefix_;
@property(readonly, copy, nonatomic) NSString *package; // @synthesize package=package_;
- (void)dealloc;
- (id)initWithPackage:(id)arg1 syntax:(unsigned char)arg2;
- (id)initWithPackage:(id)arg1 objcPrefix:(id)arg2 syntax:(unsigned char)arg3;

@end

@interface GPBOneofDescriptor : NSObject
{
    const char *name_;
    NSArray *fields_;
    SEL caseSel_;
}

@property(readonly, nonatomic) NSArray *fields; // @synthesize fields=fields_;
- (id)fieldWithName:(id)arg1;
- (id)fieldWithNumber:(unsigned int)arg1;
@property(readonly, nonatomic) NSString *name;
- (void)dealloc;
- (id)initWithName:(const char *)arg1 fields:(id)arg2;

@end

@interface GPBFieldDescriptor : NSObject
{
    struct GPBMessageFieldDescription *description_;
    GPBOneofDescriptor *containingOneof_;
    SEL getSel_;
    SEL setSel_;
    SEL hasOrCountSel_;
    SEL setHasSel_;
    CDUnion_88782d86 defaultValue_;
    Class msgClass_;
    union {
        GPBEnumDescriptor *enumDescriptor_;
        CDUnknownFunctionPointerType enumVerifier_;
    } enumHandling_;
}

@property(readonly, nonatomic) GPBOneofDescriptor *containingOneof; // @synthesize containingOneof=containingOneof_;
@property(readonly, nonatomic) Class msgClass; // @synthesize msgClass=msgClass_;
- (id)textFormatName;
@property(readonly, nonatomic) CDUnion_88782d86 defaultValue;
@property(readonly, nonatomic) GPBEnumDescriptor *enumDescriptor;
- (_Bool)isValidEnumValue:(int)arg1;
@property(readonly, nonatomic, getter=isPackable) _Bool packable;
@property(readonly, nonatomic) unsigned char mapKeyDataType;
@property(readonly, nonatomic) unsigned char fieldType;
@property(readonly, nonatomic, getter=isOptional) _Bool optional;
@property(readonly, nonatomic, getter=isRequired) _Bool required;
@property(readonly, copy, nonatomic) NSString *name;
@property(readonly, nonatomic) unsigned int number;
@property(readonly, nonatomic) _Bool hasDefaultValue;
@property(readonly, nonatomic) unsigned char dataType;
- (void)dealloc;
- (id)initWithFieldDescription:(void *)arg1 includesDefault:(_Bool)arg2 syntax:(unsigned char)arg3;
- (id)init;

@end

@interface GPBEnumDescriptor : NSObject
{
    NSString *name_;
    const char *valueNames_;
    const int *values_;
    CDUnknownFunctionPointerType enumVerifier_;
    const char *extraTextFormatInfo_;
    unsigned int *nameOffsets_;
    unsigned int valueCount_;
}

+ (id)allocDescriptorForName:(id)arg1 valueNames:(const char *)arg2 values:(const int *)arg3 count:(unsigned int)arg4 enumVerifier:(CDUnknownFunctionPointerType)arg5 extraTextFormatInfo:(const char *)arg6;
+ (id)allocDescriptorForName:(id)arg1 valueNames:(const char *)arg2 values:(const int *)arg3 count:(unsigned int)arg4 enumVerifier:(CDUnknownFunctionPointerType)arg5;
@property(readonly, nonatomic) CDUnknownFunctionPointerType enumVerifier; // @synthesize enumVerifier=enumVerifier_;
@property(readonly, copy, nonatomic) NSString *name; // @synthesize name=name_;
- (id)textFormatNameForValue:(int)arg1;
- (_Bool)getValue:(int *)arg1 forEnumTextFormatName:(id)arg2;
- (_Bool)getValue:(int *)arg1 forEnumName:(id)arg2;
- (id)enumNameForValue:(int)arg1;
- (void)calcValueNameOffsets;
- (void)dealloc;
- (id)initWithName:(id)arg1 valueNames:(const char *)arg2 values:(const int *)arg3 count:(unsigned int)arg4 enumVerifier:(CDUnknownFunctionPointerType)arg5;

@end

@interface GPBExtensionDescriptor : NSObject <NSCopying>
{
    struct GPBExtensionDescription *description_;
    CDUnion_88782d86 defaultValue_;
    Class containingMessageClass_;
}

@property(readonly, nonatomic) Class containingMessageClass; // @synthesize containingMessageClass=containingMessageClass_;
- (long long)compareByFieldNumber:(id)arg1;
@property(readonly, nonatomic) id defaultValue;
@property(readonly, nonatomic) GPBEnumDescriptor *enumDescriptor;
@property(readonly, nonatomic) Class msgClass;
@property(readonly, nonatomic, getter=isPackable) _Bool packable;
@property(readonly, nonatomic, getter=isRepeated) _Bool repeated;
@property(readonly, nonatomic) int alternateWireType;
@property(readonly, nonatomic) int wireType;
@property(readonly, nonatomic) unsigned char dataType;
@property(readonly, nonatomic) unsigned int fieldNumber;
- (const char *)singletonNameC;
@property(readonly, nonatomic) NSString *singletonName;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithExtensionDescription:(struct GPBExtensionDescription *)arg1;

@end

@interface GPBUInt32UInt32Dictionary : NSObject <GPBDictionaryInternalsProtocol, NSCopying>
{
    GPBMessage *_autocreator;
    NSMutableDictionary *_dictionary;
}

+ (id)dictionaryWithCapacity:(unsigned long long)arg1;
+ (id)dictionaryWithDictionary:(id)arg1;
+ (id)dictionaryWithUInt32s:(const unsigned int *)arg1 forKeys:(const unsigned int *)arg2 count:(unsigned long long)arg3;
+ (id)dictionaryWithUInt32:(unsigned int)arg1 forKey:(unsigned int)arg2;
+ (id)dictionary;
- (void)removeAll;
- (void)removeUInt32ForKey:(unsigned int)arg1;
- (void)setUInt32:(unsigned int)arg1 forKey:(unsigned int)arg2;
- (void)addEntriesFromDictionary:(id)arg1;
- (_Bool)getUInt32:(unsigned int *)arg1 forKey:(unsigned int)arg2;
- (void)enumerateForTextFormat:(CDUnknownBlockType)arg1;
- (void)setGPBGenericValue:(CDUnion_88782d86 *)arg1 forGPBGenericValueKey:(CDUnion_88782d86 *)arg2;
- (void)writeToCodedOutputStream:(id)arg1 asField:(id)arg2;
- (unsigned long long)computeSerializedSizeAsField:(id)arg1;
- (void)enumerateKeysAndUInt32sUsingBlock:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) unsigned long long count;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)initWithUInt32s:(const unsigned int *)arg1 forKeys:(const unsigned int *)arg2 count:(unsigned long long)arg3;
- (id)init;

@end

@interface GPBUInt32Int32Dictionary : NSObject <GPBDictionaryInternalsProtocol, NSCopying>
{
    GPBMessage *_autocreator;
    NSMutableDictionary *_dictionary;
}

+ (id)dictionaryWithCapacity:(unsigned long long)arg1;
+ (id)dictionaryWithDictionary:(id)arg1;
+ (id)dictionaryWithInt32s:(const int *)arg1 forKeys:(const unsigned int *)arg2 count:(unsigned long long)arg3;
+ (id)dictionaryWithInt32:(int)arg1 forKey:(unsigned int)arg2;
+ (id)dictionary;
- (void)removeAll;
- (void)removeInt32ForKey:(unsigned int)arg1;
- (void)setInt32:(int)arg1 forKey:(unsigned int)arg2;
- (void)addEntriesFromDictionary:(id)arg1;
- (_Bool)getInt32:(int *)arg1 forKey:(unsigned int)arg2;
- (void)enumerateForTextFormat:(CDUnknownBlockType)arg1;
- (void)setGPBGenericValue:(CDUnion_88782d86 *)arg1 forGPBGenericValueKey:(CDUnion_88782d86 *)arg2;
- (void)writeToCodedOutputStream:(id)arg1 asField:(id)arg2;
- (unsigned long long)computeSerializedSizeAsField:(id)arg1;
- (void)enumerateKeysAndInt32sUsingBlock:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) unsigned long long count;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)initWithInt32s:(const int *)arg1 forKeys:(const unsigned int *)arg2 count:(unsigned long long)arg3;
- (id)init;

@end

@interface GPBUInt32UInt64Dictionary : NSObject <GPBDictionaryInternalsProtocol, NSCopying>
{
    GPBMessage *_autocreator;
    NSMutableDictionary *_dictionary;
}

+ (id)dictionaryWithCapacity:(unsigned long long)arg1;
+ (id)dictionaryWithDictionary:(id)arg1;
+ (id)dictionaryWithUInt64s:(const unsigned long long *)arg1 forKeys:(const unsigned int *)arg2 count:(unsigned long long)arg3;
+ (id)dictionaryWithUInt64:(unsigned long long)arg1 forKey:(unsigned int)arg2;
+ (id)dictionary;
- (void)removeAll;
- (void)removeUInt64ForKey:(unsigned int)arg1;
- (void)setUInt64:(unsigned long long)arg1 forKey:(unsigned int)arg2;
- (void)addEntriesFromDictionary:(id)arg1;
- (_Bool)getUInt64:(unsigned long long *)arg1 forKey:(unsigned int)arg2;
- (void)enumerateForTextFormat:(CDUnknownBlockType)arg1;
- (void)setGPBGenericValue:(CDUnion_88782d86 *)arg1 forGPBGenericValueKey:(CDUnion_88782d86 *)arg2;
- (void)writeToCodedOutputStream:(id)arg1 asField:(id)arg2;
- (unsigned long long)computeSerializedSizeAsField:(id)arg1;
- (void)enumerateKeysAndUInt64sUsingBlock:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) unsigned long long count;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)initWithUInt64s:(const unsigned long long *)arg1 forKeys:(const unsigned int *)arg2 count:(unsigned long long)arg3;
- (id)init;

@end

@interface GPBUInt32Int64Dictionary : NSObject <GPBDictionaryInternalsProtocol, NSCopying>
{
    GPBMessage *_autocreator;
    NSMutableDictionary *_dictionary;
}

+ (id)dictionaryWithCapacity:(unsigned long long)arg1;
+ (id)dictionaryWithDictionary:(id)arg1;
+ (id)dictionaryWithInt64s:(const long long *)arg1 forKeys:(const unsigned int *)arg2 count:(unsigned long long)arg3;
+ (id)dictionaryWithInt64:(long long)arg1 forKey:(unsigned int)arg2;
+ (id)dictionary;
- (void)removeAll;
- (void)removeInt64ForKey:(unsigned int)arg1;
- (void)setInt64:(long long)arg1 forKey:(unsigned int)arg2;
- (void)addEntriesFromDictionary:(id)arg1;
- (_Bool)getInt64:(long long *)arg1 forKey:(unsigned int)arg2;
- (void)enumerateForTextFormat:(CDUnknownBlockType)arg1;
- (void)setGPBGenericValue:(CDUnion_88782d86 *)arg1 forGPBGenericValueKey:(CDUnion_88782d86 *)arg2;
- (void)writeToCodedOutputStream:(id)arg1 asField:(id)arg2;
- (unsigned long long)computeSerializedSizeAsField:(id)arg1;
- (void)enumerateKeysAndInt64sUsingBlock:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) unsigned long long count;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)initWithInt64s:(const long long *)arg1 forKeys:(const unsigned int *)arg2 count:(unsigned long long)arg3;
- (id)init;

@end

@interface GPBUInt32BoolDictionary : NSObject <GPBDictionaryInternalsProtocol, NSCopying>
{
    GPBMessage *_autocreator;
    NSMutableDictionary *_dictionary;
}

+ (id)dictionaryWithCapacity:(unsigned long long)arg1;
+ (id)dictionaryWithDictionary:(id)arg1;
+ (id)dictionaryWithBools:(const _Bool *)arg1 forKeys:(const unsigned int *)arg2 count:(unsigned long long)arg3;
+ (id)dictionaryWithBool:(_Bool)arg1 forKey:(unsigned int)arg2;
+ (id)dictionary;
- (void)removeAll;
- (void)removeBoolForKey:(unsigned int)arg1;
- (void)setBool:(_Bool)arg1 forKey:(unsigned int)arg2;
- (void)addEntriesFromDictionary:(id)arg1;
- (_Bool)getBool:(_Bool *)arg1 forKey:(unsigned int)arg2;
- (void)enumerateForTextFormat:(CDUnknownBlockType)arg1;
- (void)setGPBGenericValue:(CDUnion_88782d86 *)arg1 forGPBGenericValueKey:(CDUnion_88782d86 *)arg2;
- (void)writeToCodedOutputStream:(id)arg1 asField:(id)arg2;
- (unsigned long long)computeSerializedSizeAsField:(id)arg1;
- (void)enumerateKeysAndBoolsUsingBlock:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) unsigned long long count;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)initWithBools:(const _Bool *)arg1 forKeys:(const unsigned int *)arg2 count:(unsigned long long)arg3;
- (id)init;

@end

@interface GPBUInt32FloatDictionary : NSObject <GPBDictionaryInternalsProtocol, NSCopying>
{
    GPBMessage *_autocreator;
    NSMutableDictionary *_dictionary;
}

+ (id)dictionaryWithCapacity:(unsigned long long)arg1;
+ (id)dictionaryWithDictionary:(id)arg1;
+ (id)dictionaryWithFloats:(const float *)arg1 forKeys:(const unsigned int *)arg2 count:(unsigned long long)arg3;
+ (id)dictionaryWithFloat:(float)arg1 forKey:(unsigned int)arg2;
+ (id)dictionary;
- (void)removeAll;
- (void)removeFloatForKey:(unsigned int)arg1;
- (void)setFloat:(float)arg1 forKey:(unsigned int)arg2;
- (void)addEntriesFromDictionary:(id)arg1;
- (_Bool)getFloat:(float *)arg1 forKey:(unsigned int)arg2;
- (void)enumerateForTextFormat:(CDUnknownBlockType)arg1;
- (void)setGPBGenericValue:(CDUnion_88782d86 *)arg1 forGPBGenericValueKey:(CDUnion_88782d86 *)arg2;
- (void)writeToCodedOutputStream:(id)arg1 asField:(id)arg2;
- (unsigned long long)computeSerializedSizeAsField:(id)arg1;
- (void)enumerateKeysAndFloatsUsingBlock:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) unsigned long long count;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)initWithFloats:(const float *)arg1 forKeys:(const unsigned int *)arg2 count:(unsigned long long)arg3;
- (id)init;

@end

@interface GPBUInt32DoubleDictionary : NSObject <GPBDictionaryInternalsProtocol, NSCopying>
{
    GPBMessage *_autocreator;
    NSMutableDictionary *_dictionary;
}

+ (id)dictionaryWithCapacity:(unsigned long long)arg1;
+ (id)dictionaryWithDictionary:(id)arg1;
+ (id)dictionaryWithDoubles:(const double *)arg1 forKeys:(const unsigned int *)arg2 count:(unsigned long long)arg3;
+ (id)dictionaryWithDouble:(double)arg1 forKey:(unsigned int)arg2;
+ (id)dictionary;
- (void)removeAll;
- (void)removeDoubleForKey:(unsigned int)arg1;
- (void)setDouble:(double)arg1 forKey:(unsigned int)arg2;
- (void)addEntriesFromDictionary:(id)arg1;
- (_Bool)getDouble:(double *)arg1 forKey:(unsigned int)arg2;
- (void)enumerateForTextFormat:(CDUnknownBlockType)arg1;
- (void)setGPBGenericValue:(CDUnion_88782d86 *)arg1 forGPBGenericValueKey:(CDUnion_88782d86 *)arg2;
- (void)writeToCodedOutputStream:(id)arg1 asField:(id)arg2;
- (unsigned long long)computeSerializedSizeAsField:(id)arg1;
- (void)enumerateKeysAndDoublesUsingBlock:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) unsigned long long count;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)initWithDoubles:(const double *)arg1 forKeys:(const unsigned int *)arg2 count:(unsigned long long)arg3;
- (id)init;

@end

@interface GPBUInt32EnumDictionary : NSObject <GPBDictionaryInternalsProtocol, NSCopying>
{
    GPBMessage *_autocreator;
    NSMutableDictionary *_dictionary;
    CDUnknownFunctionPointerType _validationFunc;
}

+ (id)dictionaryWithValidationFunction:(CDUnknownFunctionPointerType)arg1 capacity:(unsigned long long)arg2;
+ (id)dictionaryWithDictionary:(id)arg1;
+ (id)dictionaryWithValidationFunction:(CDUnknownFunctionPointerType)arg1 rawValues:(const int *)arg2 forKeys:(const unsigned int *)arg3 count:(unsigned long long)arg4;
+ (id)dictionaryWithValidationFunction:(CDUnknownFunctionPointerType)arg1 rawValue:(int)arg2 forKey:(unsigned int)arg3;
+ (id)dictionaryWithValidationFunction:(CDUnknownFunctionPointerType)arg1;
+ (id)dictionary;
@property(readonly, nonatomic) CDUnknownFunctionPointerType validationFunc; // @synthesize validationFunc=_validationFunc;
- (void)setEnum:(int)arg1 forKey:(unsigned int)arg2;
- (void)removeAll;
- (void)removeEnumForKey:(unsigned int)arg1;
- (void)setRawValue:(int)arg1 forKey:(unsigned int)arg2;
- (void)addRawEntriesFromDictionary:(id)arg1;
- (void)enumerateKeysAndEnumsUsingBlock:(CDUnknownBlockType)arg1;
- (_Bool)getRawValue:(int *)arg1 forKey:(unsigned int)arg2;
- (_Bool)getEnum:(int *)arg1 forKey:(unsigned int)arg2;
- (void)enumerateForTextFormat:(CDUnknownBlockType)arg1;
- (void)setGPBGenericValue:(CDUnion_88782d86 *)arg1 forGPBGenericValueKey:(CDUnion_88782d86 *)arg2;
- (id)serializedDataForUnknownValue:(int)arg1 forKey:(CDUnion_88782d86 *)arg2 keyDataType:(unsigned char)arg3;
- (void)writeToCodedOutputStream:(id)arg1 asField:(id)arg2;
- (unsigned long long)computeSerializedSizeAsField:(id)arg1;
- (void)enumerateKeysAndRawValuesUsingBlock:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) unsigned long long count;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithValidationFunction:(CDUnknownFunctionPointerType)arg1 capacity:(unsigned long long)arg2;
- (id)initWithDictionary:(id)arg1;
- (id)initWithValidationFunction:(CDUnknownFunctionPointerType)arg1 rawValues:(const int *)arg2 forKeys:(const unsigned int *)arg3 count:(unsigned long long)arg4;
- (id)initWithValidationFunction:(CDUnknownFunctionPointerType)arg1;
- (id)init;

@end

@interface GPBUInt32ObjectDictionary : NSObject <GPBDictionaryInternalsProtocol, NSCopying>
{
    GPBMessage *_autocreator;
    NSMutableDictionary *_dictionary;
}

+ (id)dictionaryWithCapacity:(unsigned long long)arg1;
+ (id)dictionaryWithDictionary:(id)arg1;
+ (id)dictionaryWithObjects:(const id *)arg1 forKeys:(const unsigned int *)arg2 count:(unsigned long long)arg3;
+ (id)dictionaryWithObject:(id)arg1 forKey:(unsigned int)arg2;
+ (id)dictionary;
- (void)removeAll;
- (void)removeObjectForKey:(unsigned int)arg1;
- (void)setObject:(id)arg1 forKey:(unsigned int)arg2;
- (void)addEntriesFromDictionary:(id)arg1;
- (id)objectForKey:(unsigned int)arg1;
- (void)enumerateForTextFormat:(CDUnknownBlockType)arg1;
- (void)setGPBGenericValue:(CDUnion_88782d86 *)arg1 forGPBGenericValueKey:(CDUnion_88782d86 *)arg2;
- (void)writeToCodedOutputStream:(id)arg1 asField:(id)arg2;
- (unsigned long long)computeSerializedSizeAsField:(id)arg1;
- (id)deepCopyWithZone:(struct _NSZone *)arg1;
- (_Bool)isInitialized;
- (void)enumerateKeysAndObjectsUsingBlock:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) unsigned long long count;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)initWithObjects:(const id *)arg1 forKeys:(const unsigned int *)arg2 count:(unsigned long long)arg3;
- (id)init;

@end

@interface GPBInt32UInt32Dictionary : NSObject <GPBDictionaryInternalsProtocol, NSCopying>
{
    GPBMessage *_autocreator;
    NSMutableDictionary *_dictionary;
}

+ (id)dictionaryWithCapacity:(unsigned long long)arg1;
+ (id)dictionaryWithDictionary:(id)arg1;
+ (id)dictionaryWithUInt32s:(const unsigned int *)arg1 forKeys:(const int *)arg2 count:(unsigned long long)arg3;
+ (id)dictionaryWithUInt32:(unsigned int)arg1 forKey:(int)arg2;
+ (id)dictionary;
- (void)removeAll;
- (void)removeUInt32ForKey:(int)arg1;
- (void)setUInt32:(unsigned int)arg1 forKey:(int)arg2;
- (void)addEntriesFromDictionary:(id)arg1;
- (_Bool)getUInt32:(unsigned int *)arg1 forKey:(int)arg2;
- (void)enumerateForTextFormat:(CDUnknownBlockType)arg1;
- (void)setGPBGenericValue:(CDUnion_88782d86 *)arg1 forGPBGenericValueKey:(CDUnion_88782d86 *)arg2;
- (void)writeToCodedOutputStream:(id)arg1 asField:(id)arg2;
- (unsigned long long)computeSerializedSizeAsField:(id)arg1;
- (void)enumerateKeysAndUInt32sUsingBlock:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) unsigned long long count;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)initWithUInt32s:(const unsigned int *)arg1 forKeys:(const int *)arg2 count:(unsigned long long)arg3;
- (id)init;

@end

@interface GPBInt32Int32Dictionary : NSObject <GPBDictionaryInternalsProtocol, NSCopying>
{
    GPBMessage *_autocreator;
    NSMutableDictionary *_dictionary;
}

+ (id)dictionaryWithCapacity:(unsigned long long)arg1;
+ (id)dictionaryWithDictionary:(id)arg1;
+ (id)dictionaryWithInt32s:(const int *)arg1 forKeys:(const int *)arg2 count:(unsigned long long)arg3;
+ (id)dictionaryWithInt32:(int)arg1 forKey:(int)arg2;
+ (id)dictionary;
- (void)removeAll;
- (void)removeInt32ForKey:(int)arg1;
- (void)setInt32:(int)arg1 forKey:(int)arg2;
- (void)addEntriesFromDictionary:(id)arg1;
- (_Bool)getInt32:(int *)arg1 forKey:(int)arg2;
- (void)enumerateForTextFormat:(CDUnknownBlockType)arg1;
- (void)setGPBGenericValue:(CDUnion_88782d86 *)arg1 forGPBGenericValueKey:(CDUnion_88782d86 *)arg2;
- (void)writeToCodedOutputStream:(id)arg1 asField:(id)arg2;
- (unsigned long long)computeSerializedSizeAsField:(id)arg1;
- (void)enumerateKeysAndInt32sUsingBlock:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) unsigned long long count;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)initWithInt32s:(const int *)arg1 forKeys:(const int *)arg2 count:(unsigned long long)arg3;
- (id)init;

@end

@interface GPBInt32UInt64Dictionary : NSObject <GPBDictionaryInternalsProtocol, NSCopying>
{
    GPBMessage *_autocreator;
    NSMutableDictionary *_dictionary;
}

+ (id)dictionaryWithCapacity:(unsigned long long)arg1;
+ (id)dictionaryWithDictionary:(id)arg1;
+ (id)dictionaryWithUInt64s:(const unsigned long long *)arg1 forKeys:(const int *)arg2 count:(unsigned long long)arg3;
+ (id)dictionaryWithUInt64:(unsigned long long)arg1 forKey:(int)arg2;
+ (id)dictionary;
- (void)removeAll;
- (void)removeUInt64ForKey:(int)arg1;
- (void)setUInt64:(unsigned long long)arg1 forKey:(int)arg2;
- (void)addEntriesFromDictionary:(id)arg1;
- (_Bool)getUInt64:(unsigned long long *)arg1 forKey:(int)arg2;
- (void)enumerateForTextFormat:(CDUnknownBlockType)arg1;
- (void)setGPBGenericValue:(CDUnion_88782d86 *)arg1 forGPBGenericValueKey:(CDUnion_88782d86 *)arg2;
- (void)writeToCodedOutputStream:(id)arg1 asField:(id)arg2;
- (unsigned long long)computeSerializedSizeAsField:(id)arg1;
- (void)enumerateKeysAndUInt64sUsingBlock:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) unsigned long long count;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)initWithUInt64s:(const unsigned long long *)arg1 forKeys:(const int *)arg2 count:(unsigned long long)arg3;
- (id)init;

@end

@interface GPBInt32Int64Dictionary : NSObject <GPBDictionaryInternalsProtocol, NSCopying>
{
    GPBMessage *_autocreator;
    NSMutableDictionary *_dictionary;
}

+ (id)dictionaryWithCapacity:(unsigned long long)arg1;
+ (id)dictionaryWithDictionary:(id)arg1;
+ (id)dictionaryWithInt64s:(const long long *)arg1 forKeys:(const int *)arg2 count:(unsigned long long)arg3;
+ (id)dictionaryWithInt64:(long long)arg1 forKey:(int)arg2;
+ (id)dictionary;
- (void)removeAll;
- (void)removeInt64ForKey:(int)arg1;
- (void)setInt64:(long long)arg1 forKey:(int)arg2;
- (void)addEntriesFromDictionary:(id)arg1;
- (_Bool)getInt64:(long long *)arg1 forKey:(int)arg2;
- (void)enumerateForTextFormat:(CDUnknownBlockType)arg1;
- (void)setGPBGenericValue:(CDUnion_88782d86 *)arg1 forGPBGenericValueKey:(CDUnion_88782d86 *)arg2;
- (void)writeToCodedOutputStream:(id)arg1 asField:(id)arg2;
- (unsigned long long)computeSerializedSizeAsField:(id)arg1;
- (void)enumerateKeysAndInt64sUsingBlock:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) unsigned long long count;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)initWithInt64s:(const long long *)arg1 forKeys:(const int *)arg2 count:(unsigned long long)arg3;
- (id)init;

@end

@interface GPBInt32BoolDictionary : NSObject <GPBDictionaryInternalsProtocol, NSCopying>
{
    GPBMessage *_autocreator;
    NSMutableDictionary *_dictionary;
}

+ (id)dictionaryWithCapacity:(unsigned long long)arg1;
+ (id)dictionaryWithDictionary:(id)arg1;
+ (id)dictionaryWithBools:(const _Bool *)arg1 forKeys:(const int *)arg2 count:(unsigned long long)arg3;
+ (id)dictionaryWithBool:(_Bool)arg1 forKey:(int)arg2;
+ (id)dictionary;
- (void)removeAll;
- (void)removeBoolForKey:(int)arg1;
- (void)setBool:(_Bool)arg1 forKey:(int)arg2;
- (void)addEntriesFromDictionary:(id)arg1;
- (_Bool)getBool:(_Bool *)arg1 forKey:(int)arg2;
- (void)enumerateForTextFormat:(CDUnknownBlockType)arg1;
- (void)setGPBGenericValue:(CDUnion_88782d86 *)arg1 forGPBGenericValueKey:(CDUnion_88782d86 *)arg2;
- (void)writeToCodedOutputStream:(id)arg1 asField:(id)arg2;
- (unsigned long long)computeSerializedSizeAsField:(id)arg1;
- (void)enumerateKeysAndBoolsUsingBlock:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) unsigned long long count;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)initWithBools:(const _Bool *)arg1 forKeys:(const int *)arg2 count:(unsigned long long)arg3;
- (id)init;

@end

@interface GPBInt32FloatDictionary : NSObject <GPBDictionaryInternalsProtocol, NSCopying>
{
    GPBMessage *_autocreator;
    NSMutableDictionary *_dictionary;
}

+ (id)dictionaryWithCapacity:(unsigned long long)arg1;
+ (id)dictionaryWithDictionary:(id)arg1;
+ (id)dictionaryWithFloats:(const float *)arg1 forKeys:(const int *)arg2 count:(unsigned long long)arg3;
+ (id)dictionaryWithFloat:(float)arg1 forKey:(int)arg2;
+ (id)dictionary;
- (void)removeAll;
- (void)removeFloatForKey:(int)arg1;
- (void)setFloat:(float)arg1 forKey:(int)arg2;
- (void)addEntriesFromDictionary:(id)arg1;
- (_Bool)getFloat:(float *)arg1 forKey:(int)arg2;
- (void)enumerateForTextFormat:(CDUnknownBlockType)arg1;
- (void)setGPBGenericValue:(CDUnion_88782d86 *)arg1 forGPBGenericValueKey:(CDUnion_88782d86 *)arg2;
- (void)writeToCodedOutputStream:(id)arg1 asField:(id)arg2;
- (unsigned long long)computeSerializedSizeAsField:(id)arg1;
- (void)enumerateKeysAndFloatsUsingBlock:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) unsigned long long count;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)initWithFloats:(const float *)arg1 forKeys:(const int *)arg2 count:(unsigned long long)arg3;
- (id)init;

@end

@interface GPBInt32DoubleDictionary : NSObject <GPBDictionaryInternalsProtocol, NSCopying>
{
    GPBMessage *_autocreator;
    NSMutableDictionary *_dictionary;
}

+ (id)dictionaryWithCapacity:(unsigned long long)arg1;
+ (id)dictionaryWithDictionary:(id)arg1;
+ (id)dictionaryWithDoubles:(const double *)arg1 forKeys:(const int *)arg2 count:(unsigned long long)arg3;
+ (id)dictionaryWithDouble:(double)arg1 forKey:(int)arg2;
+ (id)dictionary;
- (void)removeAll;
- (void)removeDoubleForKey:(int)arg1;
- (void)setDouble:(double)arg1 forKey:(int)arg2;
- (void)addEntriesFromDictionary:(id)arg1;
- (_Bool)getDouble:(double *)arg1 forKey:(int)arg2;
- (void)enumerateForTextFormat:(CDUnknownBlockType)arg1;
- (void)setGPBGenericValue:(CDUnion_88782d86 *)arg1 forGPBGenericValueKey:(CDUnion_88782d86 *)arg2;
- (void)writeToCodedOutputStream:(id)arg1 asField:(id)arg2;
- (unsigned long long)computeSerializedSizeAsField:(id)arg1;
- (void)enumerateKeysAndDoublesUsingBlock:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) unsigned long long count;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)initWithDoubles:(const double *)arg1 forKeys:(const int *)arg2 count:(unsigned long long)arg3;
- (id)init;

@end

@interface GPBInt32EnumDictionary : NSObject <GPBDictionaryInternalsProtocol, NSCopying>
{
    GPBMessage *_autocreator;
    NSMutableDictionary *_dictionary;
    CDUnknownFunctionPointerType _validationFunc;
}

+ (id)dictionaryWithValidationFunction:(CDUnknownFunctionPointerType)arg1 capacity:(unsigned long long)arg2;
+ (id)dictionaryWithDictionary:(id)arg1;
+ (id)dictionaryWithValidationFunction:(CDUnknownFunctionPointerType)arg1 rawValues:(const int *)arg2 forKeys:(const int *)arg3 count:(unsigned long long)arg4;
+ (id)dictionaryWithValidationFunction:(CDUnknownFunctionPointerType)arg1 rawValue:(int)arg2 forKey:(int)arg3;
+ (id)dictionaryWithValidationFunction:(CDUnknownFunctionPointerType)arg1;
+ (id)dictionary;
@property(readonly, nonatomic) CDUnknownFunctionPointerType validationFunc; // @synthesize validationFunc=_validationFunc;
- (void)setEnum:(int)arg1 forKey:(int)arg2;
- (void)removeAll;
- (void)removeEnumForKey:(int)arg1;
- (void)setRawValue:(int)arg1 forKey:(int)arg2;
- (void)addRawEntriesFromDictionary:(id)arg1;
- (void)enumerateKeysAndEnumsUsingBlock:(CDUnknownBlockType)arg1;
- (_Bool)getRawValue:(int *)arg1 forKey:(int)arg2;
- (_Bool)getEnum:(int *)arg1 forKey:(int)arg2;
- (void)enumerateForTextFormat:(CDUnknownBlockType)arg1;
- (void)setGPBGenericValue:(CDUnion_88782d86 *)arg1 forGPBGenericValueKey:(CDUnion_88782d86 *)arg2;
- (id)serializedDataForUnknownValue:(int)arg1 forKey:(CDUnion_88782d86 *)arg2 keyDataType:(unsigned char)arg3;
- (void)writeToCodedOutputStream:(id)arg1 asField:(id)arg2;
- (unsigned long long)computeSerializedSizeAsField:(id)arg1;
- (void)enumerateKeysAndRawValuesUsingBlock:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) unsigned long long count;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithValidationFunction:(CDUnknownFunctionPointerType)arg1 capacity:(unsigned long long)arg2;
- (id)initWithDictionary:(id)arg1;
- (id)initWithValidationFunction:(CDUnknownFunctionPointerType)arg1 rawValues:(const int *)arg2 forKeys:(const int *)arg3 count:(unsigned long long)arg4;
- (id)initWithValidationFunction:(CDUnknownFunctionPointerType)arg1;
- (id)init;

@end

@interface GPBInt32ObjectDictionary : NSObject <GPBDictionaryInternalsProtocol, NSCopying>
{
    GPBMessage *_autocreator;
    NSMutableDictionary *_dictionary;
}

+ (id)dictionaryWithCapacity:(unsigned long long)arg1;
+ (id)dictionaryWithDictionary:(id)arg1;
+ (id)dictionaryWithObjects:(const id *)arg1 forKeys:(const int *)arg2 count:(unsigned long long)arg3;
+ (id)dictionaryWithObject:(id)arg1 forKey:(int)arg2;
+ (id)dictionary;
- (void)removeAll;
- (void)removeObjectForKey:(int)arg1;
- (void)setObject:(id)arg1 forKey:(int)arg2;
- (void)addEntriesFromDictionary:(id)arg1;
- (id)objectForKey:(int)arg1;
- (void)enumerateForTextFormat:(CDUnknownBlockType)arg1;
- (void)setGPBGenericValue:(CDUnion_88782d86 *)arg1 forGPBGenericValueKey:(CDUnion_88782d86 *)arg2;
- (void)writeToCodedOutputStream:(id)arg1 asField:(id)arg2;
- (unsigned long long)computeSerializedSizeAsField:(id)arg1;
- (id)deepCopyWithZone:(struct _NSZone *)arg1;
- (_Bool)isInitialized;
- (void)enumerateKeysAndObjectsUsingBlock:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) unsigned long long count;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)initWithObjects:(const id *)arg1 forKeys:(const int *)arg2 count:(unsigned long long)arg3;
- (id)init;

@end

@interface GPBUInt64UInt32Dictionary : NSObject <GPBDictionaryInternalsProtocol, NSCopying>
{
    GPBMessage *_autocreator;
    NSMutableDictionary *_dictionary;
}

+ (id)dictionaryWithCapacity:(unsigned long long)arg1;
+ (id)dictionaryWithDictionary:(id)arg1;
+ (id)dictionaryWithUInt32s:(const unsigned int *)arg1 forKeys:(const unsigned long long *)arg2 count:(unsigned long long)arg3;
+ (id)dictionaryWithUInt32:(unsigned int)arg1 forKey:(unsigned long long)arg2;
+ (id)dictionary;
- (void)removeAll;
- (void)removeUInt32ForKey:(unsigned long long)arg1;
- (void)setUInt32:(unsigned int)arg1 forKey:(unsigned long long)arg2;
- (void)addEntriesFromDictionary:(id)arg1;
- (_Bool)getUInt32:(unsigned int *)arg1 forKey:(unsigned long long)arg2;
- (void)enumerateForTextFormat:(CDUnknownBlockType)arg1;
- (void)setGPBGenericValue:(CDUnion_88782d86 *)arg1 forGPBGenericValueKey:(CDUnion_88782d86 *)arg2;
- (void)writeToCodedOutputStream:(id)arg1 asField:(id)arg2;
- (unsigned long long)computeSerializedSizeAsField:(id)arg1;
- (void)enumerateKeysAndUInt32sUsingBlock:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) unsigned long long count;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)initWithUInt32s:(const unsigned int *)arg1 forKeys:(const unsigned long long *)arg2 count:(unsigned long long)arg3;
- (id)init;

@end

@interface GPBUInt64Int32Dictionary : NSObject <GPBDictionaryInternalsProtocol, NSCopying>
{
    GPBMessage *_autocreator;
    NSMutableDictionary *_dictionary;
}

+ (id)dictionaryWithCapacity:(unsigned long long)arg1;
+ (id)dictionaryWithDictionary:(id)arg1;
+ (id)dictionaryWithInt32s:(const int *)arg1 forKeys:(const unsigned long long *)arg2 count:(unsigned long long)arg3;
+ (id)dictionaryWithInt32:(int)arg1 forKey:(unsigned long long)arg2;
+ (id)dictionary;
- (void)removeAll;
- (void)removeInt32ForKey:(unsigned long long)arg1;
- (void)setInt32:(int)arg1 forKey:(unsigned long long)arg2;
- (void)addEntriesFromDictionary:(id)arg1;
- (_Bool)getInt32:(int *)arg1 forKey:(unsigned long long)arg2;
- (void)enumerateForTextFormat:(CDUnknownBlockType)arg1;
- (void)setGPBGenericValue:(CDUnion_88782d86 *)arg1 forGPBGenericValueKey:(CDUnion_88782d86 *)arg2;
- (void)writeToCodedOutputStream:(id)arg1 asField:(id)arg2;
- (unsigned long long)computeSerializedSizeAsField:(id)arg1;
- (void)enumerateKeysAndInt32sUsingBlock:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) unsigned long long count;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)initWithInt32s:(const int *)arg1 forKeys:(const unsigned long long *)arg2 count:(unsigned long long)arg3;
- (id)init;

@end

@interface GPBUInt64UInt64Dictionary : NSObject <GPBDictionaryInternalsProtocol, NSCopying>
{
    GPBMessage *_autocreator;
    NSMutableDictionary *_dictionary;
}

+ (id)dictionaryWithCapacity:(unsigned long long)arg1;
+ (id)dictionaryWithDictionary:(id)arg1;
+ (id)dictionaryWithUInt64s:(const unsigned long long *)arg1 forKeys:(const unsigned long long *)arg2 count:(unsigned long long)arg3;
+ (id)dictionaryWithUInt64:(unsigned long long)arg1 forKey:(unsigned long long)arg2;
+ (id)dictionary;
- (void)removeAll;
- (void)removeUInt64ForKey:(unsigned long long)arg1;
- (void)setUInt64:(unsigned long long)arg1 forKey:(unsigned long long)arg2;
- (void)addEntriesFromDictionary:(id)arg1;
- (_Bool)getUInt64:(unsigned long long *)arg1 forKey:(unsigned long long)arg2;
- (void)enumerateForTextFormat:(CDUnknownBlockType)arg1;
- (void)setGPBGenericValue:(CDUnion_88782d86 *)arg1 forGPBGenericValueKey:(CDUnion_88782d86 *)arg2;
- (void)writeToCodedOutputStream:(id)arg1 asField:(id)arg2;
- (unsigned long long)computeSerializedSizeAsField:(id)arg1;
- (void)enumerateKeysAndUInt64sUsingBlock:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) unsigned long long count;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)initWithUInt64s:(const unsigned long long *)arg1 forKeys:(const unsigned long long *)arg2 count:(unsigned long long)arg3;
- (id)init;

@end

@interface GPBUInt64Int64Dictionary : NSObject <GPBDictionaryInternalsProtocol, NSCopying>
{
    GPBMessage *_autocreator;
    NSMutableDictionary *_dictionary;
}

+ (id)dictionaryWithCapacity:(unsigned long long)arg1;
+ (id)dictionaryWithDictionary:(id)arg1;
+ (id)dictionaryWithInt64s:(const long long *)arg1 forKeys:(const unsigned long long *)arg2 count:(unsigned long long)arg3;
+ (id)dictionaryWithInt64:(long long)arg1 forKey:(unsigned long long)arg2;
+ (id)dictionary;
- (void)removeAll;
- (void)removeInt64ForKey:(unsigned long long)arg1;
- (void)setInt64:(long long)arg1 forKey:(unsigned long long)arg2;
- (void)addEntriesFromDictionary:(id)arg1;
- (_Bool)getInt64:(long long *)arg1 forKey:(unsigned long long)arg2;
- (void)enumerateForTextFormat:(CDUnknownBlockType)arg1;
- (void)setGPBGenericValue:(CDUnion_88782d86 *)arg1 forGPBGenericValueKey:(CDUnion_88782d86 *)arg2;
- (void)writeToCodedOutputStream:(id)arg1 asField:(id)arg2;
- (unsigned long long)computeSerializedSizeAsField:(id)arg1;
- (void)enumerateKeysAndInt64sUsingBlock:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) unsigned long long count;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)initWithInt64s:(const long long *)arg1 forKeys:(const unsigned long long *)arg2 count:(unsigned long long)arg3;
- (id)init;

@end

@interface GPBUInt64BoolDictionary : NSObject <GPBDictionaryInternalsProtocol, NSCopying>
{
    GPBMessage *_autocreator;
    NSMutableDictionary *_dictionary;
}

+ (id)dictionaryWithCapacity:(unsigned long long)arg1;
+ (id)dictionaryWithDictionary:(id)arg1;
+ (id)dictionaryWithBools:(const _Bool *)arg1 forKeys:(const unsigned long long *)arg2 count:(unsigned long long)arg3;
+ (id)dictionaryWithBool:(_Bool)arg1 forKey:(unsigned long long)arg2;
+ (id)dictionary;
- (void)removeAll;
- (void)removeBoolForKey:(unsigned long long)arg1;
- (void)setBool:(_Bool)arg1 forKey:(unsigned long long)arg2;
- (void)addEntriesFromDictionary:(id)arg1;
- (_Bool)getBool:(_Bool *)arg1 forKey:(unsigned long long)arg2;
- (void)enumerateForTextFormat:(CDUnknownBlockType)arg1;
- (void)setGPBGenericValue:(CDUnion_88782d86 *)arg1 forGPBGenericValueKey:(CDUnion_88782d86 *)arg2;
- (void)writeToCodedOutputStream:(id)arg1 asField:(id)arg2;
- (unsigned long long)computeSerializedSizeAsField:(id)arg1;
- (void)enumerateKeysAndBoolsUsingBlock:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) unsigned long long count;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)initWithBools:(const _Bool *)arg1 forKeys:(const unsigned long long *)arg2 count:(unsigned long long)arg3;
- (id)init;

@end

@interface GPBUInt64FloatDictionary : NSObject <GPBDictionaryInternalsProtocol, NSCopying>
{
    GPBMessage *_autocreator;
    NSMutableDictionary *_dictionary;
}

+ (id)dictionaryWithCapacity:(unsigned long long)arg1;
+ (id)dictionaryWithDictionary:(id)arg1;
+ (id)dictionaryWithFloats:(const float *)arg1 forKeys:(const unsigned long long *)arg2 count:(unsigned long long)arg3;
+ (id)dictionaryWithFloat:(float)arg1 forKey:(unsigned long long)arg2;
+ (id)dictionary;
- (void)removeAll;
- (void)removeFloatForKey:(unsigned long long)arg1;
- (void)setFloat:(float)arg1 forKey:(unsigned long long)arg2;
- (void)addEntriesFromDictionary:(id)arg1;
- (_Bool)getFloat:(float *)arg1 forKey:(unsigned long long)arg2;
- (void)enumerateForTextFormat:(CDUnknownBlockType)arg1;
- (void)setGPBGenericValue:(CDUnion_88782d86 *)arg1 forGPBGenericValueKey:(CDUnion_88782d86 *)arg2;
- (void)writeToCodedOutputStream:(id)arg1 asField:(id)arg2;
- (unsigned long long)computeSerializedSizeAsField:(id)arg1;
- (void)enumerateKeysAndFloatsUsingBlock:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) unsigned long long count;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)initWithFloats:(const float *)arg1 forKeys:(const unsigned long long *)arg2 count:(unsigned long long)arg3;
- (id)init;

@end

@interface GPBUInt64DoubleDictionary : NSObject <GPBDictionaryInternalsProtocol, NSCopying>
{
    GPBMessage *_autocreator;
    NSMutableDictionary *_dictionary;
}

+ (id)dictionaryWithCapacity:(unsigned long long)arg1;
+ (id)dictionaryWithDictionary:(id)arg1;
+ (id)dictionaryWithDoubles:(const double *)arg1 forKeys:(const unsigned long long *)arg2 count:(unsigned long long)arg3;
+ (id)dictionaryWithDouble:(double)arg1 forKey:(unsigned long long)arg2;
+ (id)dictionary;
- (void)removeAll;
- (void)removeDoubleForKey:(unsigned long long)arg1;
- (void)setDouble:(double)arg1 forKey:(unsigned long long)arg2;
- (void)addEntriesFromDictionary:(id)arg1;
- (_Bool)getDouble:(double *)arg1 forKey:(unsigned long long)arg2;
- (void)enumerateForTextFormat:(CDUnknownBlockType)arg1;
- (void)setGPBGenericValue:(CDUnion_88782d86 *)arg1 forGPBGenericValueKey:(CDUnion_88782d86 *)arg2;
- (void)writeToCodedOutputStream:(id)arg1 asField:(id)arg2;
- (unsigned long long)computeSerializedSizeAsField:(id)arg1;
- (void)enumerateKeysAndDoublesUsingBlock:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) unsigned long long count;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)initWithDoubles:(const double *)arg1 forKeys:(const unsigned long long *)arg2 count:(unsigned long long)arg3;
- (id)init;

@end

@interface GPBUInt64EnumDictionary : NSObject <GPBDictionaryInternalsProtocol, NSCopying>
{
    GPBMessage *_autocreator;
    NSMutableDictionary *_dictionary;
    CDUnknownFunctionPointerType _validationFunc;
}

+ (id)dictionaryWithValidationFunction:(CDUnknownFunctionPointerType)arg1 capacity:(unsigned long long)arg2;
+ (id)dictionaryWithDictionary:(id)arg1;
+ (id)dictionaryWithValidationFunction:(CDUnknownFunctionPointerType)arg1 rawValues:(const int *)arg2 forKeys:(const unsigned long long *)arg3 count:(unsigned long long)arg4;
+ (id)dictionaryWithValidationFunction:(CDUnknownFunctionPointerType)arg1 rawValue:(int)arg2 forKey:(unsigned long long)arg3;
+ (id)dictionaryWithValidationFunction:(CDUnknownFunctionPointerType)arg1;
+ (id)dictionary;
@property(readonly, nonatomic) CDUnknownFunctionPointerType validationFunc; // @synthesize validationFunc=_validationFunc;
- (void)setEnum:(int)arg1 forKey:(unsigned long long)arg2;
- (void)removeAll;
- (void)removeEnumForKey:(unsigned long long)arg1;
- (void)setRawValue:(int)arg1 forKey:(unsigned long long)arg2;
- (void)addRawEntriesFromDictionary:(id)arg1;
- (void)enumerateKeysAndEnumsUsingBlock:(CDUnknownBlockType)arg1;
- (_Bool)getRawValue:(int *)arg1 forKey:(unsigned long long)arg2;
- (_Bool)getEnum:(int *)arg1 forKey:(unsigned long long)arg2;
- (void)enumerateForTextFormat:(CDUnknownBlockType)arg1;
- (void)setGPBGenericValue:(CDUnion_88782d86 *)arg1 forGPBGenericValueKey:(CDUnion_88782d86 *)arg2;
- (id)serializedDataForUnknownValue:(int)arg1 forKey:(CDUnion_88782d86 *)arg2 keyDataType:(unsigned char)arg3;
- (void)writeToCodedOutputStream:(id)arg1 asField:(id)arg2;
- (unsigned long long)computeSerializedSizeAsField:(id)arg1;
- (void)enumerateKeysAndRawValuesUsingBlock:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) unsigned long long count;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithValidationFunction:(CDUnknownFunctionPointerType)arg1 capacity:(unsigned long long)arg2;
- (id)initWithDictionary:(id)arg1;
- (id)initWithValidationFunction:(CDUnknownFunctionPointerType)arg1 rawValues:(const int *)arg2 forKeys:(const unsigned long long *)arg3 count:(unsigned long long)arg4;
- (id)initWithValidationFunction:(CDUnknownFunctionPointerType)arg1;
- (id)init;

@end

@interface GPBUInt64ObjectDictionary : NSObject <GPBDictionaryInternalsProtocol, NSCopying>
{
    GPBMessage *_autocreator;
    NSMutableDictionary *_dictionary;
}

+ (id)dictionaryWithCapacity:(unsigned long long)arg1;
+ (id)dictionaryWithDictionary:(id)arg1;
+ (id)dictionaryWithObjects:(const id *)arg1 forKeys:(const unsigned long long *)arg2 count:(unsigned long long)arg3;
+ (id)dictionaryWithObject:(id)arg1 forKey:(unsigned long long)arg2;
+ (id)dictionary;
- (void)removeAll;
- (void)removeObjectForKey:(unsigned long long)arg1;
- (void)setObject:(id)arg1 forKey:(unsigned long long)arg2;
- (void)addEntriesFromDictionary:(id)arg1;
- (id)objectForKey:(unsigned long long)arg1;
- (void)enumerateForTextFormat:(CDUnknownBlockType)arg1;
- (void)setGPBGenericValue:(CDUnion_88782d86 *)arg1 forGPBGenericValueKey:(CDUnion_88782d86 *)arg2;
- (void)writeToCodedOutputStream:(id)arg1 asField:(id)arg2;
- (unsigned long long)computeSerializedSizeAsField:(id)arg1;
- (id)deepCopyWithZone:(struct _NSZone *)arg1;
- (_Bool)isInitialized;
- (void)enumerateKeysAndObjectsUsingBlock:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) unsigned long long count;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)initWithObjects:(const id *)arg1 forKeys:(const unsigned long long *)arg2 count:(unsigned long long)arg3;
- (id)init;

@end

@interface GPBInt64UInt32Dictionary : NSObject <GPBDictionaryInternalsProtocol, NSCopying>
{
    GPBMessage *_autocreator;
    NSMutableDictionary *_dictionary;
}

+ (id)dictionaryWithCapacity:(unsigned long long)arg1;
+ (id)dictionaryWithDictionary:(id)arg1;
+ (id)dictionaryWithUInt32s:(const unsigned int *)arg1 forKeys:(const long long *)arg2 count:(unsigned long long)arg3;
+ (id)dictionaryWithUInt32:(unsigned int)arg1 forKey:(long long)arg2;
+ (id)dictionary;
- (void)removeAll;
- (void)removeUInt32ForKey:(long long)arg1;
- (void)setUInt32:(unsigned int)arg1 forKey:(long long)arg2;
- (void)addEntriesFromDictionary:(id)arg1;
- (_Bool)getUInt32:(unsigned int *)arg1 forKey:(long long)arg2;
- (void)enumerateForTextFormat:(CDUnknownBlockType)arg1;
- (void)setGPBGenericValue:(CDUnion_88782d86 *)arg1 forGPBGenericValueKey:(CDUnion_88782d86 *)arg2;
- (void)writeToCodedOutputStream:(id)arg1 asField:(id)arg2;
- (unsigned long long)computeSerializedSizeAsField:(id)arg1;
- (void)enumerateKeysAndUInt32sUsingBlock:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) unsigned long long count;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)initWithUInt32s:(const unsigned int *)arg1 forKeys:(const long long *)arg2 count:(unsigned long long)arg3;
- (id)init;

@end

@interface GPBInt64Int32Dictionary : NSObject <GPBDictionaryInternalsProtocol, NSCopying>
{
    GPBMessage *_autocreator;
    NSMutableDictionary *_dictionary;
}

+ (id)dictionaryWithCapacity:(unsigned long long)arg1;
+ (id)dictionaryWithDictionary:(id)arg1;
+ (id)dictionaryWithInt32s:(const int *)arg1 forKeys:(const long long *)arg2 count:(unsigned long long)arg3;
+ (id)dictionaryWithInt32:(int)arg1 forKey:(long long)arg2;
+ (id)dictionary;
- (void)removeAll;
- (void)removeInt32ForKey:(long long)arg1;
- (void)setInt32:(int)arg1 forKey:(long long)arg2;
- (void)addEntriesFromDictionary:(id)arg1;
- (_Bool)getInt32:(int *)arg1 forKey:(long long)arg2;
- (void)enumerateForTextFormat:(CDUnknownBlockType)arg1;
- (void)setGPBGenericValue:(CDUnion_88782d86 *)arg1 forGPBGenericValueKey:(CDUnion_88782d86 *)arg2;
- (void)writeToCodedOutputStream:(id)arg1 asField:(id)arg2;
- (unsigned long long)computeSerializedSizeAsField:(id)arg1;
- (void)enumerateKeysAndInt32sUsingBlock:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) unsigned long long count;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)initWithInt32s:(const int *)arg1 forKeys:(const long long *)arg2 count:(unsigned long long)arg3;
- (id)init;

@end

@interface GPBInt64UInt64Dictionary : NSObject <GPBDictionaryInternalsProtocol, NSCopying>
{
    GPBMessage *_autocreator;
    NSMutableDictionary *_dictionary;
}

+ (id)dictionaryWithCapacity:(unsigned long long)arg1;
+ (id)dictionaryWithDictionary:(id)arg1;
+ (id)dictionaryWithUInt64s:(const unsigned long long *)arg1 forKeys:(const long long *)arg2 count:(unsigned long long)arg3;
+ (id)dictionaryWithUInt64:(unsigned long long)arg1 forKey:(long long)arg2;
+ (id)dictionary;
- (void)removeAll;
- (void)removeUInt64ForKey:(long long)arg1;
- (void)setUInt64:(unsigned long long)arg1 forKey:(long long)arg2;
- (void)addEntriesFromDictionary:(id)arg1;
- (_Bool)getUInt64:(unsigned long long *)arg1 forKey:(long long)arg2;
- (void)enumerateForTextFormat:(CDUnknownBlockType)arg1;
- (void)setGPBGenericValue:(CDUnion_88782d86 *)arg1 forGPBGenericValueKey:(CDUnion_88782d86 *)arg2;
- (void)writeToCodedOutputStream:(id)arg1 asField:(id)arg2;
- (unsigned long long)computeSerializedSizeAsField:(id)arg1;
- (void)enumerateKeysAndUInt64sUsingBlock:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) unsigned long long count;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)initWithUInt64s:(const unsigned long long *)arg1 forKeys:(const long long *)arg2 count:(unsigned long long)arg3;
- (id)init;

@end

@interface GPBInt64Int64Dictionary : NSObject <GPBDictionaryInternalsProtocol, NSCopying>
{
    GPBMessage *_autocreator;
    NSMutableDictionary *_dictionary;
}

+ (id)dictionaryWithCapacity:(unsigned long long)arg1;
+ (id)dictionaryWithDictionary:(id)arg1;
+ (id)dictionaryWithInt64s:(const long long *)arg1 forKeys:(const long long *)arg2 count:(unsigned long long)arg3;
+ (id)dictionaryWithInt64:(long long)arg1 forKey:(long long)arg2;
+ (id)dictionary;
- (void)removeAll;
- (void)removeInt64ForKey:(long long)arg1;
- (void)setInt64:(long long)arg1 forKey:(long long)arg2;
- (void)addEntriesFromDictionary:(id)arg1;
- (_Bool)getInt64:(long long *)arg1 forKey:(long long)arg2;
- (void)enumerateForTextFormat:(CDUnknownBlockType)arg1;
- (void)setGPBGenericValue:(CDUnion_88782d86 *)arg1 forGPBGenericValueKey:(CDUnion_88782d86 *)arg2;
- (void)writeToCodedOutputStream:(id)arg1 asField:(id)arg2;
- (unsigned long long)computeSerializedSizeAsField:(id)arg1;
- (void)enumerateKeysAndInt64sUsingBlock:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) unsigned long long count;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)initWithInt64s:(const long long *)arg1 forKeys:(const long long *)arg2 count:(unsigned long long)arg3;
- (id)init;

@end

@interface GPBInt64BoolDictionary : NSObject <GPBDictionaryInternalsProtocol, NSCopying>
{
    GPBMessage *_autocreator;
    NSMutableDictionary *_dictionary;
}

+ (id)dictionaryWithCapacity:(unsigned long long)arg1;
+ (id)dictionaryWithDictionary:(id)arg1;
+ (id)dictionaryWithBools:(const _Bool *)arg1 forKeys:(const long long *)arg2 count:(unsigned long long)arg3;
+ (id)dictionaryWithBool:(_Bool)arg1 forKey:(long long)arg2;
+ (id)dictionary;
- (void)removeAll;
- (void)removeBoolForKey:(long long)arg1;
- (void)setBool:(_Bool)arg1 forKey:(long long)arg2;
- (void)addEntriesFromDictionary:(id)arg1;
- (_Bool)getBool:(_Bool *)arg1 forKey:(long long)arg2;
- (void)enumerateForTextFormat:(CDUnknownBlockType)arg1;
- (void)setGPBGenericValue:(CDUnion_88782d86 *)arg1 forGPBGenericValueKey:(CDUnion_88782d86 *)arg2;
- (void)writeToCodedOutputStream:(id)arg1 asField:(id)arg2;
- (unsigned long long)computeSerializedSizeAsField:(id)arg1;
- (void)enumerateKeysAndBoolsUsingBlock:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) unsigned long long count;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)initWithBools:(const _Bool *)arg1 forKeys:(const long long *)arg2 count:(unsigned long long)arg3;
- (id)init;

@end

@interface GPBInt64FloatDictionary : NSObject <GPBDictionaryInternalsProtocol, NSCopying>
{
    GPBMessage *_autocreator;
    NSMutableDictionary *_dictionary;
}

+ (id)dictionaryWithCapacity:(unsigned long long)arg1;
+ (id)dictionaryWithDictionary:(id)arg1;
+ (id)dictionaryWithFloats:(const float *)arg1 forKeys:(const long long *)arg2 count:(unsigned long long)arg3;
+ (id)dictionaryWithFloat:(float)arg1 forKey:(long long)arg2;
+ (id)dictionary;
- (void)removeAll;
- (void)removeFloatForKey:(long long)arg1;
- (void)setFloat:(float)arg1 forKey:(long long)arg2;
- (void)addEntriesFromDictionary:(id)arg1;
- (_Bool)getFloat:(float *)arg1 forKey:(long long)arg2;
- (void)enumerateForTextFormat:(CDUnknownBlockType)arg1;
- (void)setGPBGenericValue:(CDUnion_88782d86 *)arg1 forGPBGenericValueKey:(CDUnion_88782d86 *)arg2;
- (void)writeToCodedOutputStream:(id)arg1 asField:(id)arg2;
- (unsigned long long)computeSerializedSizeAsField:(id)arg1;
- (void)enumerateKeysAndFloatsUsingBlock:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) unsigned long long count;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)initWithFloats:(const float *)arg1 forKeys:(const long long *)arg2 count:(unsigned long long)arg3;
- (id)init;

@end

@interface GPBInt64DoubleDictionary : NSObject <GPBDictionaryInternalsProtocol, NSCopying>
{
    GPBMessage *_autocreator;
    NSMutableDictionary *_dictionary;
}

+ (id)dictionaryWithCapacity:(unsigned long long)arg1;
+ (id)dictionaryWithDictionary:(id)arg1;
+ (id)dictionaryWithDoubles:(const double *)arg1 forKeys:(const long long *)arg2 count:(unsigned long long)arg3;
+ (id)dictionaryWithDouble:(double)arg1 forKey:(long long)arg2;
+ (id)dictionary;
- (void)removeAll;
- (void)removeDoubleForKey:(long long)arg1;
- (void)setDouble:(double)arg1 forKey:(long long)arg2;
- (void)addEntriesFromDictionary:(id)arg1;
- (_Bool)getDouble:(double *)arg1 forKey:(long long)arg2;
- (void)enumerateForTextFormat:(CDUnknownBlockType)arg1;
- (void)setGPBGenericValue:(CDUnion_88782d86 *)arg1 forGPBGenericValueKey:(CDUnion_88782d86 *)arg2;
- (void)writeToCodedOutputStream:(id)arg1 asField:(id)arg2;
- (unsigned long long)computeSerializedSizeAsField:(id)arg1;
- (void)enumerateKeysAndDoublesUsingBlock:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) unsigned long long count;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)initWithDoubles:(const double *)arg1 forKeys:(const long long *)arg2 count:(unsigned long long)arg3;
- (id)init;

@end

@interface GPBInt64EnumDictionary : NSObject <GPBDictionaryInternalsProtocol, NSCopying>
{
    GPBMessage *_autocreator;
    NSMutableDictionary *_dictionary;
    CDUnknownFunctionPointerType _validationFunc;
}

+ (id)dictionaryWithValidationFunction:(CDUnknownFunctionPointerType)arg1 capacity:(unsigned long long)arg2;
+ (id)dictionaryWithDictionary:(id)arg1;
+ (id)dictionaryWithValidationFunction:(CDUnknownFunctionPointerType)arg1 rawValues:(const int *)arg2 forKeys:(const long long *)arg3 count:(unsigned long long)arg4;
+ (id)dictionaryWithValidationFunction:(CDUnknownFunctionPointerType)arg1 rawValue:(int)arg2 forKey:(long long)arg3;
+ (id)dictionaryWithValidationFunction:(CDUnknownFunctionPointerType)arg1;
+ (id)dictionary;
@property(readonly, nonatomic) CDUnknownFunctionPointerType validationFunc; // @synthesize validationFunc=_validationFunc;
- (void)setEnum:(int)arg1 forKey:(long long)arg2;
- (void)removeAll;
- (void)removeEnumForKey:(long long)arg1;
- (void)setRawValue:(int)arg1 forKey:(long long)arg2;
- (void)addRawEntriesFromDictionary:(id)arg1;
- (void)enumerateKeysAndEnumsUsingBlock:(CDUnknownBlockType)arg1;
- (_Bool)getRawValue:(int *)arg1 forKey:(long long)arg2;
- (_Bool)getEnum:(int *)arg1 forKey:(long long)arg2;
- (void)enumerateForTextFormat:(CDUnknownBlockType)arg1;
- (void)setGPBGenericValue:(CDUnion_88782d86 *)arg1 forGPBGenericValueKey:(CDUnion_88782d86 *)arg2;
- (id)serializedDataForUnknownValue:(int)arg1 forKey:(CDUnion_88782d86 *)arg2 keyDataType:(unsigned char)arg3;
- (void)writeToCodedOutputStream:(id)arg1 asField:(id)arg2;
- (unsigned long long)computeSerializedSizeAsField:(id)arg1;
- (void)enumerateKeysAndRawValuesUsingBlock:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) unsigned long long count;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithValidationFunction:(CDUnknownFunctionPointerType)arg1 capacity:(unsigned long long)arg2;
- (id)initWithDictionary:(id)arg1;
- (id)initWithValidationFunction:(CDUnknownFunctionPointerType)arg1 rawValues:(const int *)arg2 forKeys:(const long long *)arg3 count:(unsigned long long)arg4;
- (id)initWithValidationFunction:(CDUnknownFunctionPointerType)arg1;
- (id)init;

@end

@interface GPBInt64ObjectDictionary : NSObject <GPBDictionaryInternalsProtocol, NSCopying>
{
    GPBMessage *_autocreator;
    NSMutableDictionary *_dictionary;
}

+ (id)dictionaryWithCapacity:(unsigned long long)arg1;
+ (id)dictionaryWithDictionary:(id)arg1;
+ (id)dictionaryWithObjects:(const id *)arg1 forKeys:(const long long *)arg2 count:(unsigned long long)arg3;
+ (id)dictionaryWithObject:(id)arg1 forKey:(long long)arg2;
+ (id)dictionary;
- (void)removeAll;
- (void)removeObjectForKey:(long long)arg1;
- (void)setObject:(id)arg1 forKey:(long long)arg2;
- (void)addEntriesFromDictionary:(id)arg1;
- (id)objectForKey:(long long)arg1;
- (void)enumerateForTextFormat:(CDUnknownBlockType)arg1;
- (void)setGPBGenericValue:(CDUnion_88782d86 *)arg1 forGPBGenericValueKey:(CDUnion_88782d86 *)arg2;
- (void)writeToCodedOutputStream:(id)arg1 asField:(id)arg2;
- (unsigned long long)computeSerializedSizeAsField:(id)arg1;
- (id)deepCopyWithZone:(struct _NSZone *)arg1;
- (_Bool)isInitialized;
- (void)enumerateKeysAndObjectsUsingBlock:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) unsigned long long count;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)initWithObjects:(const id *)arg1 forKeys:(const long long *)arg2 count:(unsigned long long)arg3;
- (id)init;

@end

@interface GPBStringUInt32Dictionary : NSObject <GPBDictionaryInternalsProtocol, NSCopying>
{
    GPBMessage *_autocreator;
    NSMutableDictionary *_dictionary;
}

+ (id)dictionaryWithCapacity:(unsigned long long)arg1;
+ (id)dictionaryWithDictionary:(id)arg1;
+ (id)dictionaryWithUInt32s:(const unsigned int *)arg1 forKeys:(id *)arg2 count:(unsigned long long)arg3;
+ (id)dictionaryWithUInt32:(unsigned int)arg1 forKey:(id)arg2;
+ (id)dictionary;
- (void)removeAll;
- (void)removeUInt32ForKey:(id)arg1;
- (void)setUInt32:(unsigned int)arg1 forKey:(id)arg2;
- (void)addEntriesFromDictionary:(id)arg1;
- (_Bool)getUInt32:(unsigned int *)arg1 forKey:(id)arg2;
- (void)enumerateForTextFormat:(CDUnknownBlockType)arg1;
- (void)setGPBGenericValue:(CDUnion_88782d86 *)arg1 forGPBGenericValueKey:(CDUnion_88782d86 *)arg2;
- (void)writeToCodedOutputStream:(id)arg1 asField:(id)arg2;
- (unsigned long long)computeSerializedSizeAsField:(id)arg1;
- (void)enumerateKeysAndUInt32sUsingBlock:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) unsigned long long count;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)initWithUInt32s:(const unsigned int *)arg1 forKeys:(id *)arg2 count:(unsigned long long)arg3;
- (id)init;

@end

@interface GPBStringInt32Dictionary : NSObject <GPBDictionaryInternalsProtocol, NSCopying>
{
    GPBMessage *_autocreator;
    NSMutableDictionary *_dictionary;
}

+ (id)dictionaryWithCapacity:(unsigned long long)arg1;
+ (id)dictionaryWithDictionary:(id)arg1;
+ (id)dictionaryWithInt32s:(const int *)arg1 forKeys:(id *)arg2 count:(unsigned long long)arg3;
+ (id)dictionaryWithInt32:(int)arg1 forKey:(id)arg2;
+ (id)dictionary;
- (void)removeAll;
- (void)removeInt32ForKey:(id)arg1;
- (void)setInt32:(int)arg1 forKey:(id)arg2;
- (void)addEntriesFromDictionary:(id)arg1;
- (_Bool)getInt32:(int *)arg1 forKey:(id)arg2;
- (void)enumerateForTextFormat:(CDUnknownBlockType)arg1;
- (void)setGPBGenericValue:(CDUnion_88782d86 *)arg1 forGPBGenericValueKey:(CDUnion_88782d86 *)arg2;
- (void)writeToCodedOutputStream:(id)arg1 asField:(id)arg2;
- (unsigned long long)computeSerializedSizeAsField:(id)arg1;
- (void)enumerateKeysAndInt32sUsingBlock:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) unsigned long long count;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)initWithInt32s:(const int *)arg1 forKeys:(id *)arg2 count:(unsigned long long)arg3;
- (id)init;

@end

@interface GPBStringUInt64Dictionary : NSObject <GPBDictionaryInternalsProtocol, NSCopying>
{
    GPBMessage *_autocreator;
    NSMutableDictionary *_dictionary;
}

+ (id)dictionaryWithCapacity:(unsigned long long)arg1;
+ (id)dictionaryWithDictionary:(id)arg1;
+ (id)dictionaryWithUInt64s:(const unsigned long long *)arg1 forKeys:(id *)arg2 count:(unsigned long long)arg3;
+ (id)dictionaryWithUInt64:(unsigned long long)arg1 forKey:(id)arg2;
+ (id)dictionary;
- (void)removeAll;
- (void)removeUInt64ForKey:(id)arg1;
- (void)setUInt64:(unsigned long long)arg1 forKey:(id)arg2;
- (void)addEntriesFromDictionary:(id)arg1;
- (_Bool)getUInt64:(unsigned long long *)arg1 forKey:(id)arg2;
- (void)enumerateForTextFormat:(CDUnknownBlockType)arg1;
- (void)setGPBGenericValue:(CDUnion_88782d86 *)arg1 forGPBGenericValueKey:(CDUnion_88782d86 *)arg2;
- (void)writeToCodedOutputStream:(id)arg1 asField:(id)arg2;
- (unsigned long long)computeSerializedSizeAsField:(id)arg1;
- (void)enumerateKeysAndUInt64sUsingBlock:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) unsigned long long count;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)initWithUInt64s:(const unsigned long long *)arg1 forKeys:(id *)arg2 count:(unsigned long long)arg3;
- (id)init;

@end

@interface GPBStringInt64Dictionary : NSObject <GPBDictionaryInternalsProtocol, NSCopying>
{
    GPBMessage *_autocreator;
    NSMutableDictionary *_dictionary;
}

+ (id)dictionaryWithCapacity:(unsigned long long)arg1;
+ (id)dictionaryWithDictionary:(id)arg1;
+ (id)dictionaryWithInt64s:(const long long *)arg1 forKeys:(id *)arg2 count:(unsigned long long)arg3;
+ (id)dictionaryWithInt64:(long long)arg1 forKey:(id)arg2;
+ (id)dictionary;
- (void)removeAll;
- (void)removeInt64ForKey:(id)arg1;
- (void)setInt64:(long long)arg1 forKey:(id)arg2;
- (void)addEntriesFromDictionary:(id)arg1;
- (_Bool)getInt64:(long long *)arg1 forKey:(id)arg2;
- (void)enumerateForTextFormat:(CDUnknownBlockType)arg1;
- (void)setGPBGenericValue:(CDUnion_88782d86 *)arg1 forGPBGenericValueKey:(CDUnion_88782d86 *)arg2;
- (void)writeToCodedOutputStream:(id)arg1 asField:(id)arg2;
- (unsigned long long)computeSerializedSizeAsField:(id)arg1;
- (void)enumerateKeysAndInt64sUsingBlock:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) unsigned long long count;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)initWithInt64s:(const long long *)arg1 forKeys:(id *)arg2 count:(unsigned long long)arg3;
- (id)init;

@end

@interface GPBStringBoolDictionary : NSObject <GPBDictionaryInternalsProtocol, NSCopying>
{
    GPBMessage *_autocreator;
    NSMutableDictionary *_dictionary;
}

+ (id)dictionaryWithCapacity:(unsigned long long)arg1;
+ (id)dictionaryWithDictionary:(id)arg1;
+ (id)dictionaryWithBools:(const _Bool *)arg1 forKeys:(id *)arg2 count:(unsigned long long)arg3;
+ (id)dictionaryWithBool:(_Bool)arg1 forKey:(id)arg2;
+ (id)dictionary;
- (void)removeAll;
- (void)removeBoolForKey:(id)arg1;
- (void)setBool:(_Bool)arg1 forKey:(id)arg2;
- (void)addEntriesFromDictionary:(id)arg1;
- (_Bool)getBool:(_Bool *)arg1 forKey:(id)arg2;
- (void)enumerateForTextFormat:(CDUnknownBlockType)arg1;
- (void)setGPBGenericValue:(CDUnion_88782d86 *)arg1 forGPBGenericValueKey:(CDUnion_88782d86 *)arg2;
- (void)writeToCodedOutputStream:(id)arg1 asField:(id)arg2;
- (unsigned long long)computeSerializedSizeAsField:(id)arg1;
- (void)enumerateKeysAndBoolsUsingBlock:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) unsigned long long count;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)initWithBools:(const _Bool *)arg1 forKeys:(id *)arg2 count:(unsigned long long)arg3;
- (id)init;

@end

@interface GPBStringFloatDictionary : NSObject <GPBDictionaryInternalsProtocol, NSCopying>
{
    GPBMessage *_autocreator;
    NSMutableDictionary *_dictionary;
}

+ (id)dictionaryWithCapacity:(unsigned long long)arg1;
+ (id)dictionaryWithDictionary:(id)arg1;
+ (id)dictionaryWithFloats:(const float *)arg1 forKeys:(id *)arg2 count:(unsigned long long)arg3;
+ (id)dictionaryWithFloat:(float)arg1 forKey:(id)arg2;
+ (id)dictionary;
- (void)removeAll;
- (void)removeFloatForKey:(id)arg1;
- (void)setFloat:(float)arg1 forKey:(id)arg2;
- (void)addEntriesFromDictionary:(id)arg1;
- (_Bool)getFloat:(float *)arg1 forKey:(id)arg2;
- (void)enumerateForTextFormat:(CDUnknownBlockType)arg1;
- (void)setGPBGenericValue:(CDUnion_88782d86 *)arg1 forGPBGenericValueKey:(CDUnion_88782d86 *)arg2;
- (void)writeToCodedOutputStream:(id)arg1 asField:(id)arg2;
- (unsigned long long)computeSerializedSizeAsField:(id)arg1;
- (void)enumerateKeysAndFloatsUsingBlock:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) unsigned long long count;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)initWithFloats:(const float *)arg1 forKeys:(id *)arg2 count:(unsigned long long)arg3;
- (id)init;

@end

@interface GPBStringDoubleDictionary : NSObject <GPBDictionaryInternalsProtocol, NSCopying>
{
    GPBMessage *_autocreator;
    NSMutableDictionary *_dictionary;
}

+ (id)dictionaryWithCapacity:(unsigned long long)arg1;
+ (id)dictionaryWithDictionary:(id)arg1;
+ (id)dictionaryWithDoubles:(const double *)arg1 forKeys:(id *)arg2 count:(unsigned long long)arg3;
+ (id)dictionaryWithDouble:(double)arg1 forKey:(id)arg2;
+ (id)dictionary;
- (void)removeAll;
- (void)removeDoubleForKey:(id)arg1;
- (void)setDouble:(double)arg1 forKey:(id)arg2;
- (void)addEntriesFromDictionary:(id)arg1;
- (_Bool)getDouble:(double *)arg1 forKey:(id)arg2;
- (void)enumerateForTextFormat:(CDUnknownBlockType)arg1;
- (void)setGPBGenericValue:(CDUnion_88782d86 *)arg1 forGPBGenericValueKey:(CDUnion_88782d86 *)arg2;
- (void)writeToCodedOutputStream:(id)arg1 asField:(id)arg2;
- (unsigned long long)computeSerializedSizeAsField:(id)arg1;
- (void)enumerateKeysAndDoublesUsingBlock:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) unsigned long long count;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)initWithDoubles:(const double *)arg1 forKeys:(id *)arg2 count:(unsigned long long)arg3;
- (id)init;

@end

@interface GPBStringEnumDictionary : NSObject <GPBDictionaryInternalsProtocol, NSCopying>
{
    GPBMessage *_autocreator;
    NSMutableDictionary *_dictionary;
    CDUnknownFunctionPointerType _validationFunc;
}

+ (id)dictionaryWithValidationFunction:(CDUnknownFunctionPointerType)arg1 capacity:(unsigned long long)arg2;
+ (id)dictionaryWithDictionary:(id)arg1;
+ (id)dictionaryWithValidationFunction:(CDUnknownFunctionPointerType)arg1 rawValues:(const int *)arg2 forKeys:(id *)arg3 count:(unsigned long long)arg4;
+ (id)dictionaryWithValidationFunction:(CDUnknownFunctionPointerType)arg1 rawValue:(int)arg2 forKey:(id)arg3;
+ (id)dictionaryWithValidationFunction:(CDUnknownFunctionPointerType)arg1;
+ (id)dictionary;
@property(readonly, nonatomic) CDUnknownFunctionPointerType validationFunc; // @synthesize validationFunc=_validationFunc;
- (void)setEnum:(int)arg1 forKey:(id)arg2;
- (void)removeAll;
- (void)removeEnumForKey:(id)arg1;
- (void)setRawValue:(int)arg1 forKey:(id)arg2;
- (void)addRawEntriesFromDictionary:(id)arg1;
- (void)enumerateKeysAndEnumsUsingBlock:(CDUnknownBlockType)arg1;
- (_Bool)getRawValue:(int *)arg1 forKey:(id)arg2;
- (_Bool)getEnum:(int *)arg1 forKey:(id)arg2;
- (void)enumerateForTextFormat:(CDUnknownBlockType)arg1;
- (void)setGPBGenericValue:(CDUnion_88782d86 *)arg1 forGPBGenericValueKey:(CDUnion_88782d86 *)arg2;
- (id)serializedDataForUnknownValue:(int)arg1 forKey:(CDUnion_88782d86 *)arg2 keyDataType:(unsigned char)arg3;
- (void)writeToCodedOutputStream:(id)arg1 asField:(id)arg2;
- (unsigned long long)computeSerializedSizeAsField:(id)arg1;
- (void)enumerateKeysAndRawValuesUsingBlock:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) unsigned long long count;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithValidationFunction:(CDUnknownFunctionPointerType)arg1 capacity:(unsigned long long)arg2;
- (id)initWithDictionary:(id)arg1;
- (id)initWithValidationFunction:(CDUnknownFunctionPointerType)arg1 rawValues:(const int *)arg2 forKeys:(id *)arg3 count:(unsigned long long)arg4;
- (id)initWithValidationFunction:(CDUnknownFunctionPointerType)arg1;
- (id)init;

@end

@interface GPBBoolUInt32Dictionary : NSObject <GPBDictionaryInternalsProtocol, NSCopying>
{
    GPBMessage *_autocreator;
    unsigned int _values[2];
    _Bool _valueSet[2];
}

+ (id)dictionaryWithCapacity:(unsigned long long)arg1;
+ (id)dictionaryWithDictionary:(id)arg1;
+ (id)dictionaryWithUInt32s:(const unsigned int *)arg1 forKeys:(const _Bool *)arg2 count:(unsigned long long)arg3;
+ (id)dictionaryWithUInt32:(unsigned int)arg1 forKey:(_Bool)arg2;
+ (id)dictionary;
- (void)removeAll;
- (void)removeUInt32ForKey:(_Bool)arg1;
- (void)setUInt32:(unsigned int)arg1 forKey:(_Bool)arg2;
- (void)addEntriesFromDictionary:(id)arg1;
- (void)writeToCodedOutputStream:(id)arg1 asField:(id)arg2;
- (unsigned long long)computeSerializedSizeAsField:(id)arg1;
- (void)enumerateKeysAndUInt32sUsingBlock:(CDUnknownBlockType)arg1;
- (void)enumerateForTextFormat:(CDUnknownBlockType)arg1;
- (void)setGPBGenericValue:(CDUnion_88782d86 *)arg1 forGPBGenericValueKey:(CDUnion_88782d86 *)arg2;
- (_Bool)getUInt32:(unsigned int *)arg1 forKey:(_Bool)arg2;
@property(readonly, nonatomic) unsigned long long count;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)initWithUInt32s:(const unsigned int *)arg1 forKeys:(const _Bool *)arg2 count:(unsigned long long)arg3;
- (id)init;

@end

@interface GPBBoolInt32Dictionary : NSObject <GPBDictionaryInternalsProtocol, NSCopying>
{
    GPBMessage *_autocreator;
    int _values[2];
    _Bool _valueSet[2];
}

+ (id)dictionaryWithCapacity:(unsigned long long)arg1;
+ (id)dictionaryWithDictionary:(id)arg1;
+ (id)dictionaryWithInt32s:(const int *)arg1 forKeys:(const _Bool *)arg2 count:(unsigned long long)arg3;
+ (id)dictionaryWithInt32:(int)arg1 forKey:(_Bool)arg2;
+ (id)dictionary;
- (void)removeAll;
- (void)removeInt32ForKey:(_Bool)arg1;
- (void)setInt32:(int)arg1 forKey:(_Bool)arg2;
- (void)addEntriesFromDictionary:(id)arg1;
- (void)writeToCodedOutputStream:(id)arg1 asField:(id)arg2;
- (unsigned long long)computeSerializedSizeAsField:(id)arg1;
- (void)enumerateKeysAndInt32sUsingBlock:(CDUnknownBlockType)arg1;
- (void)enumerateForTextFormat:(CDUnknownBlockType)arg1;
- (void)setGPBGenericValue:(CDUnion_88782d86 *)arg1 forGPBGenericValueKey:(CDUnion_88782d86 *)arg2;
- (_Bool)getInt32:(int *)arg1 forKey:(_Bool)arg2;
@property(readonly, nonatomic) unsigned long long count;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)initWithInt32s:(const int *)arg1 forKeys:(const _Bool *)arg2 count:(unsigned long long)arg3;
- (id)init;

@end

@interface GPBBoolUInt64Dictionary : NSObject <GPBDictionaryInternalsProtocol, NSCopying>
{
    GPBMessage *_autocreator;
    unsigned long long _values[2];
    _Bool _valueSet[2];
}

+ (id)dictionaryWithCapacity:(unsigned long long)arg1;
+ (id)dictionaryWithDictionary:(id)arg1;
+ (id)dictionaryWithUInt64s:(const unsigned long long *)arg1 forKeys:(const _Bool *)arg2 count:(unsigned long long)arg3;
+ (id)dictionaryWithUInt64:(unsigned long long)arg1 forKey:(_Bool)arg2;
+ (id)dictionary;
- (void)removeAll;
- (void)removeUInt64ForKey:(_Bool)arg1;
- (void)setUInt64:(unsigned long long)arg1 forKey:(_Bool)arg2;
- (void)addEntriesFromDictionary:(id)arg1;
- (void)writeToCodedOutputStream:(id)arg1 asField:(id)arg2;
- (unsigned long long)computeSerializedSizeAsField:(id)arg1;
- (void)enumerateKeysAndUInt64sUsingBlock:(CDUnknownBlockType)arg1;
- (void)enumerateForTextFormat:(CDUnknownBlockType)arg1;
- (void)setGPBGenericValue:(CDUnion_88782d86 *)arg1 forGPBGenericValueKey:(CDUnion_88782d86 *)arg2;
- (_Bool)getUInt64:(unsigned long long *)arg1 forKey:(_Bool)arg2;
@property(readonly, nonatomic) unsigned long long count;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)initWithUInt64s:(const unsigned long long *)arg1 forKeys:(const _Bool *)arg2 count:(unsigned long long)arg3;
- (id)init;

@end

@interface GPBBoolInt64Dictionary : NSObject <GPBDictionaryInternalsProtocol, NSCopying>
{
    GPBMessage *_autocreator;
    long long _values[2];
    _Bool _valueSet[2];
}

+ (id)dictionaryWithCapacity:(unsigned long long)arg1;
+ (id)dictionaryWithDictionary:(id)arg1;
+ (id)dictionaryWithInt64s:(const long long *)arg1 forKeys:(const _Bool *)arg2 count:(unsigned long long)arg3;
+ (id)dictionaryWithInt64:(long long)arg1 forKey:(_Bool)arg2;
+ (id)dictionary;
- (void)removeAll;
- (void)removeInt64ForKey:(_Bool)arg1;
- (void)setInt64:(long long)arg1 forKey:(_Bool)arg2;
- (void)addEntriesFromDictionary:(id)arg1;
- (void)writeToCodedOutputStream:(id)arg1 asField:(id)arg2;
- (unsigned long long)computeSerializedSizeAsField:(id)arg1;
- (void)enumerateKeysAndInt64sUsingBlock:(CDUnknownBlockType)arg1;
- (void)enumerateForTextFormat:(CDUnknownBlockType)arg1;
- (void)setGPBGenericValue:(CDUnion_88782d86 *)arg1 forGPBGenericValueKey:(CDUnion_88782d86 *)arg2;
- (_Bool)getInt64:(long long *)arg1 forKey:(_Bool)arg2;
@property(readonly, nonatomic) unsigned long long count;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)initWithInt64s:(const long long *)arg1 forKeys:(const _Bool *)arg2 count:(unsigned long long)arg3;
- (id)init;

@end

@interface GPBBoolBoolDictionary : NSObject <GPBDictionaryInternalsProtocol, NSCopying>
{
    GPBMessage *_autocreator;
    _Bool _values[2];
    _Bool _valueSet[2];
}

+ (id)dictionaryWithCapacity:(unsigned long long)arg1;
+ (id)dictionaryWithDictionary:(id)arg1;
+ (id)dictionaryWithBools:(const _Bool *)arg1 forKeys:(const _Bool *)arg2 count:(unsigned long long)arg3;
+ (id)dictionaryWithBool:(_Bool)arg1 forKey:(_Bool)arg2;
+ (id)dictionary;
- (void)removeAll;
- (void)removeBoolForKey:(_Bool)arg1;
- (void)setBool:(_Bool)arg1 forKey:(_Bool)arg2;
- (void)addEntriesFromDictionary:(id)arg1;
- (void)writeToCodedOutputStream:(id)arg1 asField:(id)arg2;
- (unsigned long long)computeSerializedSizeAsField:(id)arg1;
- (void)enumerateKeysAndBoolsUsingBlock:(CDUnknownBlockType)arg1;
- (void)enumerateForTextFormat:(CDUnknownBlockType)arg1;
- (void)setGPBGenericValue:(CDUnion_88782d86 *)arg1 forGPBGenericValueKey:(CDUnion_88782d86 *)arg2;
- (_Bool)getBool:(_Bool *)arg1 forKey:(_Bool)arg2;
@property(readonly, nonatomic) unsigned long long count;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)initWithBools:(const _Bool *)arg1 forKeys:(const _Bool *)arg2 count:(unsigned long long)arg3;
- (id)init;

@end

@interface GPBBoolFloatDictionary : NSObject <GPBDictionaryInternalsProtocol, NSCopying>
{
    GPBMessage *_autocreator;
    float _values[2];
    _Bool _valueSet[2];
}

+ (id)dictionaryWithCapacity:(unsigned long long)arg1;
+ (id)dictionaryWithDictionary:(id)arg1;
+ (id)dictionaryWithFloats:(const float *)arg1 forKeys:(const _Bool *)arg2 count:(unsigned long long)arg3;
+ (id)dictionaryWithFloat:(float)arg1 forKey:(_Bool)arg2;
+ (id)dictionary;
- (void)removeAll;
- (void)removeFloatForKey:(_Bool)arg1;
- (void)setFloat:(float)arg1 forKey:(_Bool)arg2;
- (void)addEntriesFromDictionary:(id)arg1;
- (void)writeToCodedOutputStream:(id)arg1 asField:(id)arg2;
- (unsigned long long)computeSerializedSizeAsField:(id)arg1;
- (void)enumerateKeysAndFloatsUsingBlock:(CDUnknownBlockType)arg1;
- (void)enumerateForTextFormat:(CDUnknownBlockType)arg1;
- (void)setGPBGenericValue:(CDUnion_88782d86 *)arg1 forGPBGenericValueKey:(CDUnion_88782d86 *)arg2;
- (_Bool)getFloat:(float *)arg1 forKey:(_Bool)arg2;
@property(readonly, nonatomic) unsigned long long count;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)initWithFloats:(const float *)arg1 forKeys:(const _Bool *)arg2 count:(unsigned long long)arg3;
- (id)init;

@end

@interface GPBBoolDoubleDictionary : NSObject <GPBDictionaryInternalsProtocol, NSCopying>
{
    GPBMessage *_autocreator;
    double _values[2];
    _Bool _valueSet[2];
}

+ (id)dictionaryWithCapacity:(unsigned long long)arg1;
+ (id)dictionaryWithDictionary:(id)arg1;
+ (id)dictionaryWithDoubles:(const double *)arg1 forKeys:(const _Bool *)arg2 count:(unsigned long long)arg3;
+ (id)dictionaryWithDouble:(double)arg1 forKey:(_Bool)arg2;
+ (id)dictionary;
- (void)removeAll;
- (void)removeDoubleForKey:(_Bool)arg1;
- (void)setDouble:(double)arg1 forKey:(_Bool)arg2;
- (void)addEntriesFromDictionary:(id)arg1;
- (void)writeToCodedOutputStream:(id)arg1 asField:(id)arg2;
- (unsigned long long)computeSerializedSizeAsField:(id)arg1;
- (void)enumerateKeysAndDoublesUsingBlock:(CDUnknownBlockType)arg1;
- (void)enumerateForTextFormat:(CDUnknownBlockType)arg1;
- (void)setGPBGenericValue:(CDUnion_88782d86 *)arg1 forGPBGenericValueKey:(CDUnion_88782d86 *)arg2;
- (_Bool)getDouble:(double *)arg1 forKey:(_Bool)arg2;
@property(readonly, nonatomic) unsigned long long count;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)initWithDoubles:(const double *)arg1 forKeys:(const _Bool *)arg2 count:(unsigned long long)arg3;
- (id)init;

@end

@interface GPBBoolObjectDictionary : NSObject <GPBDictionaryInternalsProtocol, NSCopying>
{
    GPBMessage *_autocreator;
    id _values[2];
}

+ (id)dictionaryWithCapacity:(unsigned long long)arg1;
+ (id)dictionaryWithDictionary:(id)arg1;
+ (id)dictionaryWithObjects:(const id *)arg1 forKeys:(const _Bool *)arg2 count:(unsigned long long)arg3;
+ (id)dictionaryWithObject:(id)arg1 forKey:(_Bool)arg2;
+ (id)dictionary;
- (void)removeAll;
- (void)removeObjectForKey:(_Bool)arg1;
- (void)setObject:(id)arg1 forKey:(_Bool)arg2;
- (void)addEntriesFromDictionary:(id)arg1;
- (void)writeToCodedOutputStream:(id)arg1 asField:(id)arg2;
- (unsigned long long)computeSerializedSizeAsField:(id)arg1;
- (id)deepCopyWithZone:(struct _NSZone *)arg1;
- (_Bool)isInitialized;
- (void)enumerateKeysAndObjectsUsingBlock:(CDUnknownBlockType)arg1;
- (void)enumerateForTextFormat:(CDUnknownBlockType)arg1;
- (void)setGPBGenericValue:(CDUnion_88782d86 *)arg1 forGPBGenericValueKey:(CDUnion_88782d86 *)arg2;
- (id)objectForKey:(_Bool)arg1;
@property(readonly, nonatomic) unsigned long long count;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)initWithObjects:(const id *)arg1 forKeys:(const _Bool *)arg2 count:(unsigned long long)arg3;
- (id)init;

@end

@interface GPBBoolEnumDictionary : NSObject <GPBDictionaryInternalsProtocol, NSCopying>
{
    GPBMessage *_autocreator;
    CDUnknownFunctionPointerType _validationFunc;
    int _values[2];
    _Bool _valueSet[2];
}

+ (id)dictionaryWithValidationFunction:(CDUnknownFunctionPointerType)arg1 capacity:(unsigned long long)arg2;
+ (id)dictionaryWithDictionary:(id)arg1;
+ (id)dictionaryWithValidationFunction:(CDUnknownFunctionPointerType)arg1 rawValues:(const int *)arg2 forKeys:(const _Bool *)arg3 count:(unsigned long long)arg4;
+ (id)dictionaryWithValidationFunction:(CDUnknownFunctionPointerType)arg1 rawValue:(int)arg2 forKey:(_Bool)arg3;
+ (id)dictionaryWithValidationFunction:(CDUnknownFunctionPointerType)arg1;
+ (id)dictionary;
@property(readonly, nonatomic) CDUnknownFunctionPointerType validationFunc; // @synthesize validationFunc=_validationFunc;
- (void)removeAll;
- (void)removeEnumForKey:(_Bool)arg1;
- (void)setRawValue:(int)arg1 forKey:(_Bool)arg2;
- (void)setEnum:(int)arg1 forKey:(_Bool)arg2;
- (void)addRawEntriesFromDictionary:(id)arg1;
- (void)setGPBGenericValue:(CDUnion_88782d86 *)arg1 forGPBGenericValueKey:(CDUnion_88782d86 *)arg2;
- (void)enumerateForTextFormat:(CDUnknownBlockType)arg1;
- (void)writeToCodedOutputStream:(id)arg1 asField:(id)arg2;
- (unsigned long long)computeSerializedSizeAsField:(id)arg1;
- (id)serializedDataForUnknownValue:(int)arg1 forKey:(CDUnion_88782d86 *)arg2 keyDataType:(unsigned char)arg3;
- (void)enumerateKeysAndEnumsUsingBlock:(CDUnknownBlockType)arg1;
- (void)enumerateKeysAndRawValuesUsingBlock:(CDUnknownBlockType)arg1;
- (_Bool)getRawValue:(int *)arg1 forKey:(_Bool)arg2;
- (_Bool)getEnum:(int *)arg1 forKey:(_Bool)arg2;
@property(readonly, nonatomic) unsigned long long count;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithValidationFunction:(CDUnknownFunctionPointerType)arg1 capacity:(unsigned long long)arg2;
- (id)initWithDictionary:(id)arg1;
- (id)initWithValidationFunction:(CDUnknownFunctionPointerType)arg1 rawValues:(const int *)arg2 forKeys:(const _Bool *)arg3 count:(unsigned long long)arg4;
- (id)initWithValidationFunction:(CDUnknownFunctionPointerType)arg1;
- (id)init;

@end

@interface GPBAutocreatedDictionary : NSMutableDictionary
{
    GPBMessage *_autocreator;
    NSMutableDictionary *_dictionary;
}

- (void)enumerateKeysAndObjectsWithOptions:(unsigned long long)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (void)enumerateKeysAndObjectsUsingBlock:(CDUnknownBlockType)arg1;
- (void)setObject:(id)arg1 forKeyedSubscript:(id)arg2;
- (id)objectForKeyedSubscript:(id)arg1;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)removeObjectForKey:(id)arg1;
- (void)setObject:(id)arg1 forKey:(id)arg2;
- (id)keyEnumerator;
- (id)objectForKey:(id)arg1;
- (unsigned long long)count;
- (id)initWithObjects:(const id *)arg1 forKeys:(const id *)arg2 count:(unsigned long long)arg3;
- (void)dealloc;

@end

@interface GPBExtensionRegistry : NSObject <NSCopying>
{
    NSMutableDictionary *mutableClassMap_;
}

- (void)addExtensions:(id)arg1;
- (id)extensionForDescriptor:(id)arg1 fieldNumber:(long long)arg2;
- (void)addExtension:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)init;

@end

@interface GPBMessage : NSObject <NSSecureCoding, NSCopying>
{
    GPBUnknownFieldSet *unknownFields_;
    NSMutableDictionary *extensionMap_;
    NSMutableDictionary *autocreatedExtensionMap_;
    GPBMessage *autocreator_;
    GPBFieldDescriptor *autocreatorField_;
    GPBExtensionDescriptor *autocreatorExtension_;
    struct GPBMessage_Storage *messageStorage_;
    NSObject<OS_dispatch_semaphore> *readOnlySemaphore_;
}

+ (_Bool)accessInstanceVariablesDirectly;
+ (_Bool)supportsSecureCoding;
+ (_Bool)resolveClassMethod:(SEL)arg1;
+ (_Bool)resolveInstanceMethod:(SEL)arg1;
+ (id)parseDelimitedFromCodedInputStream:(id)arg1 extensionRegistry:(id)arg2 error:(id *)arg3;
+ (id)parseFromCodedInputStream:(id)arg1 extensionRegistry:(id)arg2 error:(id *)arg3;
+ (id)parseFromData:(id)arg1 extensionRegistry:(id)arg2 error:(id *)arg3;
+ (id)parseFromData:(id)arg1 error:(id *)arg2;
+ (id)message;
+ (id)descriptor;
+ (id)alloc;
+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (void)initialize;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (unsigned long long)serializedSize;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (void)mergeFrom:(id)arg1;
- (void)mergeFromCodedInputStream:(id)arg1 extensionRegistry:(id)arg2;
- (void)addUnknownMapEntry:(int)arg1 value:(id)arg2;
- (_Bool)parseUnknownField:(id)arg1 extensionRegistry:(id)arg2 tag:(unsigned int)arg3;
- (void)parseMessageSet:(id)arg1 extensionRegistry:(id)arg2;
@property(copy, nonatomic) GPBUnknownFieldSet *unknownFields;
- (void)mergeDelimitedFromCodedInputStream:(id)arg1 extensionRegistry:(id)arg2;
- (void)mergeFromData:(id)arg1 extensionRegistry:(id)arg2;
- (void)clearExtension:(id)arg1;
- (void)setExtension:(id)arg1 index:(unsigned long long)arg2 value:(id)arg3;
- (void)addExtension:(id)arg1 value:(id)arg2;
- (void)setExtension:(id)arg1 value:(id)arg2;
- (void)writeExtensionsToCodedOutputStream:(id)arg1 range:(struct GPBExtensionRange)arg2;
- (id)extensionsCurrentlySet;
- (_Bool)hasExtension:(id)arg1;
- (id)getExistingExtension:(id)arg1;
- (id)getExtension:(id)arg1;
- (void)writeField:(id)arg1 toCodedOutputStream:(id)arg2;
- (void)writeDelimitedToCodedOutputStream:(id)arg1;
- (void)writeDelimitedToOutputStream:(id)arg1;
- (void)writeToCodedOutputStream:(id)arg1;
- (void)writeToOutputStream:(id)arg1;
- (id)delimitedData;
- (id)data;
- (id)descriptor;
@property(readonly, nonatomic, getter=isInitialized) _Bool initialized;
- (void)internalClear:(_Bool)arg1;
- (void)clear;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyFieldsInto:(id)arg1 zone:(struct _NSZone *)arg2 descriptor:(id)arg3;
- (void)dealloc;
- (id)initWithCodedInputStream:(id)arg1 extensionRegistry:(id)arg2 error:(id *)arg3;
- (id)initWithData:(id)arg1 extensionRegistry:(id)arg2 error:(id *)arg3;
- (id)initWithData:(id)arg1 error:(id *)arg2;
- (id)init;

@end

@interface GPBRootObject : NSObject
{
}

+ (_Bool)resolveClassMethod:(SEL)arg1;
+ (void)globallyRegisterExtension:(id)arg1;
+ (id)extensionRegistry;
+ (void)initialize;

@end

@interface GPBUnknownField : NSObject <NSCopying>
{
    int number_;
    GPBUInt64Array *mutableVarintList_;
    GPBUInt32Array *mutableFixed32List_;
    GPBUInt64Array *mutableFixed64List_;
    NSMutableArray *mutableLengthDelimitedList_;
    NSMutableArray *mutableGroupList_;
}

@property(readonly, nonatomic) NSArray *groupList; // @synthesize groupList=mutableGroupList_;
@property(readonly, nonatomic) NSArray *lengthDelimitedList; // @synthesize lengthDelimitedList=mutableLengthDelimitedList_;
@property(readonly, nonatomic) GPBUInt64Array *fixed64List; // @synthesize fixed64List=mutableFixed64List_;
@property(readonly, nonatomic) GPBUInt32Array *fixed32List; // @synthesize fixed32List=mutableFixed32List_;
@property(readonly, nonatomic) GPBUInt64Array *varintList; // @synthesize varintList=mutableVarintList_;
@property(readonly, nonatomic) int number; // @synthesize number=number_;
- (void)addGroup:(id)arg1;
- (void)addLengthDelimited:(id)arg1;
- (void)addFixed64:(unsigned long long)arg1;
- (void)addFixed32:(unsigned int)arg1;
- (void)addVarint:(unsigned long long)arg1;
- (void)mergeFromField:(id)arg1;
- (id)description;
- (unsigned long long)serializedSizeAsMessageSetExtension;
- (void)writeAsMessageSetExtensionToOutput:(id)arg1;
- (unsigned long long)serializedSize;
- (void)writeToOutput:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithNumber:(int)arg1;

@end

@interface GPBUnknownFieldSet : NSObject <NSCopying>
{
    struct __CFDictionary *fields_;
}

+ (_Bool)isFieldTag:(int)arg1;
- (void)getTags:(int *)arg1;
- (void)mergeFromCodedInputStream:(id)arg1;
- (void)addUnknownMapEntry:(int)arg1 value:(id)arg2;
- (void)mergeMessageSetMessage:(int)arg1 data:(id)arg2;
- (_Bool)mergeFieldFrom:(int)arg1 input:(id)arg2;
- (void)mergeVarintField:(int)arg1 value:(int)arg2;
- (void)mergeFromData:(id)arg1;
- (void)mergeUnknownFields:(id)arg1;
- (id)mutableFieldForNumber:(int)arg1 create:(_Bool)arg2;
- (void)addField:(id)arg1;
- (id)data;
- (unsigned long long)serializedSizeAsMessageSet;
- (void)writeAsMessageSetTo:(id)arg1;
- (unsigned long long)serializedSize;
- (id)description;
- (void)writeToCodedOutputStream:(id)arg1;
- (id)sortedFields;
- (unsigned long long)countOfFields;
- (id)getField:(int)arg1;
- (_Bool)hasField:(int)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface GPBMessageSignatureProtocol : NSObject <GPBMessageSignatureProtocol>
{
}

@end

@interface PodsDummy_Protobuf : NSObject
{
}

@end

@interface GPBSourceContextRoot : GPBRootObject
{
}

@end

@interface GPBSourceContext : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(copy, nonatomic) NSString *fileName; // @dynamic fileName;

@end

@interface GPBStructRoot : GPBRootObject
{
}

@end

@interface GPBStruct : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(retain, nonatomic) NSMutableDictionary *fields; // @dynamic fields;
@property(readonly, nonatomic) unsigned long long fields_Count; // @dynamic fields_Count;

@end

@interface GPBValue : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) _Bool boolValue; // @dynamic boolValue;
@property(readonly, nonatomic) int kindOneOfCase; // @dynamic kindOneOfCase;
@property(retain, nonatomic) GPBListValue *listValue; // @dynamic listValue;
@property(nonatomic) int nullValue; // @dynamic nullValue;
@property(nonatomic) double numberValue; // @dynamic numberValue;
@property(copy, nonatomic) NSString *stringValue; // @dynamic stringValue;
@property(retain, nonatomic) GPBStruct *structValue; // @dynamic structValue;

@end

@interface GPBListValue : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(retain, nonatomic) NSMutableArray *valuesArray; // @dynamic valuesArray;
@property(readonly, nonatomic) unsigned long long valuesArray_Count; // @dynamic valuesArray_Count;

@end

@interface GPBTimestampRoot : GPBRootObject
{
}

@end

@interface GPBTimestamp : GPBMessage
{
}

+ (id)descriptor;
@property(nonatomic) double timeIntervalSince1970;
@property(retain, nonatomic) NSDate *date;
- (id)initWithTimeIntervalSince1970:(double)arg1;
- (id)initWithDate:(id)arg1;

// Remaining properties
@property(nonatomic) int nanos; // @dynamic nanos;
@property(nonatomic) long long seconds; // @dynamic seconds;

@end

@interface GPBTypeRoot : GPBRootObject
{
}

@end

@interface GPBType : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(retain, nonatomic) NSMutableArray *fieldsArray; // @dynamic fieldsArray;
@property(readonly, nonatomic) unsigned long long fieldsArray_Count; // @dynamic fieldsArray_Count;
@property(nonatomic) _Bool hasSourceContext; // @dynamic hasSourceContext;
@property(copy, nonatomic) NSString *name; // @dynamic name;
@property(retain, nonatomic) NSMutableArray *oneofsArray; // @dynamic oneofsArray;
@property(readonly, nonatomic) unsigned long long oneofsArray_Count; // @dynamic oneofsArray_Count;
@property(retain, nonatomic) NSMutableArray *optionsArray; // @dynamic optionsArray;
@property(readonly, nonatomic) unsigned long long optionsArray_Count; // @dynamic optionsArray_Count;
@property(retain, nonatomic) GPBSourceContext *sourceContext; // @dynamic sourceContext;
@property(nonatomic) int syntax; // @dynamic syntax;

@end

@interface GPBField : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) int cardinality; // @dynamic cardinality;
@property(copy, nonatomic) NSString *defaultValue; // @dynamic defaultValue;
@property(copy, nonatomic) NSString *jsonName; // @dynamic jsonName;
@property(nonatomic) int kind; // @dynamic kind;
@property(copy, nonatomic) NSString *name; // @dynamic name;
@property(nonatomic) int number; // @dynamic number;
@property(nonatomic) int oneofIndex; // @dynamic oneofIndex;
@property(retain, nonatomic) NSMutableArray *optionsArray; // @dynamic optionsArray;
@property(readonly, nonatomic) unsigned long long optionsArray_Count; // @dynamic optionsArray_Count;
@property(nonatomic) _Bool packed; // @dynamic packed;
@property(copy, nonatomic) NSString *typeURL; // @dynamic typeURL;

@end

@interface GPBEnum : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(retain, nonatomic) NSMutableArray *enumvalueArray; // @dynamic enumvalueArray;
@property(readonly, nonatomic) unsigned long long enumvalueArray_Count; // @dynamic enumvalueArray_Count;
@property(nonatomic) _Bool hasSourceContext; // @dynamic hasSourceContext;
@property(copy, nonatomic) NSString *name; // @dynamic name;
@property(retain, nonatomic) NSMutableArray *optionsArray; // @dynamic optionsArray;
@property(readonly, nonatomic) unsigned long long optionsArray_Count; // @dynamic optionsArray_Count;
@property(retain, nonatomic) GPBSourceContext *sourceContext; // @dynamic sourceContext;
@property(nonatomic) int syntax; // @dynamic syntax;

@end

@interface GPBEnumValue : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(copy, nonatomic) NSString *name; // @dynamic name;
@property(nonatomic) int number; // @dynamic number;
@property(retain, nonatomic) NSMutableArray *optionsArray; // @dynamic optionsArray;
@property(readonly, nonatomic) unsigned long long optionsArray_Count; // @dynamic optionsArray_Count;

@end

@interface GPBOption : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) _Bool hasValue; // @dynamic hasValue;
@property(copy, nonatomic) NSString *name; // @dynamic name;
@property(retain, nonatomic) GPBAny *value; // @dynamic value;

@end

@interface GPBWrappersRoot : GPBRootObject
{
}

@end

@interface GPBDoubleValue : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) double value; // @dynamic value;

@end

@interface GPBFloatValue : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) float value; // @dynamic value;

@end

@interface GPBInt64Value : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) long long value; // @dynamic value;

@end

@interface GPBUInt64Value : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) unsigned long long value; // @dynamic value;

@end

@interface GPBInt32Value : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) int value; // @dynamic value;

@end

@interface GPBUInt32Value : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) unsigned int value; // @dynamic value;

@end

@interface GPBBoolValue : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) _Bool value; // @dynamic value;

@end

@interface GPBStringValue : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(copy, nonatomic) NSString *value; // @dynamic value;

@end

@interface GPBBytesValue : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(copy, nonatomic) NSData *value; // @dynamic value;

@end

@interface PodsDummy_nanopb : NSObject
{
}

@end

@interface FIRAIdentifiers : NSObject
{
}

+ (id)sharedInstance;
@property(readonly, copy, nonatomic) NSString *libraryVersion;
@property(readonly, copy, nonatomic) NSString *adEventID;
@property(readonly, copy, nonatomic) NSString *appInstanceID;
@property(readonly, copy, nonatomic) NSString *googleAppID;

@end

@interface FIRASearchAdReporter : NSObject
{
    FIRAAlarm *_searchAdReporterAlarm;
    FIRAPersistedConfig *_persistedConfig;
    _Bool _searchAdReporterEnabled;
}

@property(nonatomic, getter=isSearchAdReporterEnabled) _Bool searchAdReporterEnabled; // @synthesize searchAdReporterEnabled=_searchAdReporterEnabled;
- (void).cxx_destruct;
- (void)lookUpAdConversionDetails;
- (void)logCampaignEventWithSearchAdCampaign:(_Bool)arg1 campaign:(id)arg2 term:(id)arg3;
- (id)adClientInstance;
- (void)cancelScheduling;
- (void)scheduleSearchAdReport;
- (void)maybeLogIAdCampaignEvent;
- (void)dealloc;
- (void)start;
- (id)initWithWorkerQueue:(id)arg1 persistedConfig:(id)arg2;

@end

@interface FIRAZeroingWeakContainer : NSObject
{
    id _object;
}

@property(nonatomic) __weak id object; // @synthesize object=_object;
- (void).cxx_destruct;

@end

@interface FIRAAppDelegateObserver : NSObject
{
    _Bool _isObserving;
}

+ (id)sharedInstance;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)observeUIApplication;

@end

@interface FIRAAppDelegateProxy : NSProxy
{
}

+ (void)notifyInterceptorsWithMethodSelector:(SEL)arg1 callback:(CDUnknownBlockType)arg2;
+ (_Bool)isAppDelegateProxyEnabled;
+ (CDUnknownFunctionPointerType)implementationOfMethodSelector:(SEL)arg1 fromClass:(Class)arg2;
+ (void)addInstanceMethodWithDestinationSelector:(SEL)arg1 withImplementationFromSourceSelector:(SEL)arg2 fromClass:(Class)arg3 toClass:(Class)arg4;
+ (void)addInstanceMethodWithSelector:(SEL)arg1 fromClass:(Class)arg2 toClass:(Class)arg3;
+ (void)createSubclassWithObject:(id)arg1;
+ (void)proxyOriginalDelegate:(id)arg1;
+ (id)interceptors;
+ (void)unregisterAppDelegateInterceptorWithID:(id)arg1;
+ (id)registerAppDelegateInterceptor:(id)arg1;
- (_Bool)application:(id)arg1 continueUserActivity:(id)arg2 restorationHandler:(CDUnknownBlockType)arg3;
- (void)application:(id)arg1 handleEventsForBackgroundURLSession:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (_Bool)application:(id)arg1 openURL:(id)arg2 sourceApplication:(id)arg3 annotation:(id)arg4;
- (_Bool)application:(id)arg1 openURL:(id)arg2 options:(id)arg3;
- (id)fakeDescription;

@end

@interface FIRAAudienceComparisonValues : NSObject
{
    _Bool _valid;
    NSDecimalNumber *_comparisonValue;
    NSDecimalNumber *_maxComparisonValue;
    NSDecimalNumber *_minComparisonValue;
}

@property(nonatomic, getter=isValid) _Bool valid; // @synthesize valid=_valid;
@property(retain, nonatomic) NSDecimalNumber *minComparisonValue; // @synthesize minComparisonValue=_minComparisonValue;
@property(retain, nonatomic) NSDecimalNumber *maxComparisonValue; // @synthesize maxComparisonValue=_maxComparisonValue;
@property(retain, nonatomic) NSDecimalNumber *comparisonValue; // @synthesize comparisonValue=_comparisonValue;
- (void).cxx_destruct;

@end

@interface FIRAConditionalUserProperty : NSObject <NSCopying>
{
    _Bool _active;
    NSString *_name;
    NSString *_origin;
    FIRAValue *_value;
    NSString *_triggerEventName;
    double _triggerTimeout;
    double _timeToLive;
    FIRAEvent *_triggeredEvent;
    FIRAEvent *_timedOutEvent;
    FIRAEvent *_expiredEvent;
    double _creationTimestamp;
    double _triggeredTimestamp;
}

@property(nonatomic) double triggeredTimestamp; // @synthesize triggeredTimestamp=_triggeredTimestamp;
@property(nonatomic, getter=isActive) _Bool active; // @synthesize active=_active;
@property(nonatomic) double creationTimestamp; // @synthesize creationTimestamp=_creationTimestamp;
@property(copy, nonatomic) FIRAEvent *expiredEvent; // @synthesize expiredEvent=_expiredEvent;
@property(copy, nonatomic) FIRAEvent *timedOutEvent; // @synthesize timedOutEvent=_timedOutEvent;
@property(copy, nonatomic) FIRAEvent *triggeredEvent; // @synthesize triggeredEvent=_triggeredEvent;
@property(nonatomic) double timeToLive; // @synthesize timeToLive=_timeToLive;
@property(nonatomic) double triggerTimeout; // @synthesize triggerTimeout=_triggerTimeout;
@property(copy, nonatomic) NSString *triggerEventName; // @synthesize triggerEventName=_triggerEventName;
@property(copy, nonatomic) FIRAValue *value; // @synthesize value=_value;
@property(copy, nonatomic) NSString *origin; // @synthesize origin=_origin;
@property(copy, nonatomic) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface FIRAConditionalUserPropertyController : NSObject
{
}

+ (id)sharedInstance;
- (void)removeConditionalUserPropertyOnWorkerQueue:(id)arg1;
- (void)setConditionalUserPropertyOnWorkerQueue:(id)arg1;
- (id)conditionalUserPropertiesWithNamePrefix:(id)arg1 filterByOrigin:(id)arg2;
- (void)clearConditionalUserPropertyWithClearEvent:(id)arg1 forName:(id)arg2;
- (void)setConditionalUserProperty:(id)arg1 forName:(id)arg2;
- (id)updateConditionalUserPropertiesWithEventNameOnWorkerQueue:(id)arg1;
- (_Bool)removeExpiredCUPWithExpiredEvents:(id *)arg1;
- (_Bool)removeTimedOutCUPWithTimedOutEvents:(id *)arg1;
- (id)processEventOnWorkerQueue:(id)arg1;

@end

@interface FIRAAppMetadata : NSObject
{
    int _lastBundleIndex;
    double _lastBundleStartTimestamp;
    double _lastBundleEndTimestamp;
}

@property(nonatomic) double lastBundleEndTimestamp; // @synthesize lastBundleEndTimestamp=_lastBundleEndTimestamp;
@property(nonatomic) double lastBundleStartTimestamp; // @synthesize lastBundleStartTimestamp=_lastBundleStartTimestamp;
@property(readonly, nonatomic) int lastBundleIndex; // @synthesize lastBundleIndex=_lastBundleIndex;
- (void)incrementLastBundleIndex;
- (id)initWithLastBundleIndex:(int)arg1 lastBundleStartTimestamp:(double)arg2 lastBundleEndTimestamp:(double)arg3;

@end

@interface FIRADailyCounts : NSObject
{
    int _day;
    int _conversionsCount;
    int _allEventsCount;
    int _publicEventsCount;
    int _errorEventsCount;
    int _realtimeCount;
}

@property(readonly, nonatomic) int realtimeCount; // @synthesize realtimeCount=_realtimeCount;
@property(readonly, nonatomic) int errorEventsCount; // @synthesize errorEventsCount=_errorEventsCount;
@property(readonly, nonatomic) int publicEventsCount; // @synthesize publicEventsCount=_publicEventsCount;
@property(readonly, nonatomic) int allEventsCount; // @synthesize allEventsCount=_allEventsCount;
@property(readonly, nonatomic) int conversionsCount; // @synthesize conversionsCount=_conversionsCount;
@property(readonly, nonatomic) int day; // @synthesize day=_day;
- (void)decrementAllEventsCount;
- (void)incrementRealtimeCountsForCurrentDay:(int)arg1;
- (void)incrementErrorEventsCountForCurrentDay:(int)arg1;
- (void)incrementCountsForCurrentDay:(int)arg1 isPublicEvent:(_Bool)arg2 isConversion:(_Bool)arg3;
- (id)initWithDay:(int)arg1 conversionsCount:(int)arg2 allEventsCount:(int)arg3 publicEventsCount:(int)arg4 errorEventsCount:(int)arg5 realtimeCount:(int)arg6;

@end

@interface FIRADataTypeValidator : NSObject
{
}

+ (_Bool)isValidConditionalUserPropertyValue:(id)arg1 failureCode:(long long *)arg2;
+ (_Bool)isValidConditionalUserPropertyName:(id)arg1 failureCode:(long long *)arg2;
+ (_Bool)isValidConditionalUserPropertyOrigin:(id)arg1 failureCode:(long long *)arg2;
+ (_Bool)isValidScreenParameterValue:(id)arg1 failureCode:(long long *)arg2;
+ (_Bool)isValidInternalUserAttributeValue:(id)arg1 failureCode:(long long *)arg2;
+ (_Bool)isValidInternalUserAttributeName:(id)arg1 failureCode:(long long *)arg2;
+ (_Bool)isValidPublicUserAttributeValue:(id)arg1 failureCode:(long long *)arg2;
+ (_Bool)isValidPublicUserAttributeName:(id)arg1 failureCode:(long long *)arg2;
+ (_Bool)isValidInternalEventParameterValue:(id)arg1 failureCode:(long long *)arg2;
+ (_Bool)isValidInternalEventParameterName:(id)arg1 failureCode:(long long *)arg2;
+ (_Bool)isValidInternalEventName:(id)arg1 failureCode:(long long *)arg2;
+ (_Bool)isValidForwardedEventOrigin:(id)arg1 failureCode:(long long *)arg2;
+ (_Bool)isValidInternalEventOrigin:(id)arg1 failureCode:(long long *)arg2;
+ (_Bool)isValidPublicEventParameterValue:(id)arg1 failureCode:(long long *)arg2;
+ (_Bool)isValidPublicEventParameterName:(id)arg1 failureCode:(long long *)arg2;
+ (_Bool)isValidPublicEventName:(id)arg1 failureCode:(long long *)arg2;
+ (_Bool)isValidValue:(id)arg1 minLength:(long long)arg2 maxLength:(long long)arg3 type:(long long)arg4 failureCode:(long long *)arg5;
+ (_Bool)isValidPublicName:(id)arg1 maxLength:(long long)arg2 type:(long long)arg3 failureCode:(long long *)arg4;
+ (_Bool)isValidInternalName:(id)arg1 maxLength:(long long)arg2 type:(long long)arg3 failureCode:(long long *)arg4;
+ (_Bool)isValidString:(id)arg1 minLength:(long long)arg2 maxLength:(long long)arg3 type:(long long)arg4 failureCode:(long long *)arg5;
+ (void)initialize;

@end

@interface FIRAEvent : NSObject <NSCopying>
{
    NSMutableDictionary *_parameters;
    NSString *_origin;
    NSString *_name;
    double _timestamp;
    double _previousTimestamp;
}

+ (_Bool)isValidParameterKey:(id)arg1 isPublicEvent:(_Bool)arg2 errorParameters:(id)arg3;
+ (id)normalizedParametersForParameters:(id)arg1 isPublicEvent:(_Bool)arg2;
@property(readonly, nonatomic) NSDictionary *parameters; // @synthesize parameters=_parameters;
@property(readonly, nonatomic) double previousTimestamp; // @synthesize previousTimestamp=_previousTimestamp;
@property(readonly, nonatomic) double timestamp; // @synthesize timestamp=_timestamp;
@property(readonly, nonatomic) NSString *name; // @synthesize name=_name;
@property(readonly, nonatomic) NSString *origin; // @synthesize origin=_origin;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
@property(readonly, nonatomic) FIRAPBEvent *protoEvent;
- (_Bool)addScreenParameters:(id)arg1;
@property(nonatomic, getter=isDebug) _Bool debug;
@property(nonatomic, getter=isRealtime) _Bool realtime;
@property(nonatomic, getter=isConversion) _Bool conversion;
- (id)copyWithParameters:(id)arg1;
- (id)copyWithPreviousTimestamp:(double)arg1;
- (id)initWithOrigin:(id)arg1 isPublic:(_Bool)arg2 name:(id)arg3 timestamp:(double)arg4 previousTimestamp:(double)arg5 parameters:(id)arg6;
- (id)initWithEventProto:(id)arg1;

@end

@interface FIRAEventAggregates : NSObject
{
    _Bool _lastExemptFromSampling;
    int _lifetimeCount;
    int _currentBundleCount;
    int _lastSamplingRate;
    NSString *_name;
    double _lastFireTimestamp;
    double _lastBundledTimestamp;
    NSNumber *_lastSampledComplexEventID;
}

@property(nonatomic) _Bool lastExemptFromSampling; // @synthesize lastExemptFromSampling=_lastExemptFromSampling;
@property(nonatomic) int lastSamplingRate; // @synthesize lastSamplingRate=_lastSamplingRate;
@property(retain, nonatomic) NSNumber *lastSampledComplexEventID; // @synthesize lastSampledComplexEventID=_lastSampledComplexEventID;
@property(nonatomic) double lastBundledTimestamp; // @synthesize lastBundledTimestamp=_lastBundledTimestamp;
@property(nonatomic) double lastFireTimestamp; // @synthesize lastFireTimestamp=_lastFireTimestamp;
@property(readonly, nonatomic) int currentBundleCount; // @synthesize currentBundleCount=_currentBundleCount;
@property(readonly, nonatomic) int lifetimeCount; // @synthesize lifetimeCount=_lifetimeCount;
@property(readonly, nonatomic) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;
- (void)incrementCurrentBundleCount;
- (void)incrementLifetimeCount;
- (id)initWithName:(id)arg1 lifetimeCount:(int)arg2 currentBundleCount:(int)arg3 lastFireTimestamp:(double)arg4;

@end

@interface FIRAEventFilter : NSObject
{
    int _audienceID;
    int _filterID;
    NSString *_eventName;
    NSData *_data;
}

@property(readonly, nonatomic) NSData *data; // @synthesize data=_data;
@property(readonly, nonatomic) NSString *eventName; // @synthesize eventName=_eventName;
@property(readonly, nonatomic) int filterID; // @synthesize filterID=_filterID;
@property(readonly, nonatomic) int audienceID; // @synthesize audienceID=_audienceID;
- (void).cxx_destruct;
- (id)initWithAudienceID:(int)arg1 filterID:(int)arg2 eventName:(id)arg3 data:(id)arg4;

@end

@interface FIRAFilterResult : NSObject
{
    int _audienceID;
    NSData *_currentResults;
    NSData *_previousResults;
}

@property(readonly, nonatomic) NSData *previousResults; // @synthesize previousResults=_previousResults;
@property(readonly, nonatomic) NSData *currentResults; // @synthesize currentResults=_currentResults;
@property(readonly, nonatomic) int audienceID; // @synthesize audienceID=_audienceID;
- (void).cxx_destruct;
- (id)initWithAudienceID:(int)arg1 currentResults:(id)arg2 previousResults:(id)arg3;

@end

@interface FIRAPropertyFilter : NSObject
{
    int _audienceID;
    int _filterID;
    NSString *_propertyName;
    NSData *_data;
}

@property(readonly, nonatomic) NSData *data; // @synthesize data=_data;
@property(readonly, nonatomic) NSString *propertyName; // @synthesize propertyName=_propertyName;
@property(readonly, nonatomic) int filterID; // @synthesize filterID=_filterID;
@property(readonly, nonatomic) int audienceID; // @synthesize audienceID=_audienceID;
- (void).cxx_destruct;
- (id)initWithAudienceID:(int)arg1 filterID:(int)arg2 propertyName:(id)arg3 data:(id)arg4;

@end

@interface FIRARawEventData : NSObject
{
    FIRAEvent *_rawEvent;
    long long _rowID;
    long long _metadataFingerprint;
}

@property(readonly, nonatomic) long long metadataFingerprint; // @synthesize metadataFingerprint=_metadataFingerprint;
@property(readonly, nonatomic) long long rowID; // @synthesize rowID=_rowID;
@property(readonly, nonatomic) FIRAEvent *rawEvent; // @synthesize rawEvent=_rawEvent;
- (void).cxx_destruct;
- (id)initWithRawEvent:(id)arg1 rowID:(long long)arg2 metadataFingerprint:(long long)arg3;

@end

@interface FIRAUserAttribute : NSObject
{
    NSString *_origin;
    NSString *_name;
    FIRAValue *_value;
    double _lastSetTimestamp;
}

@property(readonly, nonatomic) double lastSetTimestamp; // @synthesize lastSetTimestamp=_lastSetTimestamp;
@property(readonly, nonatomic) FIRAValue *value; // @synthesize value=_value;
@property(readonly, nonatomic) NSString *name; // @synthesize name=_name;
@property(readonly, nonatomic) NSString *origin; // @synthesize origin=_origin;
- (void).cxx_destruct;
@property(readonly, nonatomic) FIRAPBUserAttribute *protoUserAttribute;
@property(readonly, nonatomic) _Bool isPublic;
- (id)initWithOrigin:(id)arg1 name:(id)arg2 value:(id)arg3 lastSetTimestamp:(double)arg4;

@end

@interface FIRAValue : NSObject <NSCopying>
{
    id _value;
    long long _valueType;
}

+ (id)valueFromObject:(id)arg1;
@property(readonly, nonatomic) long long valueType; // @synthesize valueType=_valueType;
- (void).cxx_destruct;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)description;
@property(readonly, nonatomic) NSString *stringValue;
@property(readonly, nonatomic) _Bool isString;
@property(readonly, nonatomic) long long int64Value;
@property(readonly, nonatomic) _Bool isInt64;
@property(readonly, nonatomic) double doubleValue;
@property(readonly, nonatomic) _Bool isDouble;
- (id)initWithValueType:(long long)arg1 value:(id)arg2;
- (id)initWithString:(id)arg1;
- (id)initWithInt64:(long long)arg1;
- (id)initWithDouble:(double)arg1;

@end

@interface FIRASqliteStore : NSObject
{
    struct sqlite3 *_sqliteHandle;
    NSMutableDictionary *_statementCache;
    const char *_queueLabel;
    NSString *_databasePath;
}

@property(readonly, nonatomic) NSString *databasePath; // @synthesize databasePath=_databasePath;
- (void).cxx_destruct;
- (void)setDatabaseError:(id *)arg1 operation:(id)arg2;
- (id)monitorContextForDatabaseOperation:(id)arg1;
- (id)errorDescriptionForDatabaseOperation:(id)arg1;
- (id)lastErrorMessage;
- (_Bool)bindValues:(id)arg1 toStatement:(struct sqlite3_stmt *)arg2 error:(id *)arg3;
- (struct sqlite3_stmt *)updateStatementForRecord:(id)arg1 inTableWithName:(id)arg2 columnName:(id)arg3 columnValue:(id)arg4 error:(id *)arg5;
- (struct sqlite3_stmt *)upsertStatementForRecord:(id)arg1 inTableWithName:(id)arg2 error:(id *)arg3;
- (id)valueAtColumn:(int)arg1 forStatement:(struct sqlite3_stmt *)arg2;
- (void)finalizeAndClearStatements;
- (_Bool)closeAndDeleteDatabase;
- (void)closeDatabase;
- (_Bool)validateDatabaseWithError:(id *)arg1;
- (_Bool)openAndValidateDatabase:(id *)arg1;
- (_Bool)executeSQLStatement:(struct sqlite3_stmt *)arg1 error:(id *)arg2;
- (_Bool)executeSQL:(id)arg1 error:(id *)arg2;
- (struct sqlite3_stmt *)prepareSQL:(id)arg1 error:(id *)arg2;
- (void)cleanUpStatement:(struct sqlite3_stmt *)arg1 forQuery:(id)arg2;
- (struct sqlite3_stmt *)statementForQuery:(id)arg1 parameterValues:(id)arg2 error:(id *)arg3;
- (struct sqlite3_stmt *)statementForQuery:(id)arg1 error:(id *)arg2;
- (_Bool)rollbackTransaction;
- (_Bool)endTransaction;
- (_Bool)beginTransaction;
- (_Bool)performTransaction:(CDUnknownBlockType)arg1;
- (id)numberForQuery:(id)arg1 parameterValues:(id)arg2 error:(id *)arg3;
- (id)recordsForQuery:(id)arg1 parameterValues:(id)arg2 error:(id *)arg3 withFilter:(CDUnknownBlockType)arg4;
- (id)recordsForQuery:(id)arg1 parameterValues:(id)arg2 error:(id *)arg3;
- (_Bool)deleteAllRecordsFromTableWithName:(id)arg1 error:(id *)arg2;
- (id)deleteRecordsFromTableWithName:(id)arg1 condition:(id)arg2 parameterValues:(id)arg3 error:(id *)arg4;
- (_Bool)deleteRecordFromTableWithName:(id)arg1 columnName:(id)arg2 columnValue:(id)arg3 error:(id *)arg4;
- (_Bool)updateRecord:(id)arg1 inTableWithName:(id)arg2 columnName:(id)arg3 columnValue:(id)arg4 error:(id *)arg5;
- (_Bool)upsertRecord:(id)arg1 inTableWithName:(id)arg2 error:(id *)arg3;
- (id)columnInfoForTableWithName:(id)arg1 error:(id *)arg2;
- (id)columnsForTableWithName:(id)arg1 error:(id *)arg2;
- (id)rowCountForTableWithName:(id)arg1 columnName:(id)arg2 columnValue:(id)arg3 error:(id *)arg4;
- (id)rowCountForTableWithName:(id)arg1 error:(id *)arg2;
- (id)tableExists:(id)arg1 error:(id *)arg2;
- (id)validateTableWithName:(id)arg1 requiredColumnNames:(id)arg2 addOnColumns:(id)arg3 error:(id *)arg4;
- (_Bool)copyContentsFromTable:(id)arg1 toTable:(id)arg2 error:(id *)arg3;
- (_Bool)renameTable:(id)arg1 toName:(id)arg2 error:(id *)arg3;
- (_Bool)dropTableWithName:(id)arg1 error:(id *)arg2;
- (_Bool)ensureTableWithName:(id)arg1 createSQL:(id)arg2 requiredColumnNames:(id)arg3 addOnColumns:(id)arg4 error:(id *)arg5;
- (_Bool)ensureTableWithName:(id)arg1 elementaryColumnInfo:(id)arg2 addOnColumnInfo:(id)arg3 modifyColumnInfo:(id)arg4 error:(id *)arg5;
- (_Bool)ensureSchemaOfTableWithName:(id)arg1 elementaryColumnInfo:(id)arg2 addOnColumnInfo:(id)arg3 error:(id *)arg4;
- (_Bool)ensureTableWithName:(id)arg1 elementaryColumnInfo:(id)arg2 addOnColumnInfo:(id)arg3 error:(id *)arg4;
@property(readonly, nonatomic) struct sqlite3 *sqliteHandle;
- (void)dealloc;
- (id)initWithDatabasePath:(id)arg1;

@end

@interface FIRAAdExposureReporter : NSObject
{
    NSMutableDictionary *_adUnitCounts;
    NSMutableDictionary *_adUnitStartTimes;
    double _adExposureStartTime;
    NSObject<OS_dispatch_queue> *_queue;
    _Bool _reportingEnabled;
}

+ (id)sharedInstance;
@property(nonatomic, getter=isReportingEnabled) _Bool reportingEnabled; // @synthesize reportingEnabled=_reportingEnabled;
- (void).cxx_destruct;
- (void)handleAppWillResignActiveWithScreen:(id)arg1;
- (void)handleAppDidBecomeActive;
- (void)handleEngagementTimer:(id)arg1;
- (void)handleScreenDidChangeFromScreen:(id)arg1 toScreen:(id)arg2;
- (void)logAdUnitExposureEventOnSerialQueueWithID:(id)arg1 endTime:(double)arg2 screenParameters:(id)arg3;
- (void)logAdExposureEventOnSerialQueueWithEndTime:(double)arg1 screenParameters:(id)arg2;
- (void)logExposureEventsOnSerialQueueWithEndTime:(double)arg1 screenParameters:(id)arg2;
- (void)logExposureEventsWithScreenParameters:(id)arg1;
- (void)updateStartTimesOnSerialQueue:(double)arg1;
- (double)currentTime;
- (void)endAdUnitExposure:(id)arg1;
- (void)beginAdUnitExposure:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface FIRAAlarm : NSObject
{
    NSObject<OS_dispatch_queue> *_queue;
    NSObject<OS_dispatch_source> *_timer;
    NSString *_name;
    NSDate *_scheduledTimestamp;
}

@property(readonly, nonatomic) NSDate *scheduledTimestamp; // @synthesize scheduledTimestamp=_scheduledTimestamp;
- (void).cxx_destruct;
- (void)dealloc;
- (_Bool)hasActiveTimer;
- (void)cancel;
- (void)runAfterDelay:(double)arg1 withBlock:(CDUnknownBlockType)arg2;
- (id)initWithDispatchQueue:(id)arg1 name:(id)arg2;

@end

@interface FIRAAudience : NSObject
{
    FIRADatabase *_database;
}

+ (_Bool)isValidAudienceProto:(id)arg1 usedAudienceIDs:(id)arg2 error:(id *)arg3;
+ (id)updatedFilterResultWithFilterID:(int)arg1 audienceID:(int)arg2 currentFilterResult:(id)arg3 newEvaluationResult:(id)arg4;
+ (_Bool)isFilterResult:(id)arg1 trueForFilterID:(int)arg2;
- (void).cxx_destruct;
- (_Bool)resultsForBundling:(id *)arg1;
- (_Bool)maybeDeleteStaleFilterResults:(id)arg1;
- (_Bool)updateAudiences:(id)arg1;
- (_Bool)evaluateFiltersForUserProperty:(id)arg1;
- (_Bool)evaluateFiltersForEvent:(id)arg1 eventAggregates:(id)arg2;
- (id)initWithDatabase:(id)arg1;

@end

@interface FIRADatabase : NSObject
{
    FIRASqliteStore *_sqliteStore;
    FIRAPersistedConfig *_persistedConfig;
}

- (void).cxx_destruct;
- (_Bool)updateDataType:(id)arg1 inTableWithName:(id)arg2 columnName:(id)arg3 columnValue:(id)arg4 error:(id *)arg5 createDictionaryBlock:(CDUnknownBlockType)arg6;
- (_Bool)upsertDataType:(id)arg1 inTableWithName:(id)arg2 columnName:(id)arg3 columnValue:(id)arg4 tableLimit:(long long)arg5 error:(id *)arg6 createDictionaryBlock:(CDUnknownBlockType)arg7;
- (_Bool)insertDataType:(id)arg1 inTableWithName:(id)arg2 error:(id *)arg3 createDictionaryBlock:(CDUnknownBlockType)arg4;
- (id)dataTypesFromTableWithName:(id)arg1 columnName:(id)arg2 columnValue:(id)arg3 error:(id *)arg4 createDataTypeBlock:(CDUnknownBlockType)arg5;
- (id)allDataTypesFromTableWithName:(id)arg1 tableLimit:(long long)arg2 error:(id *)arg3 createDataTypeBlock:(CDUnknownBlockType)arg4;
- (_Bool)ensureAllTables;
- (id)conditionalUserPropertiesWithCondition:(id)arg1 parameterValues:(id)arg2 error:(id *)arg3;
- (id)conditionalUserPropertiesWithPrefix:(id)arg1 filterByOrigin:(id)arg2 error:(id *)arg3;
- (id)triggeredConditionalUserPropertiesWithEventName:(id)arg1 error:(id *)arg2;
- (id)expiredConditionalUserPropertiesWithError:(id *)arg1;
- (id)timedOutConditionalUserPropertiesWithError:(id *)arg1;
- (_Bool)deleteConditionalUserPropertyWithName:(id)arg1 error:(id *)arg2;
- (_Bool)updateConditionalUserProperty:(id)arg1 error:(id *)arg2;
- (id)conditionalUserPropertyWithName:(id)arg1 error:(id *)arg2;
- (id)insertIfNotDuplicatePurchaseFingerprint:(id)arg1 error:(id *)arg2;
- (id)lastRemoteConfigUpdateTimestamp:(id *)arg1;
- (id)queryMeasurementConfigWithError:(id *)arg1;
- (_Bool)updateRemoteConfigSuccessfulTimestamp:(double)arg1 error:(id *)arg2;
- (_Bool)updateRemoteConfig:(id)arg1 error:(id *)arg2;
- (_Bool)deleteAllPropertyFilters:(id *)arg1;
- (_Bool)deleteAllEventFilters:(id *)arg1;
- (_Bool)deletePropertyFilters:(id)arg1 error:(id *)arg2;
- (_Bool)deleteEventFilters:(id)arg1 error:(id *)arg2;
- (_Bool)updateFilterResults:(id)arg1 error:(id *)arg2;
- (_Bool)updatePropertyFilters:(id)arg1 error:(id *)arg2;
- (_Bool)updateEventFilters:(id)arg1 error:(id *)arg2;
- (_Bool)deleteFilterResults:(id)arg1 error:(id *)arg2;
- (id)filterResultForAudienceID:(int)arg1 error:(id *)arg2;
- (id)propertyFiltersForPropertyName:(id)arg1 error:(id *)arg2;
- (id)eventFiltersForEventName:(id)arg1 error:(id *)arg2;
- (id)allAudienceIDs:(id *)arg1;
- (id)allFilterResults:(id *)arg1;
- (_Bool)deleteUserAttributeWithName:(id)arg1 error:(id *)arg2;
- (_Bool)updateUserAttribute:(id)arg1 error:(id *)arg2;
- (id)userAttributesIncludingInternal:(_Bool)arg1 error:(id *)arg2;
- (id)allLifetimeValueUserAttributes:(id *)arg1;
- (id)userAttributeWithName:(id)arg1 error:(id *)arg2;
- (id)containsUserAttributeWithName:(id)arg1 error:(id *)arg2;
- (id)userAttributeCountForOrigin:(id)arg1 error:(id *)arg2;
- (id)publicUserAttributeCount:(id *)arg1;
- (_Bool)updateEventAggregates:(id)arg1 error:(id *)arg2;
- (id)eventAggregatesWithName:(id)arg1 error:(id *)arg2;
- (id)allEventAggregates:(id *)arg1;
- (id)publicEventCount:(id *)arg1;
- (id)containsRealtimeBundlesWithError:(id *)arg1;
- (id)queryLatestBundleTime:(id *)arg1;
- (_Bool)deleteStaleBundlesOlderThanMaxAge:(double)arg1 error:(id *)arg2;
- (id)maybeDeleteStaleData:(id *)arg1;
- (_Bool)deleteBundlesWithRowIDs:(id)arg1 error:(id *)arg2;
- (id)queryBundlesWithCountLimit:(long long)arg1 sizeLimit:(long long)arg2 error:(id *)arg3;
- (_Bool)insertBundle:(id)arg1 isRealtime:(_Bool)arg2 error:(id *)arg3;
- (id)isQueuedBundleTableEmpty:(id *)arg1;
- (id)containsRealtimeRawEventsWithError:(id *)arg1;
- (id)rawEventDataFromDictionary:(id)arg1 error:(id *)arg2;
- (id)nextMetadataFingerprintToProcess:(id *)arg1;
- (_Bool)deleteStaleRawEventsDataOlderThanMaxAge:(double)arg1 error:(id *)arg2;
- (id)deleteRawEventsOverAbsoluteLimit:(id *)arg1;
- (_Bool)deleteRawEventsWithMaxRowID:(long long)arg1 error:(id *)arg2;
- (id)containsRawEventWithMetadataFingerprint:(long long)arg1 error:(id *)arg2;
- (id)rawEventsWithMetadataFingerprint:(long long)arg1 error:(id *)arg2 eventFilter:(CDUnknownBlockType)arg3;
- (id)queryLatestRawEventTime:(id *)arg1;
- (_Bool)insertRawEvent:(id)arg1 metadataFingerprint:(long long)arg2 isRealtime:(_Bool)arg3 error:(id *)arg4;
- (id)isRawEventsTableEmpty:(id *)arg1;
- (_Bool)deleteUnusedRawEventsMetadata:(id *)arg1;
- (_Bool)deleteRawEventMetadataWithMetadataFingerprint:(long long)arg1 error:(id *)arg2;
- (id)queryRawEventsMetadataWithFingerprint:(long long)arg1 error:(id *)arg2;
- (_Bool)insertIfNotExistsRawEventMetadata:(id)arg1 error:(id *)arg2;
- (_Bool)updateDailyCounts:(id)arg1 error:(id *)arg2;
- (id)dailyCounts:(id *)arg1;
- (_Bool)updateAppMetadata:(id)arg1 error:(id *)arg2;
- (id)queryAppMetadata:(id *)arg1;
- (_Bool)initializeAppMetadata;
- (_Bool)performTransaction:(CDUnknownBlockType)arg1;
- (id)initWithDatabaseName:(id)arg1 persistedConfig:(id)arg2;

@end

@interface FIRAEnvironmentInfo : NSObject
{
    NSString *_deviceModel;
}

+ (id)sharedInstance;
- (void).cxx_destruct;
@property(readonly, nonatomic) int timeZoneOffsetMinutes;
@property(readonly, nonatomic) NSString *userDefaultLanguage;
@property(readonly, nonatomic) NSString *deviceOSVersion;
@property(readonly, nonatomic) NSString *deviceModel;

@end

@interface FIRAIdentity : NSObject
{
    NSDate *_lastAppInstanceIDUpdateTimestamp;
    NSString *_hashedIDFA;
    NSString *_resettableDeviceID;
    NSString *_appInstanceID;
    _Bool _limitedAdTracking;
    NSString *_identifierForVendorString;
    FIRAPersistedConfig *_persistedConfig;
    NSString *_appIDFromGMP;
    NSString *_appID;
    NSString *_appVersion;
    NSNumber *_appVersionMajor;
    NSNumber *_appVersionMinor;
    NSNumber *_appVersionRelease;
    long long _devCertHash;
}

+ (void)notCalled;
+ (id)numericFieldsFromAppVersionNumeric:(id)arg1;
+ (long long)firebaseAnalyticsLibraryVersion;
+ (id)sharedInstance;
@property(readonly, nonatomic) long long devCertHash; // @synthesize devCertHash=_devCertHash;
@property(readonly, nonatomic) NSNumber *appVersionRelease; // @synthesize appVersionRelease=_appVersionRelease;
@property(readonly, nonatomic) NSNumber *appVersionMinor; // @synthesize appVersionMinor=_appVersionMinor;
@property(readonly, nonatomic) NSNumber *appVersionMajor; // @synthesize appVersionMajor=_appVersionMajor;
@property(readonly, nonatomic) NSString *appVersion; // @synthesize appVersion=_appVersion;
@property(readonly, nonatomic) NSString *appID; // @synthesize appID=_appID;
- (void).cxx_destruct;
@property(readonly, nonatomic) NSString *firebaseInstanceID;
- (id)randomAppInstanceID;
- (void)updateIdentifiers;
@property(readonly, nonatomic) NSString *identifierForVendor;
@property(readonly, nonatomic, getter=isFromAppStore) _Bool fromAppStore;
- (void)setAppIDFromGMP:(id)arg1;
@property(readonly, nonatomic) NSString *appIDFromGMP;
- (id)hashedIDFA;
@property(readonly, nonatomic) NSString *appInstanceID;
@property(readonly, nonatomic) NSString *resettableDeviceID;
@property(readonly, nonatomic) _Bool limitedAdTracking;
@property(readonly, nonatomic) _Bool hasLimitedAdTracking;
- (id)initWithPersistedConfig:(id)arg1 options:(id)arg2;

@end

@interface FIRAMeasurement : NSObject <FIRNetworkLoggerDelegate, FIRNetworkReachabilityDelegate>
{
    FIROptions *_options;
    NSString *_databaseName;
    long long _initializeComponentsOnce;
    FIRAAlarm *_alarm;
    FIRAAudience *_audience;
    FIRADatabase *_database;
    FIRAIdentity *_identity;
    FIRNetwork *_network;
    FIRAPersistedConfig *_persistedConfig;
    FIRARemoteConfig *_remoteConfig;
    FIRAScheduler *_scheduler;
    FIRASessionReporter *_sessionReporter;
    FIRASearchAdReporter *_searchAdReporter;
    NSArray *_uploadingBundleIDs;
    NSString *_previousGMPAppID;
    // Error parsing type: AQ, name: _backgroundUpdateTask
    double _initTimestamp;
    double _suspendedUploadTimestamp;
    _Bool _enabled;
    _Bool _isNetworkRequestPending;
    _Bool _wasEnabledDuringInitialization;
}

+ (void)handleAppDidFinishLaunching:(id)arg1;
+ (id)deepLinkFromUserActivity:(id)arg1;
+ (void)load;
+ (id)remoteConfig;
+ (id)monitor;
+ (id)sharedInstance;
+ (_Bool)hasSharedInstance;
+ (void)initializeSharedInstanceWithOptions:(id)arg1;
@property(readonly, nonatomic) _Bool wasEnabledDuringInitialization; // @synthesize wasEnabledDuringInitialization=_wasEnabledDuringInitialization;
@property(readonly, nonatomic) _Bool isNetworkRequestPending; // @synthesize isNetworkRequestPending=_isNetworkRequestPending;
@property(readonly, nonatomic) FIRASessionReporter *sessionReporter; // @synthesize sessionReporter=_sessionReporter;
@property(readonly, nonatomic) FIRADatabase *database; // @synthesize database=_database;
@property(readonly, nonatomic) FIRAScheduler *scheduler; // @synthesize scheduler=_scheduler;
@property(readonly, nonatomic) FIRAIdentity *identity; // @synthesize identity=_identity;
@property(nonatomic, getter=isEnabled) _Bool enabled; // @synthesize enabled=_enabled;
- (void).cxx_destruct;
- (id)sampleEvents:(id)arg1 error:(id *)arg2;
- (_Bool)isEventBundledAfterRoll:(int)arg1;
- (_Bool)canEventBeSampled:(id)arg1;
- (void)firNetwork_logWithLevel:(long long)arg1 messageCode:(long long)arg2 message:(id)arg3 contexts:(id)arg4;
- (void)firNetwork_logWithLevel:(long long)arg1 messageCode:(long long)arg2 message:(id)arg3 context:(id)arg4;
- (void)firNetwork_logWithLevel:(long long)arg1 messageCode:(long long)arg2 message:(id)arg3;
- (void)handleAppWillResignActiveEvent:(id)arg1;
- (void)terminateBackgroundTask;
- (void)handleAppWillEnterForegroundNotification:(id)arg1;
- (void)handleAppDidBecomeActiveEvent:(id)arg1;
- (void)swapBackgroundTaskWithNewTaskID:(unsigned long long)arg1;
- (void)filterPurchaseTransactions:(id)arg1 callback:(CDUnknownBlockType)arg2;
- (void)networkRemoteConfigFetchCompletionHandler:(id)arg1 data:(id)arg2 error:(id)arg3;
- (void)fetchRemoteConfig;
- (double)firstOpenTimestamp;
- (_Bool)removeBundlesFromDatabaseWithIDs:(id)arg1;
- (_Bool)hasDataToUpload;
- (_Bool)bundleRawEvents;
- (id)createRawEventMetadataWithUserAttributes:(id)arg1;
- (void)maxUserPropertiesForOrigin:(id)arg1 callback:(CDUnknownBlockType)arg2;
- (void)userPropertiesIncludingInternal:(_Bool)arg1 callback:(CDUnknownBlockType)arg2;
- (void)userAttributeWithName:(id)arg1 callback:(CDUnknownBlockType)arg2;
- (void)setUserAttributeOnWorkerQueue:(id)arg1;
- (void)setUserAttribute:(id)arg1;
- (void)removeUserAttributeOnWorkerQueue:(id)arg1;
- (void)removeUserAttribute:(id)arg1;
- (void)maybeAddDebugAndRealtimeParameters:(id)arg1;
- (void)writeEventOnWorkerQueue:(id)arg1;
- (void)handleEventOnWorkerQueue:(id)arg1;
- (void)logEvent:(id)arg1;
- (void)setUploadInProgressWithBundleIDs:(id)arg1;
- (void)networkUploadCompletionHandlerWithResponse:(id)arg1 error:(id)arg2;
- (id)filteredBundlesWithCompatibleAppID:(id)arg1 resettableDeviceID:(id)arg2 vendorDeviceID:(id)arg3 bundlesToUpload:(id)arg4;
- (_Bool)isNetworkReadyForRequest;
- (void)uploadData;
- (void)uploadDataOrRegisterAlarm;
- (double)nextUploadingTime;
- (void)updateSchedule;
- (void)setSessionTimeoutInterval:(double)arg1;
- (void)setMinimumSessionInterval:(double)arg1;
- (_Bool)isAppUpdateWithAnalytics;
- (id)fileAttributesForPath:(id)arg1;
- (long long)timestampMillisRoundedUpToNextHour:(long long)arg1;
- (void)reportOSUpdateOnWorkerQueue;
- (void)reportAppUpdateOnWorkerQueue;
- (void)reportFirstOpenOnWorkerQueue;
- (void)reportStoredCampaignEventOnWorkerQueue:(id)arg1;
- (void)reachabilityDidChange;
- (_Bool)startMeasurementOnWorkerQueue;
- (void)setEnabledOnWorkerQueue:(_Bool)arg1;
- (void)dealloc;
- (_Bool)shouldEnableMeasurement:(id)arg1;
- (id)initWithDatabaseName:(id)arg1 persistedConfig:(id)arg2 network:(id)arg3 scheduler:(id)arg4 alarm:(id)arg5 options:(id)arg6;
- (id)initWithOptions:(id)arg1;
- (_Bool)isValidCampaignURLParamDictionary:(id)arg1;
- (void)handleDebugModeWithURL:(id)arg1;
- (void)handleOpenURLOnWorkerQueue:(id)arg1 clickTimestampInMs:(id)arg2 eventTimestampInSeconds:(double)arg3;
- (void)handleDeepLink:(id)arg1 clickTimestampInMs:(id)arg2 eventTimestampInSeconds:(double)arg3;
- (void)handleOpenURL:(id)arg1 clickTimestampInMs:(id)arg2 eventTimestampInSeconds:(double)arg3;
- (void)handleNonFirstOpenEventURL:(id)arg1 eventTimestampInSeconds:(double)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FIRAMonitor : NSObject
{
    long long _logLevel;
    FIRAASLLogger *_logger;
    FIRAMonitoringSampledData *_monitoringSampledData;
    NSObject<OS_dispatch_queue> *_monitorQueue;
    long long _libraryVersion;
    NSUserDefaults *_monitorUserDefaults;
    long long _excludeBackupOnceToken;
    _Bool _debugModeEnabled;
    _Bool _encodeContexts;
}

+ (id)monitoringDataKeyWithMessage:(id)arg1 logLevel:(long long)arg2 libraryVersion:(long long)arg3;
+ (id)lastFIRASymbolFromException:(id)arg1;
+ (id)encodedStringWithContextObject:(id)arg1;
+ (id)stringWithLogMessage:(id)arg1 logLevel:(long long)arg2 contexts:(id)arg3 encodeContexts:(_Bool)arg4;
+ (id)encodedStringWithContextArray:(id)arg1 insertSpaces:(_Bool)arg2;
+ (_Bool)isMonitorableLevel:(long long)arg1;
+ (_Bool)isSilentLevel:(long long)arg1;
+ (id)logLevelDescriptionFromLogLevel:(long long)arg1;
@property(nonatomic) _Bool encodeContexts; // @synthesize encodeContexts=_encodeContexts;
@property(nonatomic, getter=isDebugModeEnabled) _Bool debugModeEnabled; // @synthesize debugModeEnabled=_debugModeEnabled;
- (void).cxx_destruct;
- (void)synchronizeToDiskOnMonitorQueue;
- (void)migrateMonitorDataOnMonitorQueue;
- (void)saveMonitoringDataToUserDefaultsOnMonitorQueue;
- (void)insertOrUpdateMonitoringDataWithMessage:(id)arg1 encodedContext:(id)arg2 logLevel:(long long)arg3;
- (void)logToConsole:(long long)arg1 message:(id)arg2 logLevel:(long long)arg3;
- (_Bool)isLoggableLevel:(long long)arg1;
- (void)loadMonitoringDataFromUserDefaultsOnMonitorQueue;
- (void)clearMonitoringData;
- (id)monitoringDataForDispatchWithSamplePeriod:(double)arg1 lastSampledTimestamp:(double)arg2;
- (void)logWithLevel:(long long)arg1 messageCode:(long long)arg2 message:(id)arg3 contexts:(id)arg4;
- (void)logWithLevel:(long long)arg1 messageCode:(long long)arg2 message:(id)arg3 context:(id)arg4 context:(id)arg5 context:(id)arg6;
- (void)logWithLevel:(long long)arg1 messageCode:(long long)arg2 message:(id)arg3 context:(id)arg4 context:(id)arg5;
- (void)logWithLevel:(long long)arg1 messageCode:(long long)arg2 message:(id)arg3 context:(id)arg4;
- (void)logWithLevel:(long long)arg1 messageCode:(long long)arg2 message:(id)arg3;
- (void)setLogLevel:(long long)arg1;
- (id)initWithLogLevel:(long long)arg1 logger:(id)arg2 libraryVersion:(long long)arg3;
- (id)initWithLibraryVersion:(long long)arg1;

@end

@interface FIRAPersistedConfig : NSObject
{
    NSString *_name;
    NSUserDefaults *_userDefaults;
    NSObject<OS_dispatch_queue> *_serialQueue;
    long long _excludeBackupOnceToken;
}

+ (id)sharedInstance;
- (void).cxx_destruct;
- (void)synchronizeToDisk;
- (void)scheduleSynchronizeToDisk;
- (void)setString:(id)arg1 forKey:(id)arg2;
- (void)setDouble:(double)arg1 forKey:(id)arg2;
- (void)setInt64:(long long)arg1 forKey:(id)arg2;
- (id)stringForKey:(id)arg1;
- (double)doubleForKey:(id)arg1;
- (long long)int64ForKey:(id)arg1 userDefault:(id)arg2;
- (long long)int64ForKey:(id)arg1;
@property(nonatomic) double engagementTimeBeforeSessionStart;
@property(nonatomic) double lastEngagementCheckpointClockTime;
@property(nonatomic) _Bool startNewSession;
@property(copy, nonatomic) NSString *configServerLastModifiedString;
@property(nonatomic) long long firstOpenTimestampMilliseconds;
@property(nonatomic) double lastMonitorDataSampledTimestamp;
@property(readonly, nonatomic) double midnightOffset;
@property(copy, nonatomic, setter=setOSVersion:) NSString *osVersion;
@property(copy, nonatomic) NSString *appVersion;
@property(nonatomic) double lastFailedUploadTimestamp;
@property(nonatomic) double lastSuccessfulUploadTimestamp;
@property(nonatomic) double lastBackoffTimestamp;
@property(readonly, nonatomic) long long measurementEnabledState;
@property(copy, nonatomic) NSString *hashedIDFA;
@property(copy, nonatomic) NSString *appIDFromGMP;
@property(copy, nonatomic) NSString *appInstanceID;
@property(nonatomic) long long searchAdRetryCount;
@property(nonatomic) double lastSearchAdLookUpTimestamp;
@property(copy, nonatomic) NSNumber *searchAdCampaignValue;
@property(nonatomic) double lastDeleteStaleBundlesTimestamp;
- (void)clearValues;
- (id)initWithSuiteName:(id)arg1;

@end

@interface FIRARemoteConfig : NSObject
{
    _Bool _isDefaultInstance;
    NSString *_appIDFromGMP;
    FIRADatabase *_database;
    FIRMutableDictionary *_cachedValueByRemoteConfigKeys;
    FIRMutableDictionary *_cachedEventConfigByEventName;
    NSNumberFormatter *_numberFormatter;
    FIRAPBMeasurementConfig *_remoteConfigProto;
}

+ (id)defaultInstance;
- (void).cxx_destruct;
- (long long)int64ValueFromCacheWithKey:(id)arg1 defaultValue:(long long)arg2;
- (long long)int64ValueFromCacheWithKey:(id)arg1 defaultValue:(long long)arg2 maxValue:(long long)arg3 minValue:(long long)arg4;
- (int)intValueFromCacheWithKey:(id)arg1 defaultValue:(int)arg2 maxValue:(int)arg3 minValue:(int)arg4;
- (double)timeIntervalInSecondsFromCacheWithKey:(id)arg1 defaultValue:(double)arg2 maxValue:(double)arg3 minValue:(double)arg4;
- (id)numberFromCacheWithKey:(id)arg1 defaultValue:(id)arg2 maxValue:(id)arg3 minValue:(id)arg4 block:(CDUnknownBlockType)arg5;
- (id)numberFromCacheWithKey:(id)arg1 defaultValue:(id)arg2 maxValue:(id)arg3 minValue:(id)arg4;
- (id)cacheValue:(id)arg1 forKey:(id)arg2;
- (id)numberFromString:(id)arg1;
- (id)measurementConfigFromDatabase;
- (void)parseRemoteConfigFromMeasurementConfig:(id)arg1;
@property(readonly, nonatomic) double remoteConfigCacheTimeInterval;
@property(readonly, nonatomic, getter=isEventSamplingEnabled) _Bool eventSamplingEnabled;
@property(readonly, nonatomic) _Bool blacklistPublic;
@property(readonly, nonatomic) _Bool blacklistInternal;
@property(readonly, nonatomic) double uploadingRealTimeInterval;
@property(readonly, nonatomic) double uploadingDebugModeInterval;
@property(readonly, nonatomic) int maxRealtimeEventCountPerDay;
@property(readonly, nonatomic) int maxBundlesCreatedPerIteration;
@property(readonly, nonatomic) double uploadingRetryInterval;
@property(readonly, nonatomic) int uploadingRetryCount;
@property(readonly, nonatomic) long long uploadMaxSizeLimitBytes;
@property(readonly, nonatomic) long long uploadMaxEventsPerBundle;
@property(readonly, nonatomic) long long uploadMaxBundlesLimit;
@property(readonly, nonatomic) double uploadingInitialDelayInterval;
@property(readonly, nonatomic) double uploadingInterval;
@property(readonly, nonatomic) int maxEventsStored;
@property(readonly, nonatomic) int maxTrackedCurrencies;
@property(readonly, nonatomic) int maxErrorEventsPerDay;
@property(readonly, nonatomic) int maxPublicEventsPerDay;
@property(readonly, nonatomic) int maxEventsPerDay;
@property(readonly, nonatomic) int maxConversionsPerDay;
@property(readonly, nonatomic) _Bool dedupePurchasesEnabled;
@property(readonly, nonatomic) _Bool parsePurchaseDataEnabled;
@property(readonly, nonatomic) _Bool uploadWhenAppInBackgroundEnabled;
@property(readonly, nonatomic) double sessionEventUserEngagementInterval;
@property(readonly, nonatomic) double sessionDefaultTimeoutInterval;
@property(readonly, nonatomic) double sessionDefaultMinimumInterval;
@property(readonly, nonatomic) double networkTimeout;
@property(readonly, nonatomic, getter=isNetworkBackgroundSessionEnabled) _Bool networkBackgroundSessionEnabled;
@property(readonly, nonatomic) double monitoringSamplePeriod;
@property(readonly, nonatomic, getter=isIAPSubscriptionNonConsumableReportEnabled) _Bool IAPSubscriptionNonConsumableReportEnabled;
@property(readonly, nonatomic) double maxQueueTime;
@property(readonly, nonatomic) double adIDCacheTime;
@property(readonly, nonatomic) double databaseDeleteStaleBundlesInterval;
@property(readonly, nonatomic) int maxParametersPerFilter;
@property(readonly, nonatomic) int maxFilterResultCount;
@property(readonly, nonatomic) int maxFiltersPerAudience;
@property(readonly, nonatomic) int maxAudienceCount;
@property(readonly, nonatomic, getter=isSearchAdReporterEnabled) _Bool searchAdReporterEnabled;
@property(readonly, nonatomic) double uploadingBackoffInterval;
- (id)remoteConfigURLWithAppInstanceID:(id)arg1 platform:(id)arg2 SDKVersion:(long long)arg3;
@property(readonly, nonatomic) double lastRemoteConfigUpdateTimestamp;
@property(readonly, nonatomic) long long version;
@property(readonly, nonatomic, getter=isExpired) _Bool expired;
- (int)samplingRateForEvent:(id)arg1;
- (_Bool)eventHasSamplingRate:(id)arg1;
- (_Bool)isEventCustomConversion:(id)arg1;
- (_Bool)isEventBlacklisted:(id)arg1;
- (id)eventConfigWithName:(id)arg1;
- (_Bool)updateMeasurementConfig:(id)arg1;
- (id)initWithGMPAppID:(id)arg1 database:(id)arg2 measurementConfig:(id)arg3;
- (id)initWithGMPAppID:(id)arg1 database:(id)arg2;

@end

@interface FIRAScheduler : NSObject
{
    NSObject<OS_dispatch_queue> *_workerQueue;
}

+ (_Bool)checkOnBackgroundThreadWithMethodName:(id)arg1;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *workerQueue; // @synthesize workerQueue=_workerQueue;
- (void).cxx_destruct;
- (void)scheduleOnWorkerQueueBlockID:(id)arg1 block:(CDUnknownBlockType)arg2;
- (id)initWithWorkerQueueLabel:(id)arg1;

@end

@interface FIRASessionReporter : NSObject
{
    FIRAPersistedConfig *_persistedConfig;
    FIRAAlarm *_sessionStartTimer;
    FIRAAlarm *_userEngagementTimer;
    double _engagementStartUptime;
    _Bool _reportingEnabled;
    double _minimumSessionInterval;
    double _timeoutSessionInterval;
}

@property(nonatomic) double timeoutSessionInterval; // @synthesize timeoutSessionInterval=_timeoutSessionInterval;
@property(nonatomic) double minimumSessionInterval; // @synthesize minimumSessionInterval=_minimumSessionInterval;
@property(nonatomic, getter=isReportingEnabled) _Bool reportingEnabled; // @synthesize reportingEnabled=_reportingEnabled;
- (void).cxx_destruct;
- (double)incurredEngagementTime;
- (double)currentClockTime;
- (double)currentUptime;
- (void)rescheduleUserEngagementTimer;
- (void)rescheduleSessionStartTimer;
- (void)handleScreenDidChangeFromScreen:(id)arg1 toScreen:(id)arg2;
- (void)handleAppWillResignActiveWithScreen:(id)arg1;
- (void)handleAppDidBecomeActive;
- (void)logUserEngagementEventWithScreen:(id)arg1;
- (void)logUserEngagementEvent;
- (void)logSessionStartEvent;
- (_Bool)shouldStartNewSession;
- (void)dealloc;
- (id)initWithPersistedConfig:(id)arg1;

@end

@interface FIRAnalytics : NSObject
{
}

+ (void)paymentQueue:(id)arg1 updatedTransactions:(id)arg2;
+ (void)maybeEnableTagManager;
+ (void)notifyEventListenersOnSerialQueue:(id)arg1;
+ (void)notifyEventListeners:(id)arg1;
+ (void)removeLogEventListener:(id)arg1;
+ (id)addLogEventListener:(CDUnknownBlockType)arg1;
+ (void)setLogEventInterceptor:(CDUnknownBlockType)arg1;
+ (void)userPropertiesIncludingInternal:(_Bool)arg1 queue:(id)arg2 callback:(CDUnknownBlockType)arg3;
+ (void)removeInternalUserAttributeForName:(id)arg1;
+ (void)setInternalUserProperty:(id)arg1 forName:(id)arg2;
+ (void)setUserAttributeNumber:(id)arg1 forName:(id)arg2;
+ (void)removeUserAttributeForName:(id)arg1;
+ (void)setUserID:(id)arg1;
+ (void)setUserPropertyString:(id)arg1 forName:(id)arg2;
+ (void)setOpenURLListener:(CDUnknownBlockType)arg1;
+ (void)handleUserActivity:(id)arg1;
+ (void)handleOpenURL:(id)arg1;
+ (void)createAppDelegateProxy;
+ (id)eventsToLogWithEventID:(long long)arg1 origin:(id)arg2 isPublic:(_Bool)arg3 name:(id)arg4 timestamp:(double)arg5 parameters:(id)arg6;
+ (void)logEventOnSerialQueueWithOrigin:(id)arg1 isPublicEvent:(_Bool)arg2 name:(id)arg3 parameters:(id)arg4 timestamp:(double)arg5 ignoreEnabled:(_Bool)arg6 ignoreInterceptor:(_Bool)arg7 addedScreenParameters:(id)arg8;
+ (void)logEventWithOrigin:(id)arg1 isPublicEvent:(_Bool)arg2 name:(id)arg3 parameters:(id)arg4 timestamp:(double)arg5 ignoreEnabled:(_Bool)arg6 ignoreInterceptor:(_Bool)arg7;
+ (void)logEventWithOrigin:(id)arg1 isPublicEvent:(_Bool)arg2 name:(id)arg3 parameters:(id)arg4;
+ (void)logInternalEventWithOrigin:(id)arg1 name:(id)arg2 parameters:(id)arg3;
+ (void)logEventWithOrigin:(id)arg1 name:(id)arg2 parameters:(id)arg3;
+ (void)logEventWithName:(id)arg1 parameters:(id)arg2;
+ (void)logEventsOnWorkerQueue:(id)arg1 notifyEventListeners:(_Bool)arg2;
+ (void)handleEventsForBackgroundURLSession:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
+ (void)handleSetSessionTimeoutInterval:(id)arg1;
+ (void)handleSetMinimumSessionInterval:(id)arg1;
+ (void)handleSetEnabled:(id)arg1;
+ (void)observeNotificationsForAnalyticsConfiguration:(id)arg1;
+ (double)loadTimestamp;
+ (id)appInstanceID;
+ (void)setScreenName:(id)arg1 screenClass:(id)arg2;
+ (void)setAnalyticsEnabled:(_Bool)arg1;
+ (_Bool)isCurrentQueueSerialQueue;
+ (void)unsuspendOperationQueue;
+ (void)queueOperationWithBlock:(CDUnknownBlockType)arg1;
+ (void)dispatchAsyncOnSerialQueue:(CDUnknownBlockType)arg1;
+ (void)startWithConfiguration:(id)arg1 options:(id)arg2;
+ (id)sharedInstance;
+ (void)initialize;
+ (void)load;
- (void)dealloc;
- (void)paymentQueue:(id)arg1 updatedTransactions:(id)arg2;
- (void)logInternalEventWithOrigin:(id)arg1 name:(id)arg2 parameters:(id)arg3;
- (void)maxUserPropertiesForOrigin:(id)arg1 queue:(id)arg2 callback:(CDUnknownBlockType)arg3;
- (void)setInternalUserProperty:(id)arg1 forName:(id)arg2 withOrigin:(id)arg3;

@end

@interface FIRAASIdentifierManager : NSObject
{
    ASIdentifierManager *_sharedIdentifierManager;
}

+ (id)sharedManager;
+ (id)sharedInstance;
- (void).cxx_destruct;
- (id)advertisingIdentifier;
- (_Bool)isAdvertisingTrackingEnabled;
@property(readonly, nonatomic) _Bool limitedAdTracking;
@property(readonly, nonatomic) _Bool hasLimitedAdTracking;
@property(readonly, nonatomic) NSString *advertisingIdentifierString;
- (id)initWithIdentifierManager:(id)arg1;

@end

@interface FIRAInAppPurchaseProductCache : NSObject
{
    NSMutableSet *_invalidProductIdentifiers;
    NSMutableDictionary *_validProducts;
    NSObject<OS_dispatch_queue> *_lockQueue;
}

+ (id)sharedInstance;
- (void).cxx_destruct;
- (void)requestProductsWithProductIdentifiers:(id)arg1 queue:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (id)cachedProductForProductIdentifier:(id)arg1;
- (id)init;

@end

@interface FIRAInAppPurchaseItem : NSObject
{
    _Bool _freeTrial;
    NSString *_subscriptionExpirationDateIA5String;
    NSString *_productID;
    NSString *_originalTransactionID;
    NSString *_transactionID;
}

@property(copy, nonatomic) NSString *transactionID; // @synthesize transactionID=_transactionID;
@property(copy, nonatomic) NSString *originalTransactionID; // @synthesize originalTransactionID=_originalTransactionID;
@property(copy, nonatomic) NSString *productID; // @synthesize productID=_productID;
@property(copy, nonatomic) NSString *subscriptionExpirationDateIA5String; // @synthesize subscriptionExpirationDateIA5String=_subscriptionExpirationDateIA5String;
@property(nonatomic, getter=isFreeTrial) _Bool freeTrial; // @synthesize freeTrial=_freeTrial;
- (void).cxx_destruct;

@end

@interface FIRAInAppPurchaseTransactionReporter : NSObject
{
}

+ (id)transactionFingerprint:(id)arg1;
+ (id)sharedInstance;
- (void)paymentQueue:(id)arg1 updatedFilteredTransactions:(id)arg2;
- (void)reportTransactionsFromArray:(id)arg1;

@end

@interface FIRAProductsRequest : NSObject <SKProductsRequestDelegate>
{
    SKProductsRequest *_productsRequest;
    CDUnknownBlockType _completionHandler;
    NSObject<OS_dispatch_queue> *_queue;
}

+ (void)requestProductsWithProductIdentifiers:(id)arg1 queue:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void).cxx_destruct;
- (void)clearInstance;
- (void)request:(id)arg1 didFailWithError:(id)arg2;
- (void)productsRequest:(id)arg1 didReceiveResponse:(id)arg2;
- (void)requestWithQueue:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (id)initWithProductIdentifiers:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FIRALifetimeValueRecorder : NSObject
{
}

+ (_Bool)isPurchaseEvent:(id)arg1;
+ (_Bool)recordLifetimeValueToDatabase:(id)arg1 event:(id)arg2;

@end

@interface FIRAASLLogger : NSObject <FIRALogging>
{
}

+ (long long)FIRLoggerLevelFromLogLevel:(long long)arg1;
- (void)logMessage:(id)arg1 messageCode:(long long)arg2 withLogLevel:(long long)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FIRAMonitoringSampledData : NSObject
{
    NSMutableArray *_sampledData;
}

+ (id)sampledDataEntryWithKey:(id)arg1 timestamp:(id)arg2 context:(id)arg3 population:(id)arg4;
+ (id)monitoringURLParamWithKey:(id)arg1 population:(id)arg2 context:(id)arg3;
+ (_Bool)isValidUserDefaultsArrayEntry:(id)arg1;
- (void).cxx_destruct;
- (id)sampledData;
- (id)monitoringDataForDispatchWithSamplePeriod:(double)arg1 lastSampledTimestamp:(double)arg2;
- (void)insertOrUpdateSampledDataWithKey:(id)arg1 encodedContext:(id)arg2;
- (id)initWithArray:(id)arg1;

@end

@interface FIRAScreen : NSObject
{
    _Bool _isManuallySet;
    NSString *_name;
    NSString *_className;
    long long _instanceID;
}

@property(nonatomic) _Bool isManuallySet; // @synthesize isManuallySet=_isManuallySet;
@property(readonly, nonatomic) long long instanceID; // @synthesize instanceID=_instanceID;
@property(readonly, nonatomic) NSString *className; // @synthesize className=_className;
@property(readonly, nonatomic) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithName:(id)arg1 className:(id)arg2 instanceID:(long long)arg3;

@end

@interface FIRAScreenViewReporter : NSObject
{
    UIViewController *_currentViewController;
    FIRAScreen *_currentScreen;
    FIRAScreen *_previousScreen;
    _Bool _allowScreenParameters;
    _Bool _allowPostScreenDidChangeNotification;
    _Bool _allowScreenViewEvent;
    _Bool _isAppActive;
    long long _currentScreenInstanceID;
    NSObject<OS_dispatch_queue> *_queue;
}

+ (void)notCalled;
+ (id)sharedInstance;
- (void).cxx_destruct;
- (void)handleApplicationWillResignActive:(id)arg1;
- (void)handleApplicationDidBecomeActive:(id)arg1;
- (void)handleWindowDidResign:(id)arg1;
- (void)logViewScreenEventWithPreviousScreen:(id)arg1 newScreen:(id)arg2;
- (void)postScreenDidChangeNotificationWithPreviousScreen:(id)arg1 newScreen:(id)arg2;
- (void)setCurrentViewController:(id)arg1;
- (void)viewControllerDidDisappear:(id)arg1;
- (void)viewControllerDidAppear:(id)arg1;
- (id)screenParameters;
- (void)setScreenName:(id)arg1 screenClass:(id)arg2;
- (void)getScreenName:(id *)arg1 screenClass:(id *)arg2;
- (_Bool)isAppActive;
- (void)dealloc;
- (id)init;

@end

@interface FIRAAEU : NSObject
{
}

+ (id)sharedApplication;
+ (_Bool)isAEX;
+ (id)systemVersion;
+ (id)deviceModel;
+ (_Bool)isNOD;
+ (_Bool)isASRS;
+ (_Bool)isFAS;
+ (id)appStoreRURL;

@end

@interface FIRAKeychainWrapper : NSObject
{
}

+ (id)keychainDataWithIdentifier:(id)arg1 appID:(id)arg2;
+ (id)searchDirectoryForIdentifier:(id)arg1 withAppID:(id)arg2;
+ (void)deleteKeychainValueWithIdentifier:(id)arg1 appID:(id)arg2;
+ (id)keychainValueWithIdentifier:(id)arg1 appID:(id)arg2;
+ (_Bool)upsertKeychainValue:(id)arg1 withIdentifier:(id)arg2 appID:(id)arg3;

@end

@interface FIRANumericUtil : NSObject
{
}

+ (long long)randomInt64;

@end

@interface FIRAPBAudience : NSObject <NANOMessageBase>
{
    CDStruct_e1a27b1c *_messageInfo;
}

@property(readonly, nonatomic) CDStruct_e1a27b1c *messageInfo; // @synthesize messageInfo=_messageInfo;
@property(readonly, nonatomic) CDUnknownFunctionPointerType copyMessageInfoFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType deallocMessageFieldFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType initMessageInfoFn;
- (id)protoBuffer;
- (id)initWithBuffer:(id)arg1;
- (id)initWithMessageInfo:(CDStruct_e1a27b1c *)arg1;
@property(readonly, nonatomic) const char *messageID;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FIRAPBAudienceLeafFilterResult : NSObject <NANOMessageBase>
{
    CDStruct_e1a27b1c *_messageInfo;
}

@property(readonly, nonatomic) CDStruct_e1a27b1c *messageInfo; // @synthesize messageInfo=_messageInfo;
@property(readonly, nonatomic) CDUnknownFunctionPointerType copyMessageInfoFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType deallocMessageFieldFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType initMessageInfoFn;
- (id)protoBuffer;
- (id)initWithBuffer:(id)arg1;
- (id)initWithMessageInfo:(CDStruct_e1a27b1c *)arg1;
@property(readonly, nonatomic) const char *messageID;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FIRAPBEvent : NSObject <NANOMessageBase>
{
    CDStruct_e1a27b1c *_messageInfo;
}

@property(readonly, nonatomic) CDStruct_e1a27b1c *messageInfo; // @synthesize messageInfo=_messageInfo;
@property(readonly, nonatomic) CDUnknownFunctionPointerType copyMessageInfoFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType deallocMessageFieldFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType initMessageInfoFn;
- (id)protoBuffer;
- (id)initWithBuffer:(id)arg1;
- (id)initWithMessageInfo:(CDStruct_e1a27b1c *)arg1;
@property(readonly, nonatomic) const char *messageID;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FIRAPBEventConfig : NSObject <NANOMessageBase>
{
    CDStruct_e1a27b1c *_messageInfo;
}

@property(readonly, nonatomic) CDStruct_e1a27b1c *messageInfo; // @synthesize messageInfo=_messageInfo;
@property(readonly, nonatomic) CDUnknownFunctionPointerType copyMessageInfoFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType deallocMessageFieldFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType initMessageInfoFn;
- (id)protoBuffer;
- (id)initWithBuffer:(id)arg1;
- (id)initWithMessageInfo:(CDStruct_e1a27b1c *)arg1;
@property(readonly, nonatomic) const char *messageID;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FIRAPBEventFilter : NSObject <NANOMessageBase>
{
    CDStruct_e1a27b1c *_messageInfo;
}

@property(readonly, nonatomic) CDStruct_e1a27b1c *messageInfo; // @synthesize messageInfo=_messageInfo;
@property(readonly, nonatomic) CDUnknownFunctionPointerType copyMessageInfoFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType deallocMessageFieldFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType initMessageInfoFn;
- (id)protoBuffer;
- (id)initWithBuffer:(id)arg1;
- (id)initWithMessageInfo:(CDStruct_e1a27b1c *)arg1;
@property(readonly, nonatomic) const char *messageID;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FIRAPBEventParam : NSObject <NANOMessageBase>
{
    CDStruct_e1a27b1c *_messageInfo;
}

@property(readonly, nonatomic) CDStruct_e1a27b1c *messageInfo; // @synthesize messageInfo=_messageInfo;
@property(readonly, nonatomic) CDUnknownFunctionPointerType copyMessageInfoFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType deallocMessageFieldFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType initMessageInfoFn;
- (id)protoBuffer;
- (id)initWithBuffer:(id)arg1;
- (id)initWithMessageInfo:(CDStruct_e1a27b1c *)arg1;
@property(readonly, nonatomic) const char *messageID;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FIRAPBFilter : NSObject <NANOMessageBase>
{
    CDStruct_e1a27b1c *_messageInfo;
}

@property(readonly, nonatomic) CDStruct_e1a27b1c *messageInfo; // @synthesize messageInfo=_messageInfo;
@property(readonly, nonatomic) CDUnknownFunctionPointerType copyMessageInfoFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType deallocMessageFieldFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType initMessageInfoFn;
- (id)protoBuffer;
- (id)initWithBuffer:(id)arg1;
- (id)initWithMessageInfo:(CDStruct_e1a27b1c *)arg1;
@property(readonly, nonatomic) const char *messageID;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FIRAPBMeasurementBatch : NSObject <NANOMessageBase>
{
    CDStruct_e1a27b1c *_messageInfo;
}

@property(readonly, nonatomic) CDStruct_e1a27b1c *messageInfo; // @synthesize messageInfo=_messageInfo;
@property(readonly, nonatomic) CDUnknownFunctionPointerType copyMessageInfoFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType deallocMessageFieldFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType initMessageInfoFn;
- (id)protoBuffer;
- (id)initWithBuffer:(id)arg1;
- (id)initWithMessageInfo:(CDStruct_e1a27b1c *)arg1;
@property(readonly, nonatomic) const char *messageID;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FIRAPBMeasurementBundle : NSObject <NANOMessageBase>
{
    CDStruct_e1a27b1c *_messageInfo;
}

@property(readonly, nonatomic) CDStruct_e1a27b1c *messageInfo; // @synthesize messageInfo=_messageInfo;
@property(readonly, nonatomic) CDUnknownFunctionPointerType copyMessageInfoFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType deallocMessageFieldFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType initMessageInfoFn;
- (id)protoBuffer;
- (id)initWithBuffer:(id)arg1;
- (id)initWithMessageInfo:(CDStruct_e1a27b1c *)arg1;
@property(readonly, nonatomic) const char *messageID;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FIRAPBMeasurementConfig : NSObject <NANOMessageBase>
{
    CDStruct_e1a27b1c *_messageInfo;
}

@property(readonly, nonatomic) CDStruct_e1a27b1c *messageInfo; // @synthesize messageInfo=_messageInfo;
@property(readonly, nonatomic) CDUnknownFunctionPointerType copyMessageInfoFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType deallocMessageFieldFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType initMessageInfoFn;
- (id)protoBuffer;
- (id)initWithBuffer:(id)arg1;
- (id)initWithMessageInfo:(CDStruct_e1a27b1c *)arg1;
@property(readonly, nonatomic) const char *messageID;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FIRAPBNumberFilter : NSObject <NANOMessageBase>
{
    CDStruct_e1a27b1c *_messageInfo;
}

@property(readonly, nonatomic) CDStruct_e1a27b1c *messageInfo; // @synthesize messageInfo=_messageInfo;
@property(readonly, nonatomic) CDUnknownFunctionPointerType copyMessageInfoFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType deallocMessageFieldFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType initMessageInfoFn;
- (id)protoBuffer;
- (id)initWithBuffer:(id)arg1;
- (id)initWithMessageInfo:(CDStruct_e1a27b1c *)arg1;
@property(readonly, nonatomic) const char *messageID;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FIRAPBPropertyFilter : NSObject <NANOMessageBase>
{
    CDStruct_e1a27b1c *_messageInfo;
}

@property(readonly, nonatomic) CDStruct_e1a27b1c *messageInfo; // @synthesize messageInfo=_messageInfo;
@property(readonly, nonatomic) CDUnknownFunctionPointerType copyMessageInfoFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType deallocMessageFieldFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType initMessageInfoFn;
- (id)protoBuffer;
- (id)initWithBuffer:(id)arg1;
- (id)initWithMessageInfo:(CDStruct_e1a27b1c *)arg1;
@property(readonly, nonatomic) const char *messageID;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FIRAPBResultData : NSObject <NANOMessageBase>
{
    CDStruct_e1a27b1c *_messageInfo;
}

@property(readonly, nonatomic) CDStruct_e1a27b1c *messageInfo; // @synthesize messageInfo=_messageInfo;
@property(readonly, nonatomic) CDUnknownFunctionPointerType copyMessageInfoFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType deallocMessageFieldFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType initMessageInfoFn;
- (id)protoBuffer;
- (id)initWithBuffer:(id)arg1;
- (id)initWithMessageInfo:(CDStruct_e1a27b1c *)arg1;
@property(readonly, nonatomic) const char *messageID;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FIRAPBSetting : NSObject <NANOMessageBase>
{
    CDStruct_e1a27b1c *_messageInfo;
}

@property(readonly, nonatomic) CDStruct_e1a27b1c *messageInfo; // @synthesize messageInfo=_messageInfo;
@property(readonly, nonatomic) CDUnknownFunctionPointerType copyMessageInfoFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType deallocMessageFieldFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType initMessageInfoFn;
- (id)protoBuffer;
- (id)initWithBuffer:(id)arg1;
- (id)initWithMessageInfo:(CDStruct_e1a27b1c *)arg1;
@property(readonly, nonatomic) const char *messageID;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FIRAPBStringFilter : NSObject <NANOMessageBase>
{
    CDStruct_e1a27b1c *_messageInfo;
}

@property(readonly, nonatomic) CDStruct_e1a27b1c *messageInfo; // @synthesize messageInfo=_messageInfo;
@property(readonly, nonatomic) CDUnknownFunctionPointerType copyMessageInfoFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType deallocMessageFieldFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType initMessageInfoFn;
- (id)protoBuffer;
- (id)initWithBuffer:(id)arg1;
- (id)initWithMessageInfo:(CDStruct_e1a27b1c *)arg1;
@property(readonly, nonatomic) const char *messageID;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FIRAPBUserAttribute : NSObject <NANOMessageBase>
{
    CDStruct_e1a27b1c *_messageInfo;
}

@property(readonly, nonatomic) CDStruct_e1a27b1c *messageInfo; // @synthesize messageInfo=_messageInfo;
@property(readonly, nonatomic) CDUnknownFunctionPointerType copyMessageInfoFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType deallocMessageFieldFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType initMessageInfoFn;
- (id)protoBuffer;
- (id)initWithBuffer:(id)arg1;
- (id)initWithMessageInfo:(CDStruct_e1a27b1c *)arg1;
@property(readonly, nonatomic) const char *messageID;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FIRAnalyticsConfiguration : NSObject
{
}

+ (id)sharedInstance;
- (void)setAnalyticsCollectionEnabled:(_Bool)arg1;
- (void)setSessionTimeoutInterval:(double)arg1;
- (void)setMinimumSessionInterval:(double)arg1;
- (void)postNotificationName:(id)arg1 value:(id)arg2;

@end

@interface FIRApp : NSObject
{
    _Bool _alreadySentConfigureNotification;
    _Bool _alreadySentDeleteNotification;
    FIROptions *_options;
    NSString *_name;
    CDUnknownBlockType _getTokenImplementation;
    CDUnknownBlockType _getUIDImplementation;
}

+ (_Bool)validateAppIDFingerprint:(id)arg1 withVersion:(id)arg2;
+ (_Bool)validateAppIDFormat:(id)arg1 withVersion:(id)arg2;
+ (id)actualBundleID;
+ (_Bool)validateAppID:(id)arg1;
+ (_Bool)isDefaultAppConfigured;
+ (id)errorForInvalidAppID;
+ (id)errorForSubspecConfigurationFailureWithDomain:(id)arg1 errorCode:(long long)arg2 service:(id)arg3 reason:(id)arg4;
+ (id)errorForMissingOptions;
+ (void)sendNotificationsToSDKs:(id)arg1;
+ (void)addAppToAppDictionary:(id)arg1;
+ (void)resetApps;
+ (id)allApps;
+ (id)appNamed:(id)arg1;
+ (id)defaultApp;
+ (void)configureWithName:(id)arg1 options:(id)arg2;
+ (void)configureDefaultAppWithOptions:(id)arg1 sendingNotifications:(_Bool)arg2;
+ (void)configureWithOptions:(id)arg1;
+ (void)configure;
@property(copy, nonatomic) CDUnknownBlockType getUIDImplementation; // @synthesize getUIDImplementation=_getUIDImplementation;
@property(copy, nonatomic) CDUnknownBlockType getTokenImplementation; // @synthesize getTokenImplementation=_getTokenImplementation;
@property(nonatomic) _Bool alreadySentDeleteNotification; // @synthesize alreadySentDeleteNotification=_alreadySentDeleteNotification;
@property(nonatomic) _Bool alreadySentConfigureNotification; // @synthesize alreadySentConfigureNotification=_alreadySentConfigureNotification;
@property(readonly, copy, nonatomic) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;
- (void)sendLogsWithServiceName:(id)arg1 version:(id)arg2 error:(id)arg3;
- (id)expectedBundleID;
- (_Bool)isAppIDValid;
- (id)getUID;
- (void)checkExpectedBundleID;
@property(readonly, copy, nonatomic) FIROptions *options; // @synthesize options=_options;
- (_Bool)configureCore;
- (void)getTokenForcingRefresh:(_Bool)arg1 withCallback:(CDUnknownBlockType)arg2;
- (id)initInstanceWithName:(id)arg1 options:(id)arg2;
- (void)deleteApp:(CDUnknownBlockType)arg1;

@end

@interface FIRAppAssociationRegistration : NSObject
{
}

+ (id)registeredObjectWithHost:(id)arg1 key:(id)arg2 creationBlock:(CDUnknownBlockType)arg3;

@end

@interface FIRBundleUtil : NSObject
{
}

+ (_Bool)hasBundleIdentifier:(id)arg1 inBundles:(id)arg2;
+ (id)relevantURLSchemes;
+ (id)optionsDictionaryPathWithResourceName:(id)arg1 andFileType:(id)arg2 inBundles:(id)arg3;
+ (id)relevantBundles;

@end

@interface FIRConfiguration : NSObject
{
    FIRAnalyticsConfiguration *_analyticsConfiguration;
    long long _logLevel;
}

+ (id)sharedInstance;
@property(nonatomic) long long logLevel; // @synthesize logLevel=_logLevel;
@property(retain, nonatomic) FIRAnalyticsConfiguration *analyticsConfiguration; // @synthesize analyticsConfiguration=_analyticsConfiguration;
- (void).cxx_destruct;
- (void)setLoggerLevel:(long long)arg1;
- (id)init;

@end

@interface FIRLoggerWrapper : NSObject
{
}

+ (void)logWithLevel:(long long)arg1 withService:(id)arg2 withCode:(id)arg3 withMessage:(id)arg4 withArgs:(char *)arg5;

@end

@interface FIRMutableDictionary : NSObject
{
    NSMutableDictionary *_objects;
    NSObject<OS_dispatch_queue> *_queue;
}

- (void).cxx_destruct;
- (id)dictionary;
- (void)setObject:(id)arg1 forKeyedSubscript:(id)arg2;
- (id)objectForKeyedSubscript:(id)arg1;
- (unsigned long long)count;
- (void)removeAllObjects;
- (void)removeObjectForKey:(id)arg1;
- (void)setObject:(id)arg1 forKey:(id)arg2;
- (id)objectForKey:(id)arg1;
- (id)description;
- (id)init;

@end

@interface FIRNetwork : NSObject <FIRReachabilityDelegate, FIRNetworkLoggerDelegate>
{
    FIRReachabilityChecker *_reachability;
    FIRMutableDictionary *_requests;
    _Bool _networkConnected;
    _Bool _isDebugModeEnabled;
    id <FIRNetworkReachabilityDelegate> _reachabilityDelegate;
    id <FIRNetworkLoggerDelegate> _loggerDelegate;
    double _timeoutInterval;
}

+ (void)handleEventsForBackgroundURLSessionID:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
@property(nonatomic) double timeoutInterval; // @synthesize timeoutInterval=_timeoutInterval;
@property(nonatomic) _Bool isDebugModeEnabled; // @synthesize isDebugModeEnabled=_isDebugModeEnabled;
@property(nonatomic) __weak id <FIRNetworkLoggerDelegate> loggerDelegate; // @synthesize loggerDelegate=_loggerDelegate;
@property(nonatomic) __weak id <FIRNetworkReachabilityDelegate> reachabilityDelegate; // @synthesize reachabilityDelegate=_reachabilityDelegate;
@property(readonly, nonatomic, getter=isNetworkConnected) _Bool networkConnected; // @synthesize networkConnected=_networkConnected;
- (void).cxx_destruct;
- (void)firNetwork_logWithLevel:(long long)arg1 messageCode:(long long)arg2 message:(id)arg3;
- (void)firNetwork_logWithLevel:(long long)arg1 messageCode:(long long)arg2 message:(id)arg3 context:(id)arg4;
- (void)firNetwork_logWithLevel:(long long)arg1 messageCode:(long long)arg2 message:(id)arg3 contexts:(id)arg4;
- (void)handleErrorWithCode:(long long)arg1 queue:(id)arg2 withHandler:(CDUnknownBlockType)arg3;
- (void)reachability:(id)arg1 statusChanged:(int)arg2;
@property(readonly, nonatomic, getter=hasUploadInProgress) _Bool uploadInProgress;
- (id)getURL:(id)arg1 headers:(id)arg2 queue:(id)arg3 usingBackgroundSession:(_Bool)arg4 completionHandler:(CDUnknownBlockType)arg5;
- (id)postURL:(id)arg1 payload:(id)arg2 queue:(id)arg3 usingBackgroundSession:(_Bool)arg4 completionHandler:(CDUnknownBlockType)arg5;
- (void)dealloc;
- (id)initWithReachabilityHost:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FIRNetworkURLSession : NSObject <NSURLSessionDelegate, NSURLSessionTaskDelegate, NSURLSessionDownloadDelegate>
{
    CDUnknownBlockType _completionHandler;
    NSString *_sessionID;
    NSURLSessionConfiguration *_sessionConfig;
    NSURL *_networkDirectoryURL;
    NSData *_downloadedData;
    NSURL *_uploadingFileURL;
    NSURLRequest *_request;
    _Bool _backgroundNetworkEnabled;
    id <FIRNetworkLoggerDelegate> _loggerDelegate;
}

+ (id)sessionIDToSystemCompletionHandlerDictionary;
+ (id)sessionIDToFetcherMap;
+ (id)fetcherWithSessionIdentifier:(id)arg1;
+ (void)handleEventsForBackgroundURLSessionID:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
@property(nonatomic) __weak id <FIRNetworkLoggerDelegate> loggerDelegate; // @synthesize loggerDelegate=_loggerDelegate;
@property(nonatomic, getter=isBackgroundNetworkEnabled) _Bool backgroundNetworkEnabled; // @synthesize backgroundNetworkEnabled=_backgroundNetworkEnabled;
- (void).cxx_destruct;
- (void)populateSessionConfig:(id)arg1 withRequest:(id)arg2;
- (void)callCompletionHandler:(CDUnknownBlockType)arg1 withResponse:(id)arg2 data:(id)arg3 error:(id)arg4;
- (void)URLSession:(id)arg1 task:(id)arg2 willPerformHTTPRedirection:(id)arg3 newRequest:(id)arg4 completionHandler:(CDUnknownBlockType)arg5;
- (void)excludeFromBackupForURL:(id)arg1;
- (_Bool)ensureTemporaryDirectoryExists;
- (id)temporaryFilePathWithSessionID:(id)arg1;
- (void)removeTempItemAtURL:(id)arg1;
- (void)maybeRemoveTempFilesAtURL:(id)arg1 expiringTime:(double)arg2;
- (id)backgroundSessionConfigWithSessionID:(id)arg1;
- (void)setSessionID:(id)arg1;
- (void)callSystemCompletionHandler:(id)arg1;
- (void)addSystemCompletionHandler:(CDUnknownBlockType)arg1 forSession:(id)arg2;
- (void)URLSession:(id)arg1 task:(id)arg2 didReceiveChallenge:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)URLSession:(id)arg1 task:(id)arg2 didCompleteWithError:(id)arg3;
- (void)URLSessionDidFinishEventsForBackgroundURLSession:(id)arg1;
- (void)URLSession:(id)arg1 downloadTask:(id)arg2 didFinishDownloadingToURL:(id)arg3;
- (id)sessionIDFromAsyncGETRequest:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (id)sessionIDFromAsyncPOSTRequest:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (id)initWithNetworkLoggerDelegate:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FIROptions : NSObject <NSCopying>
{
    NSDictionary *_analyticsOptionsDictionary;
    long long _createAnalyticsOptionsDictionaryOnce;
    _Bool _usingOptionsFromDefaultPlist;
    _Bool _editingLocked;
    NSString *_deepLinkURLScheme;
    NSMutableDictionary *_optionsDictionary;
}

+ (void)resetDefaultOptions;
+ (id)plistFilePathWithName:(id)arg1;
+ (id)defaultOptionsDictionary;
+ (id)defaultOptions;
@property(nonatomic, getter=isEditingLocked) _Bool editingLocked; // @synthesize editingLocked=_editingLocked;
@property(nonatomic) _Bool usingOptionsFromDefaultPlist; // @synthesize usingOptionsFromDefaultPlist=_usingOptionsFromDefaultPlist;
@property(retain, nonatomic) NSMutableDictionary *optionsDictionary; // @synthesize optionsDictionary=_optionsDictionary;
@property(copy, nonatomic) NSString *deepLinkURLScheme; // @synthesize deepLinkURLScheme=_deepLinkURLScheme;
- (void).cxx_destruct;
@property(readonly, nonatomic) _Bool isSignInEnabled;
@property(readonly, nonatomic) _Bool isAnalyticsEnabled;
@property(readonly, nonatomic) _Bool isAnalyticsCollectionDeactivated;
@property(readonly, nonatomic) _Bool isAnalyticsCollectionEnabled;
@property(readonly, nonatomic) _Bool isMeasurementEnabled;
@property(readonly, nonatomic) NSDictionary *analyticsOptionsDictionary;
@property(copy, nonatomic) NSString *bundleID;
@property(copy, nonatomic) NSString *storageBucket;
@property(copy, nonatomic) NSString *databaseURL;
- (void)setLibraryVersionID:(id)arg1;
@property(readonly, copy, nonatomic) NSString *libraryVersionID;
@property(copy, nonatomic) NSString *googleAppID;
@property(copy, nonatomic) NSString *androidClientID;
@property(copy, nonatomic) NSString *projectID;
@property(copy, nonatomic) NSString *GCMSenderID;
@property(copy, nonatomic) NSString *trackingID;
@property(copy, nonatomic) NSString *clientID;
@property(copy, nonatomic) NSString *APIKey;
- (void)checkEditingLocked;
- (id)initWithGoogleAppID:(id)arg1 GCMSenderID:(id)arg2;
- (id)initWithContentsOfFile:(id)arg1;
- (id)initWithGoogleAppID:(id)arg1 bundleID:(id)arg2 GCMSenderID:(id)arg3 APIKey:(id)arg4 clientID:(id)arg5 trackingID:(id)arg6 androidClientID:(id)arg7 databaseURL:(id)arg8 storageBucket:(id)arg9 deepLinkURLScheme:(id)arg10;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initInternalWithOptionsDictionary:(id)arg1;

@end

@interface FIRReachabilityChecker : NSObject
{
    int reachabilityStatus_;
    const struct FIRReachabilityApi *reachabilityApi_;
    struct __SCNetworkReachability *reachability_;
    NSString *host_;
    id <FIRReachabilityDelegate> reachabilityDelegate_;
    id <FIRNetworkLoggerDelegate> loggerDelegate_;
}

@property(nonatomic) __weak id <FIRNetworkLoggerDelegate> loggerDelegate; // @synthesize loggerDelegate=loggerDelegate_;
@property(nonatomic) __weak id <FIRReachabilityDelegate> reachabilityDelegate; // @synthesize reachabilityDelegate=reachabilityDelegate_;
@property(copy, nonatomic) NSString *host; // @synthesize host=host_;
@property(nonatomic) int reachabilityStatus; // @synthesize reachabilityStatus=reachabilityStatus_;
@property(nonatomic) struct __SCNetworkReachability *reachability; // @synthesize reachability=reachability_;
- (void).cxx_destruct;
- (void)reachabilityFlagsChanged:(unsigned int)arg1;
- (int)statusForFlags:(unsigned int)arg1;
- (void)stop;
- (_Bool)start;
- (void)dealloc;
- (id)initWithReachabilityDelegate:(id)arg1 loggerDelegate:(id)arg2 withHost:(id)arg3;
@property(readonly, nonatomic) _Bool isActive;
@property(nonatomic) const struct FIRReachabilityApi *reachabilityApi; // @synthesize reachabilityApi=reachabilityApi_;

@end

@interface FIRAppEnvironmentUtil : NSObject
{
}

+ (_Bool)hasSCInfoFolder;
+ (_Bool)isAppExtension;
+ (id)systemVersion;
+ (id)deviceModel;
+ (_Bool)isSimulator;
+ (_Bool)hasEmbeddedMobileProvision;
+ (_Bool)isAppStoreReceiptSandbox;
+ (_Bool)isFromAppStore;

@end

@interface FIRClearcutWriter : NSObject
{
    int _fd;
    unsigned long long _numBytes;
}

@property(nonatomic) unsigned long long numBytes; // @synthesize numBytes=_numBytes;
@property(nonatomic) int fd; // @synthesize fd=_fd;
- (_Bool)writeLogEvent:(id)arg1;
- (void)close;
- (void)dealloc;
- (id)initWithPath:(id)arg1;

@end

@interface FIRClearcutAccountData : NSObject
{
    NSMutableDictionary *_logSourceToWriter;
    NSString *_accountLogDirectory;
}

@property(copy, nonatomic) NSString *accountLogDirectory; // @synthesize accountLogDirectory=_accountLogDirectory;
@property(readonly, copy, nonatomic) NSMutableDictionary *logSourceToWriter; // @synthesize logSourceToWriter=_logSourceToWriter;
- (void).cxx_destruct;
- (id)filenameWithCurrentTimeInDirectory:(id)arg1;
- (void)flushWriters;
- (void)removeWriterForLogSource:(int)arg1;
- (id)writerForLogSource:(int)arg1;
- (id)initWithAccountLogDirectory:(id)arg1;

@end

@interface FIRClearcutRequest : NSObject
{
    int _logSource;
    NSString *_account;
    NSString *_path;
}

@property(readonly, copy, nonatomic) NSString *path; // @synthesize path=_path;
@property(readonly, copy, nonatomic) NSString *account; // @synthesize account=_account;
@property(readonly, nonatomic) int logSource; // @synthesize logSource=_logSource;
- (void).cxx_destruct;
- (id)initWithLogSource:(int)arg1 account:(id)arg2 path:(id)arg3;

@end

@interface FIRClearcutLogger : NSObject <FIRNetworkReachabilityDelegate>
{
    NSObject<OS_dispatch_queue> *_queue;
    // Error parsing type: AQ, name: _backgroundTaskId
    NSObject *_pendingRequestsLock;
    _Bool _sendScheduled;
    int _uploadRetriesRemaining;
    NSString *_applicationBuild;
    unsigned long long _maxRequestNumBytes;
    NSString *_installIdentifier;
    NSURL *_serverURL;
    NSString *_zwiebackCookie;
    long long _fetcherCookieStorageMethod;
    id <FIRClearcutLoggerDelegate> _delegate;
    NSString *_logDirectory;
    NSMutableDictionary *_accounts;
    long long _sendDelayMillis;
    FIRNetwork *_network;
    NSMutableArray *_pendingRequests;
}

+ (id)sharedInstance;
@property(readonly, copy, nonatomic) NSMutableArray *pendingRequests; // @synthesize pendingRequests=_pendingRequests;
@property(retain, nonatomic) FIRNetwork *network; // @synthesize network=_network;
@property(nonatomic) _Bool sendScheduled; // @synthesize sendScheduled=_sendScheduled;
@property(nonatomic) int uploadRetriesRemaining; // @synthesize uploadRetriesRemaining=_uploadRetriesRemaining;
@property(nonatomic) long long sendDelayMillis; // @synthesize sendDelayMillis=_sendDelayMillis;
@property(readonly, copy, nonatomic) NSMutableDictionary *accounts; // @synthesize accounts=_accounts;
@property(copy, nonatomic) NSString *logDirectory; // @synthesize logDirectory=_logDirectory;
@property(nonatomic) __weak id <FIRClearcutLoggerDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) long long fetcherCookieStorageMethod; // @synthesize fetcherCookieStorageMethod=_fetcherCookieStorageMethod;
@property(copy) NSString *zwiebackCookie; // @synthesize zwiebackCookie=_zwiebackCookie;
@property(copy) NSURL *serverURL; // @synthesize serverURL=_serverURL;
@property(copy) NSString *installIdentifier; // @synthesize installIdentifier=_installIdentifier;
@property unsigned long long maxRequestNumBytes; // @synthesize maxRequestNumBytes=_maxRequestNumBytes;
@property(copy) NSString *applicationBuild; // @synthesize applicationBuild=_applicationBuild;
- (void).cxx_destruct;
@property(nonatomic) unsigned long long backgroundTaskId; // @dynamic backgroundTaskId;
- (void)reachabilityDidChange;
- (void)sendNextPendingRequestWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)scheduleNextSend;
- (id)nextPendingRequest;
- (void)sendLogsWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)updatePendingRequests;
- (void)flushWriters;
- (id)logRequestFromPath:(id)arg1 logSource:(int)arg2;
- (id)accountDataForAccount:(id)arg1;
- (void)logEvent:(id)arg1 logSource:(int)arg2 account:(id)arg3;
- (void)flushWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)applicationDidEnterBackground:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface FIRDiagnostics : NSObject
{
}

+ (void)logDiagnostics:(id)arg1;
+ (_Bool)writeString:(id)arg1 toURL:(id)arg2;
+ (id)stringAtURL:(id)arg1;
+ (id)filePathURLWithName:(id)arg1;
+ (id)installString;
+ (id)deviceModel;
+ (id)mapFromServiceStringToTypeEnum:(id)arg1;
+ (void)populateLogProtoWithInfoPlistValues:(id)arg1;
+ (void)populateLogProtoWithNumberOfLinkedFrameworks:(id)arg1;
+ (void)populateLogProtoWithInstalledServices:(id)arg1;
+ (void)populateLogProtoWithCommonInfo:(id)arg1 app:(id)arg2;
+ (void)sendLogsToClearcut:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;
+ (void)load;

@end

@interface CLRPBClientInfo : NSObject <NANOMessageBase>
{
    CDStruct_e1a27b1c *_messageInfo;
}

@property(readonly, nonatomic) CDStruct_e1a27b1c *messageInfo; // @synthesize messageInfo=_messageInfo;
@property(readonly, nonatomic) CDUnknownFunctionPointerType copyMessageInfoFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType deallocMessageFieldFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType initMessageInfoFn;
- (id)protoBuffer;
- (id)initWithBuffer:(id)arg1;
- (id)initWithMessageInfo:(CDStruct_e1a27b1c *)arg1;
@property(readonly, nonatomic) const char *messageID;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CLRPBIosClientInfo : NSObject <NANOMessageBase>
{
    CDStruct_e1a27b1c *_messageInfo;
}

@property(readonly, nonatomic) CDStruct_e1a27b1c *messageInfo; // @synthesize messageInfo=_messageInfo;
@property(readonly, nonatomic) CDUnknownFunctionPointerType copyMessageInfoFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType deallocMessageFieldFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType initMessageInfoFn;
- (id)protoBuffer;
- (id)initWithBuffer:(id)arg1;
- (id)initWithMessageInfo:(CDStruct_e1a27b1c *)arg1;
@property(readonly, nonatomic) const char *messageID;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CLRPBLogEvent : NSObject <NANOMessageBase>
{
    CDStruct_e1a27b1c *_messageInfo;
}

@property(readonly, nonatomic) CDStruct_e1a27b1c *messageInfo; // @synthesize messageInfo=_messageInfo;
@property(readonly, nonatomic) CDUnknownFunctionPointerType copyMessageInfoFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType deallocMessageFieldFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType initMessageInfoFn;
- (id)protoBuffer;
- (id)initWithBuffer:(id)arg1;
- (id)initWithMessageInfo:(CDStruct_e1a27b1c *)arg1;
@property(readonly, nonatomic) const char *messageID;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CLRPBLogRequest : NSObject <NANOMessageBase>
{
    CDStruct_e1a27b1c *_messageInfo;
}

@property(readonly, nonatomic) CDStruct_e1a27b1c *messageInfo; // @synthesize messageInfo=_messageInfo;
@property(readonly, nonatomic) CDUnknownFunctionPointerType copyMessageInfoFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType deallocMessageFieldFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType initMessageInfoFn;
- (id)protoBuffer;
- (id)initWithBuffer:(id)arg1;
- (id)initWithMessageInfo:(CDStruct_e1a27b1c *)arg1;
@property(readonly, nonatomic) const char *messageID;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FIRPBErrorInfo : NSObject <NANOMessageBase>
{
    CDStruct_e1a27b1c *_messageInfo;
}

@property(readonly, nonatomic) CDStruct_e1a27b1c *messageInfo; // @synthesize messageInfo=_messageInfo;
@property(readonly, nonatomic) CDUnknownFunctionPointerType copyMessageInfoFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType deallocMessageFieldFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType initMessageInfoFn;
- (id)protoBuffer;
- (id)initWithBuffer:(id)arg1;
- (id)initWithMessageInfo:(CDStruct_e1a27b1c *)arg1;
@property(readonly, nonatomic) const char *messageID;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FIRPBICoreConfiguration : NSObject <NANOMessageBase>
{
    CDStruct_e1a27b1c *_messageInfo;
}

@property(readonly, nonatomic) CDStruct_e1a27b1c *messageInfo; // @synthesize messageInfo=_messageInfo;
@property(readonly, nonatomic) CDUnknownFunctionPointerType copyMessageInfoFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType deallocMessageFieldFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType initMessageInfoFn;
- (id)protoBuffer;
- (id)initWithBuffer:(id)arg1;
- (id)initWithMessageInfo:(CDStruct_e1a27b1c *)arg1;
@property(readonly, nonatomic) const char *messageID;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FIRInstanceID : NSObject <FIRInstanceIDKeyPairStoreDelegate>
{
    _Bool _isFetchingDefaultToken;
    _Bool _isDefaultTokenFetchScheduled;
    NSString *_fcmSenderID;
    NSString *_firebaseAppID;
    NSData *_apnsTokenData;
    long long _apnsTokenType;
    NSString *_APNSTupleString;
    NSString *_defaultFCMToken;
    FIRInstanceIDTokenManager *_tokenManager;
    FIRInstanceIDKeyPairStore *_keyPairStore;
    long long _retryCountForDefaultToken;
    long long _retryCountForCheckinRefresh;
}

+ (long long)maxRetryIntervalForDefaultTokenInSeconds;
+ (long long)minIntervalForDefaultTokenRetry;
+ (long long)maxRetryCountForDefaultToken;
+ (id)instanceID;
@property(nonatomic) long long retryCountForCheckinRefresh; // @synthesize retryCountForCheckinRefresh=_retryCountForCheckinRefresh;
@property(nonatomic) long long retryCountForDefaultToken; // @synthesize retryCountForDefaultToken=_retryCountForDefaultToken;
@property _Bool isDefaultTokenFetchScheduled; // @synthesize isDefaultTokenFetchScheduled=_isDefaultTokenFetchScheduled;
@property _Bool isFetchingDefaultToken; // @synthesize isFetchingDefaultToken=_isFetchingDefaultToken;
@property(retain, nonatomic) FIRInstanceIDKeyPairStore *keyPairStore; // @synthesize keyPairStore=_keyPairStore;
@property(retain, nonatomic) FIRInstanceIDTokenManager *tokenManager; // @synthesize tokenManager=_tokenManager;
@property(copy, nonatomic) NSString *defaultFCMToken; // @synthesize defaultFCMToken=_defaultFCMToken;
@property(copy, nonatomic) NSString *APNSTupleString; // @synthesize APNSTupleString=_APNSTupleString;
@property(nonatomic) long long apnsTokenType; // @synthesize apnsTokenType=_apnsTokenType;
@property(retain, nonatomic) NSData *apnsTokenData; // @synthesize apnsTokenData=_apnsTokenData;
@property(copy, nonatomic) NSString *firebaseAppID; // @synthesize firebaseAppID=_firebaseAppID;
@property(copy, nonatomic) NSString *fcmSenderID; // @synthesize fcmSenderID=_fcmSenderID;
- (void).cxx_destruct;
- (void)logAPNSConfigurationError:(id)arg1;
- (_Bool)isProductionApp;
- (_Bool)isSandboxApp;
- (void)setAPNSToken:(id)arg1 type:(long long)arg2;
- (void)defaultTokenWithHandler:(CDUnknownBlockType)arg1;
- (void)fetchDefaultToken;
- (long long)retryIntervalToFetchDefaultToken;
- (void)keyPairStoreDidDeleteKeyPair:(id)arg1;
- (void)setupNotificationListeners;
- (void)setupKeyPairManager;
- (void)setupTokenManager;
- (void)start;
- (void)didCompleteConfigure;
- (void)deleteIdentity:(id *)arg1;
- (void)notifyIdentityReset;
- (void)deleteIDWithHandler:(CDUnknownBlockType)arg1;
- (void)getIDWithHandler:(CDUnknownBlockType)arg1;
- (void)asyncLoadKeyPairWithHandler:(CDUnknownBlockType)arg1;
- (void)deleteTokenWithAuthorizedEntity:(id)arg1 scope:(id)arg2 handler:(CDUnknownBlockType)arg3;
- (void)tokenWithAuthorizedEntity:(id)arg1 scope:(id)arg2 options:(id)arg3 handler:(CDUnknownBlockType)arg4;
- (id)cachedTokenIfAvailable;
- (id)token;
- (void)stopAllRequests;
- (void)dealloc;
- (id)initPrivately;
- (id)appInstanceID:(id *)arg1;
- (void)fetchCheckinInfoWithHandler:(CDUnknownBlockType)arg1;
- (id)cachedCheckinPreferences;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FIRInstanceIDAPNSInfo : NSObject <NSCoding>
{
    _Bool _sandbox;
    NSData *_deviceToken;
}

@property(readonly, nonatomic, getter=isSandbox) _Bool sandbox; // @synthesize sandbox=_sandbox;
@property(readonly, nonatomic) NSData *deviceToken; // @synthesize deviceToken=_deviceToken;
- (void).cxx_destruct;
- (_Bool)isEqualToAPNSInfo:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithTokenOptionsDictionary:(id)arg1;
- (id)initWithDeviceToken:(id)arg1 isSandbox:(_Bool)arg2;

@end

@interface FIRInstanceIDAuthKeychainItem : NSObject
{
    NSString *_account;
    NSString *_service;
    NSData *_data;
    NSDate *_modificationDate;
}

+ (id)keychainItemFromDictionary:(id)arg1;
@property(copy, nonatomic) NSDate *modificationDate; // @synthesize modificationDate=_modificationDate;
@property(copy, nonatomic) NSData *data; // @synthesize data=_data;
@property(copy, nonatomic) NSString *service; // @synthesize service=_service;
@property(copy, nonatomic) NSString *account; // @synthesize account=_account;
- (void).cxx_destruct;

@end

@interface FIRInstanceIDAuthKeychain : NSObject
{
    NSString *_generic;
    NSString *_identifier;
}

+ (id)keychainQueryForService:(id)arg1 account:(id)arg2 accessGroup:(id)arg3 generic:(id)arg4;
@property(copy, nonatomic) NSString *identifier; // @synthesize identifier=_identifier;
@property(retain, nonatomic) NSString *generic; // @synthesize generic=_generic;
- (void).cxx_destruct;
- (_Bool)removeAllItemsWithError:(id *)arg1;
- (_Bool)setData:(id)arg1 forService:(id)arg2 accessibility:(void *)arg3 account:(id)arg4 accessGroup:(id)arg5 error:(id *)arg6;
- (_Bool)removeItemsMatchingService:(id)arg1 account:(id)arg2 accessGroup:(id)arg3 error:(id *)arg4;
- (id)itemForService:(id)arg1 account:(id)arg2 accessGroup:(id)arg3 error:(id *)arg4;
- (id)itemsMatchingService:(id)arg1 account:(id)arg2 accessGroup:(id)arg3 error:(id *)arg4;
@property(readonly, nonatomic) NSString *defaultAccessGroup;
- (id)keychainQueryForService:(id)arg1 account:(id)arg2 accessGroup:(id)arg3;
- (id)initWithIdentifier:(id)arg1;

@end

@interface FIRInstanceIDAuthService : NSObject
{
    _Bool _isCheckinInProgress;
    int _checkinRetryCount;
    FIRInstanceIDStore *_store;
    FIRInstanceIDCheckinService *_checkinService;
    FIRInstanceIDCheckinPreferences *_checkinPreferences;
    NSMutableArray *_checkinHandlers;
    NSTimer *_scheduledCheckinTimer;
}

@property int checkinRetryCount; // @synthesize checkinRetryCount=_checkinRetryCount;
@property(retain) NSTimer *scheduledCheckinTimer; // @synthesize scheduledCheckinTimer=_scheduledCheckinTimer;
@property _Bool isCheckinInProgress; // @synthesize isCheckinInProgress=_isCheckinInProgress;
@property(readonly, nonatomic) NSMutableArray *checkinHandlers; // @synthesize checkinHandlers=_checkinHandlers;
@property(retain, nonatomic) FIRInstanceIDCheckinPreferences *checkinPreferences; // @synthesize checkinPreferences=_checkinPreferences;
@property(retain, nonatomic) FIRInstanceIDCheckinService *checkinService; // @synthesize checkinService=_checkinService;
@property(retain, nonatomic) FIRInstanceIDStore *store; // @synthesize store=_store;
- (void).cxx_destruct;
- (_Bool)cachedCheckinMatchesCheckin:(id)arg1;
- (void)notifyCheckinHandlersWithCheckin:(id)arg1 error:(id)arg2;
- (void)resetCheckin:(id *)arg1;
- (void)stopCheckinRequest;
- (void)fetchCheckinInfoWithHandler:(CDUnknownBlockType)arg1;
- (_Bool)hasValidCheckinInfo;
- (long long)calculateNextCheckinRetryIntervalInSeconds;
- (void)performScheduledCheckin;
- (void)onScheduledCheckinTimerFired:(id)arg1;
- (void)clearScheduledCheckinTimer;
- (void)startCheckinTimerWithDuration:(double)arg1;
- (void)scheduleCheckin:(_Bool)arg1;
- (id)initWithStore:(id)arg1;
- (void)dealloc;
- (id)initWithCheckinService:(id)arg1 store:(id)arg2;

@end

@interface FIRInstanceIDBackupExcludedPlist : NSObject
{
    _Bool _fileInApplicationSupport;
    NSDictionary *_cachedPlistContents;
    NSString *_fileName;
    NSString *_applicationSupportSubDirectory;
}

@property(nonatomic) _Bool fileInApplicationSupport; // @synthesize fileInApplicationSupport=_fileInApplicationSupport;
@property(copy, nonatomic) NSString *applicationSupportSubDirectory; // @synthesize applicationSupportSubDirectory=_applicationSupportSubDirectory;
@property(copy, nonatomic) NSString *fileName; // @synthesize fileName=_fileName;
@property(retain, nonatomic) NSDictionary *cachedPlistContents; // @synthesize cachedPlistContents=_cachedPlistContents;
- (void).cxx_destruct;
- (_Bool)doesFileExistInDirectory:(unsigned long long)arg1;
- (id)pathWithName:(id)arg1 inDirectory:(unsigned long long)arg2;
- (id)plistPathInDirectory:(unsigned long long)arg1;
- (unsigned long long)plistDirectory;
- (_Bool)doesFileExist;
- (_Bool)moveToApplicationSupportSubDirectory:(id)arg1;
- (void)moveToApplicationSupportSubDirectory;
- (id)contentAsDictionary;
- (_Bool)deleteFile:(id *)arg1;
- (_Bool)writeDictionary:(id)arg1 error:(id *)arg2;
- (id)initWithFileName:(id)arg1 applicationSupportSubDirectory:(id)arg2;

@end

@interface FIRInstanceIDCheckinPreferences : NSObject
{
    _Bool _hasPreCachedAuthCredentials;
    NSString *_deviceID;
    NSString *_secretToken;
    NSString *_deviceDataVersion;
    NSString *_digest;
    NSString *_versionInfo;
    NSMutableDictionary *_gServicesData;
    long long _lastCheckinTimestampMillis;
}

+ (id)checkinKeychainContent:(id)arg1 forIndex:(int)arg2;
+ (id)checkinSecretFromKeychainContent:(id)arg1;
+ (id)checkinDeviceIDFromKeychainContent:(id)arg1;
+ (id)preferencesFromKeychainContents:(id)arg1;
@property(nonatomic) _Bool hasPreCachedAuthCredentials; // @synthesize hasPreCachedAuthCredentials=_hasPreCachedAuthCredentials;
@property(nonatomic) long long lastCheckinTimestampMillis; // @synthesize lastCheckinTimestampMillis=_lastCheckinTimestampMillis;
@property(retain, nonatomic) NSMutableDictionary *gServicesData; // @synthesize gServicesData=_gServicesData;
@property(copy, nonatomic) NSString *versionInfo; // @synthesize versionInfo=_versionInfo;
@property(copy, nonatomic) NSString *digest; // @synthesize digest=_digest;
@property(copy, nonatomic) NSString *deviceDataVersion; // @synthesize deviceDataVersion=_deviceDataVersion;
@property(copy, nonatomic) NSString *secretToken; // @synthesize secretToken=_secretToken;
@property(copy, nonatomic) NSString *deviceID; // @synthesize deviceID=_deviceID;
- (void).cxx_destruct;
- (_Bool)hasValidCheckinInfo;
- (_Bool)hasCheckinInfo;
- (id)checkinPlistContents;
- (id)checkinKeychainContent;
- (void)updateWithCheckinPlistContents:(id)arg1;
- (void)reset;
- (id)initWithDeviceID:(id)arg1 secretToken:(id)arg2;

@end

@interface FIRInstanceIDCheckinService : NSObject
{
    NSURLSession *_session;
}

+ (void)setCheckinTestBlock:(CDUnknownBlockType)arg1;
@property(retain, nonatomic) NSURLSession *session; // @synthesize session=_session;
- (void).cxx_destruct;
- (id)checkinParametersWithExistingCheckin:(id)arg1;
- (void)stopFetching;
- (void)checkinWithExistingCheckin:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)dealloc;
- (id)init;

@end

@interface FIRInstanceIDCheckinStore : NSObject
{
    FIRInstanceIDBackupExcludedPlist *_plist;
    FIRInstanceIDAuthKeychain *_keychain;
}

@property(retain, nonatomic) FIRInstanceIDAuthKeychain *keychain; // @synthesize keychain=_keychain;
@property(retain, nonatomic) FIRInstanceIDBackupExcludedPlist *plist; // @synthesize plist=_plist;
- (void).cxx_destruct;
- (_Bool)migrateCheckinItemIfNeeded;
- (id)cachedCheckinPreferences;
- (_Bool)removeCheckinPreferencesWithError:(id *)arg1;
- (_Bool)saveCheckinPreferences:(id)arg1 error:(id *)arg2;
@property(readonly, nonatomic) NSString *bundleIdentifierForKeychainAccount;
- (_Bool)hasCheckinPlist;
- (id)initWithCheckinPlist:(id)arg1 keychain:(id)arg2;
- (id)initWithCheckinPlistFileName:(id)arg1 applicationSupportSubDirectory:(id)arg2;

@end

@interface FIRInstanceIDKeyPair : NSObject
{
    struct __SecKey *_privateKey;
    struct __SecKey *_publicKey;
    NSData *_publicKeyData;
    NSData *_privateKeyData;
}

+ (id)appIdentityWithKeyPair:(id)arg1;
+ (_Bool)deleteKeyPairWithPrivateTag:(id)arg1 publicTag:(id)arg2 error:(id *)arg3;
+ (_Bool)updateKeyRef:(struct __SecKey *)arg1 fromTag:(id)arg2 toTag:(id)arg3;
+ (struct __SecKey *)cachedKeyRefWithTag:(id)arg1;
+ (id)keyDataWithTag:(id)arg1;
+ (id)queryDictWithTag:(id)arg1 addReturnAttr:(_Bool)arg2 withTypeData:(_Bool)arg3;
+ (id)keyPairForPrivateKeyTag:(id)arg1 publicKeyTag:(id)arg2 error:(id *)arg3;
+ (id)generateRSA2048KeyPairWithPrivateTag:(id)arg1 publicTag:(id)arg2 error:(id *)arg3;
@property(retain, nonatomic) NSData *privateKeyData; // @synthesize privateKeyData=_privateKeyData;
@property(retain, nonatomic) NSData *publicKeyData; // @synthesize publicKeyData=_publicKeyData;
- (void).cxx_destruct;
- (struct __SecKey *)privateKey;
- (struct __SecKey *)publicKey;
- (_Bool)isValid;
- (void)dealloc;
- (id)initWithPrivateKey:(struct __SecKey *)arg1 publicKey:(struct __SecKey *)arg2 publicKeyData:(id)arg3 privateKeyData:(id)arg4;
- (id)init;

@end

@interface FIRInstanceIDKeyPairStore : NSObject
{
    int _keychainEntitlementsErrorCount;
    NSObject<FIRInstanceIDKeyPairStoreDelegate> *_delegate;
    FIRInstanceIDBackupExcludedPlist *_plist;
    FIRInstanceIDKeyPair *_keyPair;
}

+ (id)keyStoreFileName;
+ (id)creationTimeKeyWithSubtype:(id)arg1;
+ (id)privateTagWithSubtype:(id)arg1;
+ (id)publicTagWithSubtype:(id)arg1;
+ (id)legacyPrivateTagWithSubtype:(id)arg1;
+ (id)legacyPublicTagWithSubtype:(id)arg1;
@property(nonatomic) int keychainEntitlementsErrorCount; // @synthesize keychainEntitlementsErrorCount=_keychainEntitlementsErrorCount;
@property(retain, nonatomic) FIRInstanceIDKeyPair *keyPair; // @synthesize keyPair=_keyPair;
@property(retain, nonatomic) FIRInstanceIDBackupExcludedPlist *plist; // @synthesize plist=_plist;
@property(nonatomic) __weak NSObject<FIRInstanceIDKeyPairStoreDelegate> *delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (_Bool)removeKeyPairCreationTimePlistWithError:(id *)arg1;
- (_Bool)deleteSavedKeyPairWithSubtype:(id)arg1 error:(id *)arg2;
- (_Bool)migrateKeyPairCacheIfNeeded;
- (id)cachedKeyPairWithSubtype:(id)arg1 error:(id *)arg2;
- (id)validCachedKeyPairWithSubtype:(id)arg1 error:(id *)arg2;
- (id)generateAndSaveKeyWithSubtype:(id)arg1 creationTime:(long long)arg2 error:(id *)arg3;
- (id)loadKeyPairWithError:(id *)arg1;
- (id)appIdentityWithError:(id *)arg1;
- (_Bool)hasCachedKeyPairs;
- (void)invalidateKeyPairsIfNeeded;
- (id)init;

@end

@interface FIRInstanceIDLogger : NSObject
{
}

+ (id)formatMessageCode:(long long)arg1;
- (void)logFuncError:(const char *)arg1 messageCode:(long long)arg2 msg:(id)arg3;
- (void)logFuncWarning:(const char *)arg1 messageCode:(long long)arg2 msg:(id)arg3;
- (void)logFuncNotice:(const char *)arg1 messageCode:(long long)arg2 msg:(id)arg3;
- (void)logFuncInfo:(const char *)arg1 messageCode:(long long)arg2 msg:(id)arg3;
- (void)logFuncDebug:(const char *)arg1 messageCode:(long long)arg2 msg:(id)arg3;

@end

@interface FIRInstanceIDStore : NSObject
{
    NSObject<FIRInstanceIDStoreDelegate> *_delegate;
    FIRInstanceIDCheckinStore *_checkinStore;
    FIRInstanceIDTokenStore *_tokenStore;
}

+ (_Bool)removeApplicationSupportSubDirectory:(id)arg1 error:(id *)arg2;
+ (_Bool)createApplicationSupportSubDirectory:(id)arg1;
+ (id)pathForApplicationSupportSubDirectory:(id)arg1;
+ (_Bool)hasApplicationSupportSubDirectory:(id)arg1;
@property(retain, nonatomic) FIRInstanceIDTokenStore *tokenStore; // @synthesize tokenStore=_tokenStore;
@property(retain, nonatomic) FIRInstanceIDCheckinStore *checkinStore; // @synthesize checkinStore=_checkinStore;
@property(readonly, nonatomic) __weak NSObject<FIRInstanceIDStoreDelegate> *delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (_Bool)removeCheckinPreferences:(id *)arg1;
- (id)cachedCheckinPreferences;
- (_Bool)saveCheckinPreferences:(id)arg1 error:(id *)arg2;
- (_Bool)removeAllCachedTokensWithError:(id *)arg1;
- (void)removeCachedTokenWithAuthorizedEntity:(id)arg1 scope:(id)arg2;
- (_Bool)saveTokenInfo:(id)arg1;
- (id)cachedTokenInfos;
- (id)tokenInfoWithAuthorizedEntity:(id)arg1 scope:(id)arg2;
- (_Bool)hasSavedLibraryVersion;
- (id)currentSavedLibraryVersion;
- (void)saveLibraryVersion;
- (void)resetCredentialsIfNeeded;
- (id)initWithCheckinStore:(id)arg1 tokenStore:(id)arg2 delegate:(id)arg3;
- (id)initWithDelegate:(id)arg1;

@end

@interface FIRInstanceIDStringEncoding : NSObject
{
    NSData *charMapData_;
    char *charMap_;
    int reverseCharMap_[128];
    int shift_;
    int mask_;
    _Bool doPad_;
    BOOL paddingChar_;
    int padLen_;
}

+ (id)stringEncodingWithString:(id)arg1;
+ (id)rfc4648Base64WebsafeStringEncoding;
- (void).cxx_destruct;
- (id)decode:(id)arg1;
- (id)encode:(id)arg1;
- (void)setPaddingChar:(BOOL)arg1;
- (void)setDoPad:(_Bool)arg1;
- (_Bool)doPad;
- (id)description;
- (id)initWithString:(id)arg1;

@end

@interface FIRInstanceIDTokenDeleteOperation : FIRInstanceIDTokenOperation
{
}

- (void)handleResponseWithData:(id)arg1 response:(id)arg2 error:(id)arg3;
- (void)performTokenOperation;
- (id)initWithScope:(id)arg1 checkinPreferences:(id)arg2 keyPair:(id)arg3 action:(long long)arg4;

@end

@interface FIRInstanceIDTokenFetchOperation : FIRInstanceIDTokenOperation
{
}

- (id)parseFetchTokenResponse:(id)arg1;
- (void)handleResponseWithData:(id)arg1 response:(id)arg2 error:(id)arg3;
- (void)performTokenOperation;
- (id)initWithAuthorizedEntity:(id)arg1 scope:(id)arg2 options:(id)arg3 checkinPreferences:(id)arg4 keyPair:(id)arg5;

@end

@interface FIRInstanceIDTokenInfo : NSObject <NSCoding>
{
    NSString *_authorizedEntity;
    NSString *_scope;
    NSString *_token;
    NSString *_appVersion;
    NSString *_firebaseAppID;
    FIRInstanceIDAPNSInfo *_APNSInfo;
    NSDate *_cacheTime;
}

@property(copy, nonatomic) NSDate *cacheTime; // @synthesize cacheTime=_cacheTime;
@property(retain, nonatomic) FIRInstanceIDAPNSInfo *APNSInfo; // @synthesize APNSInfo=_APNSInfo;
@property(readonly, copy, nonatomic) NSString *firebaseAppID; // @synthesize firebaseAppID=_firebaseAppID;
@property(readonly, copy, nonatomic) NSString *appVersion; // @synthesize appVersion=_appVersion;
@property(readonly, copy, nonatomic) NSString *token; // @synthesize token=_token;
@property(readonly, copy, nonatomic) NSString *scope; // @synthesize scope=_scope;
@property(readonly, copy, nonatomic) NSString *authorizedEntity; // @synthesize authorizedEntity=_authorizedEntity;
- (void).cxx_destruct;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (_Bool)isFresh;
- (id)initWithAuthorizedEntity:(id)arg1 scope:(id)arg2 token:(id)arg3 appVersion:(id)arg4 firebaseAppID:(id)arg5;

@end

@interface FIRInstanceIDTokenManager : NSObject <FIRInstanceIDStoreDelegate>
{
    FIRInstanceIDAuthService *_authService;
    FIRInstanceIDStore *_instanceIDStore;
    NSOperationQueue *_tokenOperations;
    FIRInstanceIDAPNSInfo *_currentAPNSInfo;
}

@property(retain, nonatomic) FIRInstanceIDAPNSInfo *currentAPNSInfo; // @synthesize currentAPNSInfo=_currentAPNSInfo;
@property(readonly, nonatomic) NSOperationQueue *tokenOperations; // @synthesize tokenOperations=_tokenOperations;
@property(retain, nonatomic) FIRInstanceIDStore *instanceIDStore; // @synthesize instanceIDStore=_instanceIDStore;
@property(retain, nonatomic) FIRInstanceIDAuthService *authService; // @synthesize authService=_authService;
- (void).cxx_destruct;
- (id)updateTokensToAPNSDeviceToken:(id)arg1 isSandbox:(_Bool)arg2;
- (_Bool)checkForTokenRefreshPolicy;
- (id)currentAppVersion;
- (id)createDeleteOperationForScope:(id)arg1 checkinPreferences:(id)arg2 keyPair:(id)arg3 action:(long long)arg4;
- (id)createFetchOperationWithAuthorizedEntity:(id)arg1 scope:(id)arg2 options:(id)arg3 keyPair:(id)arg4;
- (void)store:(id)arg1 didDeleteFCMScopedTokensForCheckin:(id)arg2;
- (void)stopAllTokenOperations;
- (_Bool)deleteAllTokensLocallyWithError:(id *)arg1;
- (void)deleteAllTokensWithKeyPair:(id)arg1 handler:(CDUnknownBlockType)arg2;
- (void)deleteTokenWithAuthorizedEntity:(id)arg1 scope:(id)arg2 keyPair:(id)arg3 handler:(CDUnknownBlockType)arg4;
- (id)cachedTokenInfoWithAuthorizedEntity:(id)arg1 scope:(id)arg2;
- (void)fetchNewTokenWithAuthorizedEntity:(id)arg1 scope:(id)arg2 keyPair:(id)arg3 options:(id)arg4 handler:(CDUnknownBlockType)arg5;
- (void)configureTokenOperations;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FIRInstanceIDTokenOperation : NSOperation
{
    _Bool _isFinished;
    _Bool _isExecuting;
    long long _action;
    NSString *_authorizedEntity;
    NSString *_scope;
    NSDictionary *_options;
    FIRInstanceIDCheckinPreferences *_checkinPreferences;
    FIRInstanceIDKeyPair *_keyPair;
    long long _result;
    NSURLSessionDataTask *_dataTask;
    NSMutableArray *_completionHandlers;
    CDUnknownBlockType _testBlock;
}

+ (id)HTTPAuthHeaderFromCheckin:(id)arg1;
+ (id)standardQueryItemsWithDeviceID:(id)arg1 scope:(id)arg2;
+ (id)requestWithAuthHeader:(id)arg1;
+ (id)sharedURLSession;
@property(copy, nonatomic) CDUnknownBlockType testBlock; // @synthesize testBlock=_testBlock;
@property(readonly) NSMutableArray *completionHandlers; // @synthesize completionHandlers=_completionHandlers;
@property(retain) NSURLSessionDataTask *dataTask; // @synthesize dataTask=_dataTask;
@property(readonly, nonatomic) long long result; // @synthesize result=_result;
@property(retain, nonatomic) FIRInstanceIDKeyPair *keyPair; // @synthesize keyPair=_keyPair;
@property(retain, nonatomic) FIRInstanceIDCheckinPreferences *checkinPreferences; // @synthesize checkinPreferences=_checkinPreferences;
@property(readonly, nonatomic) NSDictionary *options; // @synthesize options=_options;
@property(readonly, nonatomic) NSString *scope; // @synthesize scope=_scope;
@property(readonly, nonatomic) NSString *authorizedEntity; // @synthesize authorizedEntity=_authorizedEntity;
@property(readonly, nonatomic) long long action; // @synthesize action=_action;
- (void).cxx_destruct;
- (id)queryItemsWithKeyPair:(id)arg1;
- (void)performTokenOperation;
- (void)cancel;
- (void)finishWithResult:(long long)arg1 token:(id)arg2 error:(id)arg3;
- (void)start;
- (void)setFinished:(_Bool)arg1;
- (_Bool)isFinished;
- (void)setExecuting:(_Bool)arg1;
- (_Bool)isExecuting;
- (_Bool)isAsynchronous;
- (void)addCompletionHandler:(CDUnknownBlockType)arg1;
- (void)dealloc;
- (id)initWithAction:(long long)arg1 forAuthorizedEntity:(id)arg2 scope:(id)arg3 options:(id)arg4 checkinPreferences:(id)arg5 keyPair:(id)arg6;

@end

@interface FIRInstanceIDTokenStore : NSObject
{
    FIRInstanceIDAuthKeychain *_keychain;
}

+ (id)tokenInfoFromKeychainItem:(id)arg1;
+ (id)serviceKeyForAuthorizedEntity:(id)arg1 scope:(id)arg2;
+ (id)defaultStore;
@property(retain, nonatomic) FIRInstanceIDAuthKeychain *keychain; // @synthesize keychain=_keychain;
- (void).cxx_destruct;
- (_Bool)removeAllTokensWithError:(id *)arg1;
- (_Bool)removeTokenWithAuthorizedEntity:(id)arg1 scope:(id)arg2 error:(id *)arg3;
- (_Bool)saveTokenInfo:(id)arg1;
- (id)cachedTokenInfos;
- (id)tokenInfoWithAuthorizedEntity:(id)arg1 scope:(id)arg2;
- (id)initWithKeychain:(id)arg1;
- (id)init;

@end

@interface FIRInstanceIDURLQueryItem : NSObject
{
    NSString *_name;
    NSString *_value;
}

+ (id)queryItemWithName:(id)arg1 value:(id)arg2;
@property(readonly, nonatomic) NSString *value; // @synthesize value=_value;
@property(readonly, nonatomic) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;
- (id)initWithName:(id)arg1 value:(id)arg2;

@end

@interface FIRMessagingLog : NSObject
{
}

+ (void)logMessage:(id)arg1;
+ (void)logAnalyticsEventWithOrigin:(id)arg1 name:(id)arg2 parameters:(id)arg3;
+ (void)logEvent:(id)arg1 withNotification:(id)arg2;
+ (void)logForegroundNotification:(id)arg1;
+ (void)logOpenNotification:(id)arg1;
+ (_Bool)canLogNotification:(id)arg1;

@end

@interface FIRMessagingMessageInfo : NSObject
{
    long long _status;
}

@property(nonatomic) long long status; // @synthesize status=_status;
- (id)initWithStatus:(long long)arg1;
- (id)init;

@end

@interface FIRMessagingRemoteMessage : NSObject
{
    NSDictionary *_appData;
}

@property(retain, nonatomic) NSDictionary *appData; // @synthesize appData=_appData;
- (void).cxx_destruct;
- (id)initWithMessage:(id)arg1;
- (id)init;

@end

@interface FIRMessaging : NSObject <FIRMessagingClientDelegate, FIRMessagingReceiverDelegate, FIRReachabilityDelegate>
{
    _Bool _shouldEstablishDirectChannel;
    _Bool _isClientSetup;
    id <FIRMessagingDelegate> _delegate;
    NSString *_fcmSenderID;
    NSData *_apnsTokenData;
    NSString *_defaultFcmToken;
    FIRMessagingInstanceIDProxy *_instanceIDProxy;
    FIRMessagingClient *_client;
    FIRReachabilityChecker *_reachability;
    FIRMessagingDataMessageManager *_dataMessageManager;
    FIRMessagingPubSub *_pubsub;
    FIRMessagingRmqManager *_rmq2Manager;
    FIRMessagingReceiver *_receiver;
    FIRMessagingSyncMessageManager *_syncMessageManager;
    NSMutableSet *_loggedMessageIDs;
}

+ (id)firebaselocalesMap;
+ (id)firebaseLocales;
+ (id)currentLocale;
+ (_Bool)createApplicationSupportSubDirectory:(id)arg1;
+ (id)pathForApplicationSupportSubDirectory:(id)arg1;
+ (_Bool)hasApplicationSupportSubDirectory:(id)arg1;
+ (id)FIRMessagingSDKCurrentLocale;
+ (id)FIRMessagingSDKVersion;
+ (id)createFIRMessagingMessageWithMessage:(id)arg1 to:(id)arg2 withID:(id)arg3 timeToLive:(long long)arg4 delay:(int)arg5;
+ (id)normalizeTopic:(id)arg1;
+ (_Bool)isAPNSSyncMessage:(id)arg1;
+ (id)messaging;
@property(retain, nonatomic) NSMutableSet *loggedMessageIDs; // @synthesize loggedMessageIDs=_loggedMessageIDs;
@property(retain, nonatomic) FIRMessagingSyncMessageManager *syncMessageManager; // @synthesize syncMessageManager=_syncMessageManager;
@property(retain, nonatomic) FIRMessagingReceiver *receiver; // @synthesize receiver=_receiver;
@property(retain, nonatomic) FIRMessagingRmqManager *rmq2Manager; // @synthesize rmq2Manager=_rmq2Manager;
@property(retain, nonatomic) FIRMessagingPubSub *pubsub; // @synthesize pubsub=_pubsub;
@property(retain, nonatomic) FIRMessagingDataMessageManager *dataMessageManager; // @synthesize dataMessageManager=_dataMessageManager;
@property(retain, nonatomic) FIRReachabilityChecker *reachability; // @synthesize reachability=_reachability;
@property(retain, nonatomic) FIRMessagingClient *client; // @synthesize client=_client;
@property(nonatomic) _Bool isClientSetup; // @synthesize isClientSetup=_isClientSetup;
@property(retain, nonatomic) FIRMessagingInstanceIDProxy *instanceIDProxy; // @synthesize instanceIDProxy=_instanceIDProxy;
@property(retain, nonatomic) NSString *defaultFcmToken; // @synthesize defaultFcmToken=_defaultFcmToken;
@property(retain, nonatomic) NSData *apnsTokenData; // @synthesize apnsTokenData=_apnsTokenData;
@property(copy, nonatomic) NSString *fcmSenderID; // @synthesize fcmSenderID=_fcmSenderID;
@property(nonatomic) _Bool shouldEstablishDirectChannel; // @synthesize shouldEstablishDirectChannel=_shouldEstablishDirectChannel;
@property(nonatomic) __weak id <FIRMessagingDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)didReceiveAPNSToken:(id)arg1;
- (void)defaultInstanceIDTokenWasRefreshed:(id)arg1;
- (void)didReceiveDefaultInstanceIDToken:(id)arg1;
- (BOOL)networkType;
- (_Bool)isNetworkAvailable;
- (void)onNetworkStatusChanged;
- (void)reachability:(id)arg1 statusChanged:(int)arg2;
- (void)receiver:(id)arg1 receivedRemoteMessage:(id)arg2;
- (void)setAPNSToken:(id)arg1 error:(id)arg2;
- (void)sendMessage:(id)arg1 to:(id)arg2 withMessageID:(id)arg3 timeToLive:(long long)arg4;
- (void)unsubscribeFromTopic:(id)arg1;
- (void)subscribeToTopic:(id)arg1;
- (void)disconnect;
- (void)connectWithCompletion:(CDUnknownBlockType)arg1;
- (void)notifyOfDirectChannelConnectionChange;
- (void)updateAutomaticClientConnection;
- (_Bool)shouldBeConnectedAutomatically;
@property(readonly, nonatomic) _Bool isDirectChannelEstablished;
- (void)applicationStateChanged;
- (void)notifyDelegateOfFCMTokenAvailability;
- (void)validateDelegateConformsToTokenAvailabilityMethods;
- (void)deleteFCMTokenForSenderID:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)retrieveFCMTokenForSenderID:(id)arg1 completion:(CDUnknownBlockType)arg2;
@property(readonly, nonatomic) NSString *FCMToken;
- (void)setAPNSToken:(id)arg1 type:(long long)arg2;
@property(copy, nonatomic) NSData *APNSToken;
- (id)linkURLFromMessage:(id)arg1;
- (void)handleIncomingLinkIfNeededFromMessage:(id)arg1;
- (_Bool)handleContextManagerMessage:(id)arg1;
- (id)appDidReceiveMessage:(id)arg1;
- (void)teardown;
- (void)setupSyncMessageManager;
- (void)setupTopics;
- (void)setupRmqManager;
- (void)setupDataMessageManager;
- (void)setupClient;
- (void)setupReceiver;
- (void)setupNotificationListeners;
- (void)setupApplicationSupportSubDirectory;
- (void)start;
@property(nonatomic) __weak id <FIRMessagingDelegate> remoteMessageDelegate;
- (void)dealloc;
- (id)initPrivately;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FIRMessagingCheckinService : NSObject
{
    id _checkinPreferences;
}

@property(retain, nonatomic) id checkinPreferences; // @synthesize checkinPreferences=_checkinPreferences;
- (void).cxx_destruct;
@property(readonly, nonatomic) _Bool hasValidCheckinInfo;
- (id)digest;
@property(readonly, nonatomic) NSString *versionInfo;
@property(readonly, nonatomic) NSString *secretToken;
@property(readonly, nonatomic) NSString *deviceAuthID;
- (_Bool)tryToLoadPrefetchedCheckinPreferences;

@end

@interface FIRMessagingClient : NSObject <FIRMessagingConnectionDelegate>
{
    _Bool _stayConnected;
    _Bool _didScheduleReconnect;
    FIRMessagingConnection *_connection;
    FIRMessagingDataMessageManager *_dataMessageManager;
    id <FIRMessagingClientDelegate> _clientDelegate;
    FIRMessagingRegistrar *_registrar;
    NSString *_senderId;
    FIRMessagingRmqManager *_rmq2Manager;
    FIRReachabilityChecker *_reachability;
    long long _lastConnectedTimestamp;
    long long _lastDisconnectedTimestamp;
    unsigned long long _connectRetryCount;
    double _connectionTimeoutInterval;
    CDUnknownBlockType _connectHandler;
}

@property(copy, nonatomic) CDUnknownBlockType connectHandler; // @synthesize connectHandler=_connectHandler;
@property(nonatomic) _Bool didScheduleReconnect; // @synthesize didScheduleReconnect=_didScheduleReconnect;
@property(nonatomic) double connectionTimeoutInterval; // @synthesize connectionTimeoutInterval=_connectionTimeoutInterval;
@property(nonatomic) _Bool stayConnected; // @synthesize stayConnected=_stayConnected;
@property(nonatomic) unsigned long long connectRetryCount; // @synthesize connectRetryCount=_connectRetryCount;
@property(nonatomic) long long lastDisconnectedTimestamp; // @synthesize lastDisconnectedTimestamp=_lastDisconnectedTimestamp;
@property(nonatomic) long long lastConnectedTimestamp; // @synthesize lastConnectedTimestamp=_lastConnectedTimestamp;
@property(nonatomic) __weak FIRReachabilityChecker *reachability; // @synthesize reachability=_reachability;
@property(nonatomic) __weak FIRMessagingRmqManager *rmq2Manager; // @synthesize rmq2Manager=_rmq2Manager;
@property(retain, nonatomic) NSString *senderId; // @synthesize senderId=_senderId;
@property(retain, nonatomic) FIRMessagingRegistrar *registrar; // @synthesize registrar=_registrar;
@property(nonatomic) __weak id <FIRMessagingClientDelegate> clientDelegate; // @synthesize clientDelegate=_clientDelegate;
@property(nonatomic) __weak FIRMessagingDataMessageManager *dataMessageManager; // @synthesize dataMessageManager=_dataMessageManager;
@property(retain, nonatomic) FIRMessagingConnection *connection; // @synthesize connection=_connection;
- (void).cxx_destruct;
- (unsigned long long)nextRetryInterval;
- (void)scheduleConnectRetry;
- (void)didConnectTimeout;
- (void)tryToConnect;
- (void)setupConnection;
- (void)setupConnectionAndConnect;
- (int)connectionDidReceiveAckForRmqIds:(id)arg1;
- (void)connectionDidRecieveMessage:(id)arg1;
- (void)didLoginWithConnection:(id)arg1;
- (void)connection:(id)arg1 didCloseForReason:(unsigned long long)arg2;
- (void)sendOnConnectOrDrop:(id)arg1;
- (void)sendMessage:(id)arg1;
- (void)checkinFetched:(id)arg1;
- (void)disconnectWithTryToConnectLater:(_Bool)arg1;
- (void)disconnect;
- (void)connect;
- (void)connectWithHandler:(CDUnknownBlockType)arg1;
- (void)retryConnectionImmediately:(_Bool)arg1;
@property(readonly, nonatomic) _Bool shouldStayConnected;
@property(readonly, nonatomic) _Bool isConnectionActive;
@property(readonly, nonatomic) _Bool isConnected;
- (void)updateSubscriptionWithToken:(id)arg1 topic:(id)arg2 options:(id)arg3 shouldDelete:(_Bool)arg4 handler:(CDUnknownBlockType)arg5;
- (void)cancelAllRequests;
- (void)teardown;
- (id)initWithDelegate:(id)arg1 reachability:(id)arg2 rmq2Manager:(id)arg3;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FIRMessagingCodedInputStream : NSObject
{
    NSData *_buffer;
    CDStruct_9d607ac6 _state;
}

@property(nonatomic) CDStruct_9d607ac6 state; // @synthesize state=_state;
@property(retain, nonatomic) NSData *buffer; // @synthesize buffer=_buffer;
- (void).cxx_destruct;
- (id)readDataWithLength:(unsigned int)arg1;
- (_Bool)readLength:(int *)arg1;
- (_Bool)readTag:(char *)arg1;
@property(readonly, nonatomic) unsigned long long offset;
- (id)initWithData:(id)arg1;

@end

@interface FIRMessagingD2SInfo : NSObject
{
    int _streamId;
    NSString *_d2sID;
}

@property(retain, nonatomic) NSString *d2sID; // @synthesize d2sID=_d2sID;
@property(nonatomic) int streamId; // @synthesize streamId=_streamId;
- (void).cxx_destruct;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)initWithStreamId:(int)arg1 d2sId:(id)arg2;

@end

@interface FIRMessagingConnection : NSObject <FIRMessagingSecureSocketDelegate>
{
    int _lastStreamIdAcked;
    int _inStreamId;
    int _outStreamId;
    long long _lastHeartbeatPingTimestamp;
    unsigned long long _state;
    NSString *_host;
    unsigned long long _port;
    id <FIRMessagingConnectionDelegate> _delegate;
    FIRMessagingRmqManager *_rmq2Manager;
    FIRMessagingDataMessageManager *_dataMessageManager;
    NSString *_authId;
    NSString *_token;
    FIRMessagingSecureSocket *_socket;
    long long _lastLoginServerTimestamp;
    NSMutableArray *_unackedS2dIds;
    NSMutableDictionary *_ackedS2dMap;
    NSMutableArray *_d2sInfos;
    NSMutableArray *_sendOnConnectMessages;
    NSRunLoop *_runLoop;
}

+ (id)createStreamAck;
+ (int)currentNetworkType;
+ (id)loginRequestWithToken:(id)arg1 authID:(id)arg2;
@property(retain, nonatomic) NSRunLoop *runLoop; // @synthesize runLoop=_runLoop;
@property(retain, nonatomic) NSMutableArray *sendOnConnectMessages; // @synthesize sendOnConnectMessages=_sendOnConnectMessages;
@property(retain, nonatomic) NSMutableArray *d2sInfos; // @synthesize d2sInfos=_d2sInfos;
@property(retain, nonatomic) NSMutableDictionary *ackedS2dMap; // @synthesize ackedS2dMap=_ackedS2dMap;
@property(retain, nonatomic) NSMutableArray *unackedS2dIds; // @synthesize unackedS2dIds=_unackedS2dIds;
@property(nonatomic) int outStreamId; // @synthesize outStreamId=_outStreamId;
@property(nonatomic) int inStreamId; // @synthesize inStreamId=_inStreamId;
@property(nonatomic) int lastStreamIdAcked; // @synthesize lastStreamIdAcked=_lastStreamIdAcked;
@property(nonatomic) long long lastLoginServerTimestamp; // @synthesize lastLoginServerTimestamp=_lastLoginServerTimestamp;
@property(retain, nonatomic) FIRMessagingSecureSocket *socket; // @synthesize socket=_socket;
@property(retain, nonatomic) NSString *token; // @synthesize token=_token;
@property(retain, nonatomic) NSString *authId; // @synthesize authId=_authId;
@property(nonatomic) __weak FIRMessagingDataMessageManager *dataMessageManager; // @synthesize dataMessageManager=_dataMessageManager;
@property(nonatomic) __weak FIRMessagingRmqManager *rmq2Manager; // @synthesize rmq2Manager=_rmq2Manager;
@property(nonatomic) __weak id <FIRMessagingConnectionDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) unsigned long long port; // @synthesize port=_port;
@property(copy, nonatomic) NSString *host; // @synthesize host=_host;
@property(nonatomic) unsigned long long state; // @synthesize state=_state;
@property(nonatomic) long long lastHeartbeatPingTimestamp; // @synthesize lastHeartbeatPingTimestamp=_lastHeartbeatPingTimestamp;
- (void).cxx_destruct;
- (double)connectionTimeoutInterval;
- (void)logMessage:(id)arg1 messageType:(int)arg2 isOut:(_Bool)arg3;
- (void)cancelConnectionTimeoutTask;
- (void)scheduleConnectionTimeoutTask;
- (void)connectionTimedOut;
- (void)disconnect;
- (void)resetUnconfirmedAcks;
- (void)confirmAckedS2dIdsWithStreamId:(int)arg1;
- (void)didReceiveAckForRmqIds:(id)arg1;
- (void)confirmAckedD2sIdsWithStreamId:(int)arg1;
- (void)willSendProto:(id)arg1;
- (void)willProcessProto:(id)arg1;
- (void)didReceiveClose:(id)arg1;
- (void)didReceiveSelectiveAck:(id)arg1;
- (void)didReceiveStreamAck:(id)arg1;
- (void)didReceiveUnhandledProto:(id)arg1;
- (void)didReceiveDataMessageStanza:(id)arg1;
- (void)didReceiveHeartbeatAck:(id)arg1;
- (void)didReceiveHeartbeatPing:(id)arg1;
- (void)didReceiveLoginResponse:(id)arg1;
- (void)handleIqStanza:(id)arg1;
- (void)sendClose;
- (void)sendStreamAck;
- (void)sendHeartbeatPing;
- (void)sendHeartbeatAck;
- (void)sendLoginRequest:(id)arg1 token:(id)arg2;
- (void)sendOnConnectOrDrop:(id)arg1;
- (void)sendProto:(id)arg1;
- (void)secureSocket:(id)arg1 didSendProtoWithTag:(BOOL)arg2 rmqId:(id)arg3;
- (void)secureSocket:(id)arg1 didReceiveData:(id)arg2 withTag:(BOOL)arg3;
- (void)didDisconnectWithSecureSocket:(id)arg1;
- (void)secureSocketDidConnect:(id)arg1;
- (void)teardown;
- (void)signOut;
- (void)connectToSocket:(id)arg1;
- (void)setupConnectionSocket;
- (void)signIn;
@property(readonly, copy) NSString *description;
- (id)initWithAuthID:(id)arg1 token:(id)arg2 host:(id)arg3 port:(unsigned long long)arg4 runLoop:(id)arg5 rmq2Manager:(id)arg6 fcmManager:(id)arg7;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FIRMessagingContextManagerService : NSObject
{
}

+ (id)parseDataFromMessage:(id)arg1;
+ (void)scheduleLocalNotificationForMessage:(id)arg1 atDate:(id)arg2;
+ (_Bool)handleContextManagerLocalTimeMessage:(id)arg1;
+ (_Bool)handleContextManagerMessage:(id)arg1;
+ (_Bool)isContextManagerMessage:(id)arg1;

@end

@interface FIRMessagingDataMessageManager : NSObject
{
    BOOL _upstreamForceReconnect;
    int _ttl;
    int _maxAppDataSize;
    FIRMessagingClient *_client;
    FIRMessagingRmqManager *_rmq2Manager;
    FIRMessagingSyncMessageManager *_syncMessageManager;
    id <FIRMessagingDataMessageManagerDelegate> _delegate;
    FIRMessagingDelayedMessageQueue *_delayedMessagesQueue;
    NSString *_deviceAuthID;
    NSString *_secretToken;
}

@property(nonatomic) BOOL upstreamForceReconnect; // @synthesize upstreamForceReconnect=_upstreamForceReconnect;
@property(nonatomic) int maxAppDataSize; // @synthesize maxAppDataSize=_maxAppDataSize;
@property(copy, nonatomic) NSString *secretToken; // @synthesize secretToken=_secretToken;
@property(copy, nonatomic) NSString *deviceAuthID; // @synthesize deviceAuthID=_deviceAuthID;
@property(nonatomic) int ttl; // @synthesize ttl=_ttl;
@property(retain, nonatomic) FIRMessagingDelayedMessageQueue *delayedMessagesQueue; // @synthesize delayedMessagesQueue=_delayedMessagesQueue;
@property(nonatomic) __weak id <FIRMessagingDataMessageManagerDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) __weak FIRMessagingSyncMessageManager *syncMessageManager; // @synthesize syncMessageManager=_syncMessageManager;
@property(nonatomic) __weak FIRMessagingRmqManager *rmq2Manager; // @synthesize rmq2Manager=_rmq2Manager;
@property(nonatomic) __weak FIRMessagingClient *client; // @synthesize client=_client;
- (void).cxx_destruct;
- (id)categoryForUpstreamMessages;
- (_Bool)tryToSendDataMessageStanza:(id)arg1;
- (_Bool)delayMessage:(id)arg1;
- (int)delayForMessage:(id)arg1;
- (_Bool)handleExpirationForDataMessage:(id)arg1;
- (void)resendMessagesWithConnection:(id)arg1;
- (void)willSendDataMessageFail:(id)arg1 withMessageId:(id)arg2 error:(unsigned long long)arg3;
- (void)willSendDataMessageSuccess:(id)arg1 withMessageId:(id)arg2;
- (int)addData:(id)arg1 toStanza:(id)arg2;
- (void)addParamWithKey:(id)arg1 value:(id)arg2 toStanza:(id)arg3;
- (void)didSendDataMessageStanza:(id)arg1;
- (void)sendDelayedMessages:(id)arg1;
- (void)sendDataMessageStanza:(id)arg1;
- (id)filterInternalFIRMessagingKeysFromMessage:(id)arg1;
- (void)didReceiveParsedMessage:(id)arg1;
- (id)parseDataMessage:(id)arg1;
- (void)handleMCSDataMessage:(id)arg1;
- (id)processPacket:(id)arg1;
- (void)refreshDelayedMessages;
- (void)setDeviceAuthID:(id)arg1 secretToken:(id)arg2;
- (id)initWithDelegate:(id)arg1 client:(id)arg2 rmq2Manager:(id)arg3 syncMessageManager:(id)arg4;

@end

@interface FIRMessagingDelayedMessageQueue : NSObject
{
    int _persistedMessageCount;
    id <FIRMessagingRmqScanner> _rmqScanner;
    CDUnknownBlockType _sendDelayedMessagesHandler;
    long long _scheduledTimeoutMilliseconds;
    long long _lastDBScanTimestampSeconds;
    NSMutableArray *_messages;
    NSTimer *_sendTimer;
}

@property(retain, nonatomic) NSTimer *sendTimer; // @synthesize sendTimer=_sendTimer;
@property(retain, nonatomic) NSMutableArray *messages; // @synthesize messages=_messages;
@property(nonatomic) long long lastDBScanTimestampSeconds; // @synthesize lastDBScanTimestampSeconds=_lastDBScanTimestampSeconds;
@property(nonatomic) long long scheduledTimeoutMilliseconds; // @synthesize scheduledTimeoutMilliseconds=_scheduledTimeoutMilliseconds;
@property(nonatomic) int persistedMessageCount; // @synthesize persistedMessageCount=_persistedMessageCount;
@property(readonly, copy, nonatomic) CDUnknownBlockType sendDelayedMessagesHandler; // @synthesize sendDelayedMessagesHandler=_sendDelayedMessagesHandler;
@property(readonly, nonatomic) __weak id <FIRMessagingRmqScanner> rmqScanner; // @synthesize rmqScanner=_rmqScanner;
- (void).cxx_destruct;
- (void)cancelTimeout;
- (void)scheduleTimeoutInMillis:(long long)arg1;
- (long long)calculateTimeoutInMillisWithDelayInSeconds:(int)arg1;
- (_Bool)isTimeoutScheduled;
- (long long)messageCount;
- (void)sendMessages;
- (id)removeDelayedMessages;
- (_Bool)queueMessage:(id)arg1;
- (id)initWithRmqScanner:(id)arg1 sendDelayedMessagesHandler:(CDUnknownBlockType)arg2;
- (id)init;

@end

@interface FIRMessagingInstanceIDProxy : NSObject
{
}

+ (id)instanceIDProxy;
- (void)deleteTokenWithAuthorizedEntity:(id)arg1 scope:(id)arg2 handler:(CDUnknownBlockType)arg3;
- (void)tokenWithAuthorizedEntity:(id)arg1 scope:(id)arg2 options:(id)arg3 handler:(CDUnknownBlockType)arg4;
- (id)token;
- (void)setAPNSToken:(id)arg1 type:(long long)arg2;

@end

@interface FIRMessagingLogger : NSObject
{
}

+ (id)formatMessageCode:(long long)arg1;
+ (id)standardLogger;
- (void)logFuncError:(const char *)arg1 messageCode:(long long)arg2 msg:(id)arg3;
- (void)logFuncWarning:(const char *)arg1 messageCode:(long long)arg2 msg:(id)arg3;
- (void)logFuncNotice:(const char *)arg1 messageCode:(long long)arg2 msg:(id)arg3;
- (void)logFuncInfo:(const char *)arg1 messageCode:(long long)arg2 msg:(id)arg3;
- (void)logFuncDebug:(const char *)arg1 messageCode:(long long)arg2 msg:(id)arg3;

@end

@interface FIRMessagingPacket : NSObject
{
    BOOL _tag;
    NSData *_data;
    NSString *_rmqId;
}

+ (id)packetWithTag:(BOOL)arg1 rmqId:(id)arg2 data:(id)arg3;
@property(nonatomic) NSString *rmqId; // @synthesize rmqId=_rmqId;
@property(nonatomic) BOOL tag; // @synthesize tag=_tag;
@property(retain, nonatomic) NSData *data; // @synthesize data=_data;
- (void).cxx_destruct;
- (id)description;
- (id)initWithTag:(BOOL)arg1 rmqId:(id)arg2 data:(id)arg3;
- (id)init;

@end

@interface FIRMessagingPacketQueue : NSObject
{
    NSMutableArray *_packetsContainer;
}

@property(retain, nonatomic) NSMutableArray *packetsContainer; // @synthesize packetsContainer=_packetsContainer;
- (void).cxx_destruct;
- (id)pop;
- (void)pushHead:(id)arg1;
- (void)push:(id)arg1;
@property(readonly, nonatomic) unsigned long long count;
@property(readonly, nonatomic) _Bool isEmpty;
- (id)init;

@end

@interface FIRMessagingTopicBatch : NSObject <NSCoding>
{
    long long _action;
    NSMutableSet *_topics;
    NSMutableDictionary *_topicHandlers;
}

@property(retain, nonatomic) NSMutableDictionary *topicHandlers; // @synthesize topicHandlers=_topicHandlers;
@property(readonly, copy, nonatomic) NSMutableSet *topics; // @synthesize topics=_topics;
@property(readonly, nonatomic) long long action; // @synthesize action=_action;
- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithAction:(long long)arg1;

@end

@interface FIRMessagingPendingTopicsList : NSObject <NSCoding>
{
    NSObject<FIRMessagingPendingTopicsListDelegate> *_delegate;
    NSDate *_archiveDate;
    NSMutableArray *_topicBatches;
    FIRMessagingTopicBatch *_currentBatch;
    NSMutableSet *_topicsInFlight;
}

+ (void)pruneTopicBatches:(id)arg1;
@property(retain, nonatomic) NSMutableSet *topicsInFlight; // @synthesize topicsInFlight=_topicsInFlight;
@property(retain, nonatomic) FIRMessagingTopicBatch *currentBatch; // @synthesize currentBatch=_currentBatch;
@property(retain, nonatomic) NSMutableArray *topicBatches; // @synthesize topicBatches=_topicBatches;
@property(retain, nonatomic) NSDate *archiveDate; // @synthesize archiveDate=_archiveDate;
@property(nonatomic) __weak NSObject<FIRMessagingPendingTopicsListDelegate> *delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)beginUpdateForCurrentBatchTopic:(id)arg1;
- (_Bool)subscriptionErrorIsRecoverable:(id)arg1;
- (void)resumeOperationsIfNeeded;
- (void)addOperationForTopic:(id)arg1 withAction:(long long)arg2 completion:(CDUnknownBlockType)arg3;
@property(readonly, nonatomic) unsigned long long numberOfBatches;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)init;

@end

@interface FIRMessagingPersistentSyncMessage : NSObject
{
    _Bool _apnsReceived;
    _Bool _mcsReceived;
    NSString *_rmqID;
    long long _expirationTime;
}

@property(nonatomic) long long expirationTime; // @synthesize expirationTime=_expirationTime;
@property(nonatomic) _Bool mcsReceived; // @synthesize mcsReceived=_mcsReceived;
@property(nonatomic) _Bool apnsReceived; // @synthesize apnsReceived=_apnsReceived;
@property(retain, nonatomic) NSString *rmqID; // @synthesize rmqID=_rmqID;
- (void).cxx_destruct;
- (id)debugDescription;
- (id)description;
- (id)initWithRMQID:(id)arg1 expirationTime:(long long)arg2;
- (id)init;

@end

@interface FIRMessagingPubSub : NSObject <FIRMessagingPendingTopicsListDelegate>
{
    FIRMessagingPubSubCache *_cache;
    FIRMessagingClient *_client;
    FIRMessagingPendingTopicsList *_pendingTopicUpdates;
}

+ (_Bool)isValidTopicWithPrefix:(id)arg1;
+ (id)topicRegex;
+ (_Bool)hasTopicsPrefix:(id)arg1;
+ (id)addPrefixToTopic:(id)arg1;
@property(retain, nonatomic) FIRMessagingPendingTopicsList *pendingTopicUpdates; // @synthesize pendingTopicUpdates=_pendingTopicUpdates;
@property(retain, nonatomic) FIRMessagingClient *client; // @synthesize client=_client;
@property(readonly, nonatomic) FIRMessagingPubSubCache *cache; // @synthesize cache=_cache;
- (void).cxx_destruct;
- (_Bool)verifyPubSubOptions:(id)arg1;
- (void)restorePendingTopicsList;
- (void)archivePendingTopicsList:(id)arg1;
- (_Bool)pendingTopicsListCanRequestTopicUpdates:(id)arg1;
- (void)pendingTopicsListDidUpdate:(id)arg1;
- (void)pendingTopicsList:(id)arg1 requestedUpdateForTopic:(id)arg2 action:(long long)arg3 completion:(CDUnknownBlockType)arg4;
- (void)scheduleSync:(_Bool)arg1;
- (void)unsubscribeFromTopic:(id)arg1;
- (void)subscribeToTopic:(id)arg1;
- (void)unsubscribeWithToken:(id)arg1 topic:(id)arg2 options:(id)arg3 handler:(CDUnknownBlockType)arg4;
- (void)subscribeWithToken:(id)arg1 topic:(id)arg2 options:(id)arg3 handler:(CDUnknownBlockType)arg4;
- (id)initWithClient:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FIRMessagingPubSubRegistrar : NSObject
{
    FIRMessagingCheckinService *_checkinService;
    NSOperationQueue *_topicOperations;
    NSError *_operationInProgressError;
}

@property(retain, nonatomic) NSError *operationInProgressError; // @synthesize operationInProgressError=_operationInProgressError;
@property(readonly, nonatomic) NSOperationQueue *topicOperations; // @synthesize topicOperations=_topicOperations;
@property(retain, nonatomic) FIRMessagingCheckinService *checkinService; // @synthesize checkinService=_checkinService;
- (void).cxx_destruct;
- (void)updateSubscriptionToTopic:(id)arg1 withToken:(id)arg2 options:(id)arg3 shouldDelete:(_Bool)arg4 handler:(CDUnknownBlockType)arg5;
- (void)stopAllSubscriptionRequests;
- (id)initWithCheckinService:(id)arg1;
- (id)init;

@end

@interface FIRMessagingReceiver : NSObject <FIRMessagingDataMessageManagerDelegate>
{
    id <FIRMessagingReceiverDelegate> _delegate;
}

+ (id)nextMessageID;
@property(nonatomic) __weak id <FIRMessagingReceiverDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)scheduleNotificationForMessage:(id)arg1;
- (void)scheduleIos10NotificationForMessage:(id)arg1 withIdentifier:(id)arg2;
- (void)didDeleteMessagesOnServer;
- (void)didSendDataMessageWithID:(id)arg1;
- (void)willSendDataMessageWithID:(id)arg1 error:(id)arg2;
- (void)didReceiveMessage:(id)arg1 withIdentifier:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FIRMessagingRegistrar : NSObject
{
    _Bool _stopAllSubscriptions;
    FIRMessagingPubSubRegistrar *_pubsubRegistrar;
    FIRMessagingCheckinService *_checkinService;
}

@property(retain, nonatomic) FIRMessagingCheckinService *checkinService; // @synthesize checkinService=_checkinService;
@property(nonatomic) _Bool stopAllSubscriptions; // @synthesize stopAllSubscriptions=_stopAllSubscriptions;
@property(retain, nonatomic) FIRMessagingPubSubRegistrar *pubsubRegistrar; // @synthesize pubsubRegistrar=_pubsubRegistrar;
- (void).cxx_destruct;
- (void)doUpdateSubscriptionForTopic:(id)arg1 token:(id)arg2 options:(id)arg3 shouldDelete:(_Bool)arg4 completion:(CDUnknownBlockType)arg5;
- (void)cancelAllRequests;
- (void)updateSubscriptionToTopic:(id)arg1 withToken:(id)arg2 options:(id)arg3 shouldDelete:(_Bool)arg4 handler:(CDUnknownBlockType)arg5;
- (_Bool)hasValidCheckinInfo;
- (_Bool)tryToLoadValidCheckinInfo;
- (id)init;
@property(readonly, nonatomic) NSString *secretToken;
@property(readonly, nonatomic) NSString *deviceAuthID;

@end

@interface FIRMessagingRemoteNotificationsProxy : NSObject
{
    _Bool _didSwizzleMethods;
    _Bool _didSwizzleAppDelegateMethods;
    _Bool _hasSwizzledUserNotificationDelegate;
    _Bool _isObservingUserNotificationDelegateChanges;
    NSMutableDictionary *_originalAppDelegateImps;
    NSMutableDictionary *_swizzledSelectorsByClass;
    id _userNotificationCenter;
    id _currentUserNotificationCenterDelegate;
}

+ (id)sharedProxy;
+ (void)swizzleMethods;
+ (_Bool)canSwizzleMethods;
@property(retain, nonatomic) id currentUserNotificationCenterDelegate; // @synthesize currentUserNotificationCenterDelegate=_currentUserNotificationCenterDelegate;
@property(retain, nonatomic) id userNotificationCenter; // @synthesize userNotificationCenter=_userNotificationCenter;
@property(nonatomic) _Bool isObservingUserNotificationDelegateChanges; // @synthesize isObservingUserNotificationDelegateChanges=_isObservingUserNotificationDelegateChanges;
@property(nonatomic) _Bool hasSwizzledUserNotificationDelegate; // @synthesize hasSwizzledUserNotificationDelegate=_hasSwizzledUserNotificationDelegate;
@property(nonatomic) _Bool didSwizzleAppDelegateMethods; // @synthesize didSwizzleAppDelegateMethods=_didSwizzleAppDelegateMethods;
@property(nonatomic) _Bool didSwizzleMethods; // @synthesize didSwizzleMethods=_didSwizzleMethods;
@property(retain, nonatomic) NSMutableDictionary *swizzledSelectorsByClass; // @synthesize swizzledSelectorsByClass=_swizzledSelectorsByClass;
@property(retain, nonatomic) NSMutableDictionary *originalAppDelegateImps; // @synthesize originalAppDelegateImps=_originalAppDelegateImps;
- (void).cxx_destruct;
- (CDUnknownFunctionPointerType)nonExistantMethodImplementationForClass:(Class)arg1;
- (void)unswizzleSelector:(SEL)arg1 inClass:(Class)arg2;
- (void)swizzleSelector:(SEL)arg1 inClass:(Class)arg2 withImplementation:(CDUnknownFunctionPointerType)arg3 inProtocol:(id)arg4;
- (void)removeImplementationForSelector:(SEL)arg1;
- (void)trackSwizzledSelector:(SEL)arg1 ofClass:(Class)arg2;
- (CDUnknownFunctionPointerType)originalImplementationForSelector:(SEL)arg1;
- (void)saveOriginalImplementation:(CDUnknownFunctionPointerType)arg1 forSelector:(SEL)arg2;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)removeUserNotificationCenterDelegateObserver;
- (void)addDelegateObserverToUserNotificationCenter:(id)arg1;
- (void)unswizzleUserNotificationCenterDelegate:(id)arg1;
- (void)swizzleUserNotificationCenterDelegate:(id)arg1;
- (void)listenForDelegateChangesInUserNotificationCenter:(id)arg1;
- (void)swizzleAppDelegateMethods:(id)arg1;
- (void)unswizzleAllMethods;
- (void)swizzleMethodsIfPossible;
- (void)dealloc;
- (id)init;

@end

@interface FIRMessagingRmq2PersistentStore : NSObject
{
    struct sqlite3 *_database;
    NSString *_databaseName;
    unsigned long long _currentDirectory;
}

+ (void)removeDatabase:(id)arg1;
+ (id)pathForDatabase:(id)arg1 inDirectory:(unsigned long long)arg2;
@property(nonatomic) unsigned long long currentDirectory; // @synthesize currentDirectory=_currentDirectory;
@property(retain, nonatomic) NSString *databaseName; // @synthesize databaseName=_databaseName;
- (void).cxx_destruct;
- (void)logErrorAndFinalizeStatement:(struct sqlite3_stmt *)arg1;
- (void)logError;
- (int)lastErrorCode;
- (id)lastErrorMessage;
- (_Bool)updateSyncMessageWithRmqID:(id)arg1 column:(id)arg2 value:(_Bool)arg3 error:(id *)arg4;
- (_Bool)updateSyncMessageViaMCSWithRmqID:(id)arg1 error:(id *)arg2;
- (_Bool)updateSyncMessageViaAPNSWithRmqID:(id)arg1 error:(id *)arg2;
- (_Bool)saveSyncMessageWithRmqID:(id)arg1 expirationTime:(long long)arg2 apnsReceived:(_Bool)arg3 mcsReceived:(_Bool)arg4 error:(id *)arg5;
- (int)deleteExpiredOrFinishedSyncMessages:(id *)arg1;
- (_Bool)deleteSyncMessageWithRmqID:(id)arg1;
- (id)querySyncMessageWithRmqID:(id)arg1;
- (void)scanOutgoingRmqMessagesWithHandler:(CDUnknownBlockType)arg1;
- (id)unackedS2dRmqIds;
- (_Bool)updateLastOutgoingRmqId:(long long)arg1;
- (long long)queryLastRmqId;
- (long long)queryHighestRmqId;
- (int)deleteMessagesFromTable:(id)arg1 withRmqIds:(id)arg2;
- (_Bool)saveMessageWithRmqId:(long long)arg1 tag:(BOOL)arg2 data:(id)arg3 error:(id *)arg4;
- (_Bool)saveUnackedS2dMessageWithRmqId:(id)arg1;
- (void)updateDbWithStringRmqID;
- (void)openDatabase:(id)arg1;
- (void)removeDatabase;
- (void)dropTableWithName:(id)arg1;
- (void)createTableWithName:(id)arg1 command:(id)arg2;
- (_Bool)doesFileExistInDirectory:(unsigned long long)arg1;
- (_Bool)moveToApplicationSupportSubDirectory:(id)arg1;
- (void)dealloc;
- (id)initWithDatabaseName:(id)arg1;

@end

@interface FIRMessagingRmqManager : NSObject <FIRMessagingRmqScanner>
{
    FIRMessagingRmq2PersistentStore *_rmq2Store;
    NSMutableDictionary *_outstandingMessages;
    long long _rmqId;
}

+ (void)removeDatabaseWithName:(id)arg1;
@property(nonatomic) long long rmqId; // @synthesize rmqId=_rmqId;
@property(retain, nonatomic) NSMutableDictionary *outstandingMessages; // @synthesize outstandingMessages=_outstandingMessages;
@property(retain, nonatomic) FIRMessagingRmq2PersistentStore *rmq2Store; // @synthesize rmq2Store=_rmq2Store;
- (void).cxx_destruct;
- (long long)nextRmqId;
- (_Bool)updateSyncMessageViaMCSWithRmqID:(id)arg1 error:(id *)arg2;
- (_Bool)updateSyncMessageViaAPNSWithRmqID:(id)arg1 error:(id *)arg2;
- (_Bool)saveSyncMessageWithRmqID:(id)arg1 expirationTime:(long long)arg2 apnsReceived:(_Bool)arg3 mcsReceived:(_Bool)arg4 error:(id *)arg5;
- (int)deleteExpiredOrFinishedSyncMessages:(id *)arg1;
- (_Bool)deleteSyncMessageWithRmqID:(id)arg1;
- (id)querySyncMessageWithRmqID:(id)arg1;
- (void)removeS2dIds:(id)arg1;
- (int)removeRmqMessagesWithRmqIds:(id)arg1;
- (int)removeRmqMessagesWithRmqId:(id)arg1;
- (void)ackReceivedForRmqId:(id)arg1;
- (void)scanWithRmqMessageHandler:(CDUnknownBlockType)arg1 dataMessageHandler:(CDUnknownBlockType)arg2;
- (id)unackedS2dRmqIds;
- (long long)querylastRmqId;
- (long long)queryHighestRmqId;
- (_Bool)saveS2dMessageWithRmqId:(id)arg1;
- (void)saveLastOutgoingRmqId:(long long)arg1;
- (_Bool)saveMessage:(id)arg1 withRmqId:(long long)arg2 tag:(BOOL)arg3 error:(id *)arg4;
- (_Bool)saveRmqMessage:(id)arg1 error:(id *)arg2;
- (void)loadInitialOutgoingPersistentId;
- (void)loadRmqId;
- (id)initWithDatabaseName:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FIRMessagingSecureSocket : NSObject <NSStreamDelegate>
{
    _Bool _isVersionSent;
    _Bool _isVersionReceived;
    _Bool _isInStreamOpen;
    _Bool _isOutStreamOpen;
    BOOL _currentProtoTypeBeingSent;
    id <FIRMessagingSecureSocketDelegate> _delegate;
    unsigned long long _state;
    NSInputStream *_inStream;
    NSOutputStream *_outStream;
    NSMutableData *_inputBuffer;
    unsigned long long _inputBufferLength;
    NSMutableData *_outputBuffer;
    unsigned long long _outputBufferLength;
    FIRMessagingPacketQueue *_packetQueue;
    NSRunLoop *_runLoop;
    NSString *_currentRmqIdBeingSent;
}

@property(nonatomic) BOOL currentProtoTypeBeingSent; // @synthesize currentProtoTypeBeingSent=_currentProtoTypeBeingSent;
@property(retain, nonatomic) NSString *currentRmqIdBeingSent; // @synthesize currentRmqIdBeingSent=_currentRmqIdBeingSent;
@property(retain, nonatomic) NSRunLoop *runLoop; // @synthesize runLoop=_runLoop;
@property(nonatomic) _Bool isOutStreamOpen; // @synthesize isOutStreamOpen=_isOutStreamOpen;
@property(nonatomic) _Bool isInStreamOpen; // @synthesize isInStreamOpen=_isInStreamOpen;
@property(nonatomic) _Bool isVersionReceived; // @synthesize isVersionReceived=_isVersionReceived;
@property(nonatomic) _Bool isVersionSent; // @synthesize isVersionSent=_isVersionSent;
@property(retain, nonatomic) FIRMessagingPacketQueue *packetQueue; // @synthesize packetQueue=_packetQueue;
@property(nonatomic) unsigned long long outputBufferLength; // @synthesize outputBufferLength=_outputBufferLength;
@property(retain, nonatomic) NSMutableData *outputBuffer; // @synthesize outputBuffer=_outputBuffer;
@property(nonatomic) unsigned long long inputBufferLength; // @synthesize inputBufferLength=_inputBufferLength;
@property(retain, nonatomic) NSMutableData *inputBuffer; // @synthesize inputBuffer=_inputBuffer;
@property(retain, nonatomic) NSOutputStream *outStream; // @synthesize outStream=_outStream;
@property(retain, nonatomic) NSInputStream *inStream; // @synthesize inStream=_inStream;
@property(nonatomic) unsigned long long state; // @synthesize state=_state;
@property(nonatomic) __weak id <FIRMessagingSecureSocketDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)performWrite;
- (unsigned long long)processCurrentInputBuffer:(id)arg1 outOffset:(unsigned long long *)arg2;
- (_Bool)performRead;
- (void)closeStream:(id)arg1;
- (void)openStream:(id)arg1 isVOIPStream:(_Bool)arg2;
- (void)stream:(id)arg1 handleEvent:(unsigned long long)arg2;
- (void)sendData:(id)arg1 withTag:(BOOL)arg2 rmqId:(id)arg3;
- (void)disconnect;
- (void)connectToHost:(id)arg1 port:(unsigned long long)arg2 onRunLoop:(id)arg3;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FIRMessagingSyncMessageManager : NSObject
{
    FIRMessagingRmqManager *_rmqManager;
}

+ (long long)expirationTimeForSyncMessage:(id)arg1;
@property(retain, nonatomic) FIRMessagingRmqManager *rmqManager; // @synthesize rmqManager=_rmqManager;
- (void).cxx_destruct;
- (_Bool)didReceiveSyncMessage:(id)arg1 viaAPNS:(_Bool)arg2 viaMCS:(_Bool)arg3;
- (_Bool)didReceiveMCSSyncMessage:(id)arg1;
- (_Bool)didReceiveAPNSSyncMessage:(id)arg1;
- (void)removeExpiredSyncMessages;
- (id)initWithRmqManager:(id)arg1;
- (id)init;

@end

@interface FIRMessagingTopicOperation : NSOperation
{
    _Bool _isFinished;
    _Bool _isExecuting;
    NSString *_topic;
    long long _action;
    NSString *_token;
    NSDictionary *_options;
    FIRMessagingCheckinService *_checkinService;
    CDUnknownBlockType _completion;
    NSURLSessionDataTask *_dataTask;
}

+ (id)sharedSession;
@property(retain) NSURLSessionDataTask *dataTask; // @synthesize dataTask=_dataTask;
@property(copy, nonatomic) CDUnknownBlockType completion; // @synthesize completion=_completion;
@property(retain, nonatomic) FIRMessagingCheckinService *checkinService; // @synthesize checkinService=_checkinService;
@property(copy, nonatomic) NSDictionary *options; // @synthesize options=_options;
@property(copy, nonatomic) NSString *token; // @synthesize token=_token;
@property(nonatomic) long long action; // @synthesize action=_action;
@property(copy, nonatomic) NSString *topic; // @synthesize topic=_topic;
- (void).cxx_destruct;
- (void)performSubscriptionChange;
- (void)cancel;
- (void)finishWithResult:(long long)arg1 error:(id)arg2;
- (void)start;
- (void)setFinished:(_Bool)arg1;
- (_Bool)isFinished;
- (void)setExecuting:(_Bool)arg1;
- (_Bool)isExecuting;
- (_Bool)isAsynchronous;
- (void)dealloc;
- (id)initWithTopic:(id)arg1 action:(long long)arg2 token:(id)arg3 options:(id)arg4 checkinService:(id)arg5 completion:(CDUnknownBlockType)arg6;

@end

@interface GtalkGtalkCoreRoot : GPBRootObject
{
}

@end

@interface GtalkHeartbeatPing : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(retain, nonatomic) GtalkCellTower *cellTower; // @dynamic cellTower;
@property(nonatomic) _Bool hasCellTower; // @dynamic hasCellTower;
@property(nonatomic) _Bool hasIntervalMs; // @dynamic hasIntervalMs;
@property(nonatomic) _Bool hasLastStreamIdReceived; // @dynamic hasLastStreamIdReceived;
@property(nonatomic) _Bool hasStatus; // @dynamic hasStatus;
@property(nonatomic) _Bool hasStreamId; // @dynamic hasStreamId;
@property(nonatomic) int intervalMs; // @dynamic intervalMs;
@property(nonatomic) int lastStreamIdReceived; // @dynamic lastStreamIdReceived;
@property(nonatomic) long long status; // @dynamic status;
@property(nonatomic) int streamId; // @dynamic streamId;

@end

@interface GtalkHeartbeatAck : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(retain, nonatomic) GtalkCellTower *cellTower; // @dynamic cellTower;
@property(nonatomic) _Bool hasCellTower; // @dynamic hasCellTower;
@property(nonatomic) _Bool hasIntervalMs; // @dynamic hasIntervalMs;
@property(nonatomic) _Bool hasLastStreamIdReceived; // @dynamic hasLastStreamIdReceived;
@property(nonatomic) _Bool hasStatus; // @dynamic hasStatus;
@property(nonatomic) _Bool hasStreamId; // @dynamic hasStreamId;
@property(nonatomic) int intervalMs; // @dynamic intervalMs;
@property(nonatomic) int lastStreamIdReceived; // @dynamic lastStreamIdReceived;
@property(nonatomic) long long status; // @dynamic status;
@property(nonatomic) int streamId; // @dynamic streamId;

@end

@interface GtalkErrorInfo : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) int code; // @dynamic code;
@property(retain, nonatomic) GtalkExtension *extension; // @dynamic extension;
@property(nonatomic) _Bool hasCode; // @dynamic hasCode;
@property(nonatomic) _Bool hasExtension; // @dynamic hasExtension;
@property(nonatomic) _Bool hasMessage; // @dynamic hasMessage;
@property(nonatomic) _Bool hasType; // @dynamic hasType;
@property(copy, nonatomic) NSString *message; // @dynamic message;
@property(copy, nonatomic) NSString *type; // @dynamic type;

@end

@interface GtalkSetting : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) _Bool hasName; // @dynamic hasName;
@property(nonatomic) _Bool hasValue; // @dynamic hasValue;
@property(copy, nonatomic) NSString *name; // @dynamic name;
@property(copy, nonatomic) NSString *value; // @dynamic value;

@end

@interface GtalkHeartbeatStat : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) _Bool hasIntervalMs; // @dynamic hasIntervalMs;
@property(nonatomic) _Bool hasIp; // @dynamic hasIp;
@property(nonatomic) _Bool hasTimeout; // @dynamic hasTimeout;
@property(nonatomic) int intervalMs; // @dynamic intervalMs;
@property(copy, nonatomic) NSString *ip; // @dynamic ip;
@property(nonatomic) _Bool timeout; // @dynamic timeout;

@end

@interface GtalkHeartbeatConfig : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) _Bool hasIntervalMs; // @dynamic hasIntervalMs;
@property(nonatomic) _Bool hasIp; // @dynamic hasIp;
@property(nonatomic) _Bool hasUploadStat; // @dynamic hasUploadStat;
@property(nonatomic) int intervalMs; // @dynamic intervalMs;
@property(copy, nonatomic) NSString *ip; // @dynamic ip;
@property(nonatomic) _Bool uploadStat; // @dynamic uploadStat;

@end

@interface GtalkLoginRequest : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) long long accountId; // @dynamic accountId;
@property(nonatomic) int authService; // @dynamic authService;
@property(copy, nonatomic) NSString *authToken; // @dynamic authToken;
@property(retain, nonatomic) GtalkCellTower *cellTower; // @dynamic cellTower;
@property(retain, nonatomic) NSMutableArray *clientEventArray; // @dynamic clientEventArray;
@property(readonly, nonatomic) unsigned long long clientEventArray_Count; // @dynamic clientEventArray_Count;
@property(nonatomic) int compress; // @dynamic compress;
@property(copy, nonatomic) NSString *deviceId; // @dynamic deviceId;
@property(copy, nonatomic) NSString *domain; // @dynamic domain;
@property(nonatomic) unsigned long long gcmStartTimeMs; // @dynamic gcmStartTimeMs;
@property(nonatomic) _Bool hasAccountId; // @dynamic hasAccountId;
@property(nonatomic) _Bool hasAuthService; // @dynamic hasAuthService;
@property(nonatomic) _Bool hasAuthToken; // @dynamic hasAuthToken;
@property(nonatomic) _Bool hasCellTower; // @dynamic hasCellTower;
@property(nonatomic) _Bool hasCompress; // @dynamic hasCompress;
@property(nonatomic) _Bool hasDeviceId; // @dynamic hasDeviceId;
@property(nonatomic) _Bool hasDomain; // @dynamic hasDomain;
@property(nonatomic) _Bool hasGcmStartTimeMs; // @dynamic hasGcmStartTimeMs;
@property(nonatomic) _Bool hasHeartbeatStat; // @dynamic hasHeartbeatStat;
@property(nonatomic) _Bool hasId_p; // @dynamic hasId_p;
@property(nonatomic) _Bool hasIncludeStreamIds; // @dynamic hasIncludeStreamIds;
@property(nonatomic) _Bool hasLastRmqId; // @dynamic hasLastRmqId;
@property(nonatomic) _Bool hasNetworkType; // @dynamic hasNetworkType;
@property(nonatomic) _Bool hasOnFallback; // @dynamic hasOnFallback;
@property(nonatomic) _Bool hasResource; // @dynamic hasResource;
@property(nonatomic) _Bool hasStatus; // @dynamic hasStatus;
@property(nonatomic) _Bool hasTokenVersionInfo; // @dynamic hasTokenVersionInfo;
@property(nonatomic) _Bool hasUseRmq2; // @dynamic hasUseRmq2;
@property(nonatomic) _Bool hasUser; // @dynamic hasUser;
@property(retain, nonatomic) GtalkHeartbeatStat *heartbeatStat; // @dynamic heartbeatStat;
@property(copy, nonatomic) NSString *id_p; // @dynamic id_p;
@property(nonatomic) _Bool includeStreamIds; // @dynamic includeStreamIds;
@property(nonatomic) long long lastRmqId; // @dynamic lastRmqId;
@property(nonatomic) int networkType; // @dynamic networkType;
@property(nonatomic) _Bool onFallback; // @dynamic onFallback;
@property(retain, nonatomic) NSMutableArray *receivedPersistentIdArray; // @dynamic receivedPersistentIdArray;
@property(readonly, nonatomic) unsigned long long receivedPersistentIdArray_Count; // @dynamic receivedPersistentIdArray_Count;
@property(copy, nonatomic) NSString *resource; // @dynamic resource;
@property(retain, nonatomic) NSMutableArray *settingArray; // @dynamic settingArray;
@property(readonly, nonatomic) unsigned long long settingArray_Count; // @dynamic settingArray_Count;
@property(nonatomic) long long status; // @dynamic status;
@property(copy, nonatomic) NSString *tokenVersionInfo; // @dynamic tokenVersionInfo;
@property(nonatomic) _Bool useRmq2; // @dynamic useRmq2;
@property(copy, nonatomic) NSString *user; // @dynamic user;

@end

@interface GtalkLoginResponse : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(retain, nonatomic) GtalkErrorInfo *error; // @dynamic error;
@property(nonatomic) _Bool hasError; // @dynamic hasError;
@property(nonatomic) _Bool hasHeartbeatConfig; // @dynamic hasHeartbeatConfig;
@property(nonatomic) _Bool hasId_p; // @dynamic hasId_p;
@property(nonatomic) _Bool hasJid; // @dynamic hasJid;
@property(nonatomic) _Bool hasLastStreamIdReceived; // @dynamic hasLastStreamIdReceived;
@property(nonatomic) _Bool hasServerTimestamp; // @dynamic hasServerTimestamp;
@property(nonatomic) _Bool hasStreamId; // @dynamic hasStreamId;
@property(retain, nonatomic) GtalkHeartbeatConfig *heartbeatConfig; // @dynamic heartbeatConfig;
@property(copy, nonatomic) NSString *id_p; // @dynamic id_p;
@property(copy, nonatomic) NSString *jid; // @dynamic jid;
@property(nonatomic) int lastStreamIdReceived; // @dynamic lastStreamIdReceived;
@property(nonatomic) long long serverTimestamp; // @dynamic serverTimestamp;
@property(retain, nonatomic) NSMutableArray *settingArray; // @dynamic settingArray;
@property(readonly, nonatomic) unsigned long long settingArray_Count; // @dynamic settingArray_Count;
@property(nonatomic) int streamId; // @dynamic streamId;

@end

@interface GtalkBindAccountRequest : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) long long accountId; // @dynamic accountId;
@property(copy, nonatomic) NSString *authToken; // @dynamic authToken;
@property(copy, nonatomic) NSString *domain; // @dynamic domain;
@property(nonatomic) _Bool hasAccountId; // @dynamic hasAccountId;
@property(nonatomic) _Bool hasAuthToken; // @dynamic hasAuthToken;
@property(nonatomic) _Bool hasDomain; // @dynamic hasDomain;
@property(nonatomic) _Bool hasId_p; // @dynamic hasId_p;
@property(nonatomic) _Bool hasLastStreamIdReceived; // @dynamic hasLastStreamIdReceived;
@property(nonatomic) _Bool hasPersistentId; // @dynamic hasPersistentId;
@property(nonatomic) _Bool hasResource; // @dynamic hasResource;
@property(nonatomic) _Bool hasStreamId; // @dynamic hasStreamId;
@property(nonatomic) _Bool hasUser; // @dynamic hasUser;
@property(copy, nonatomic) NSString *id_p; // @dynamic id_p;
@property(nonatomic) int lastStreamIdReceived; // @dynamic lastStreamIdReceived;
@property(copy, nonatomic) NSString *persistentId; // @dynamic persistentId;
@property(copy, nonatomic) NSString *resource; // @dynamic resource;
@property(nonatomic) int streamId; // @dynamic streamId;
@property(copy, nonatomic) NSString *user; // @dynamic user;

@end

@interface GtalkBindAccountResponse : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(retain, nonatomic) GtalkErrorInfo *error; // @dynamic error;
@property(nonatomic) _Bool hasError; // @dynamic hasError;
@property(nonatomic) _Bool hasId_p; // @dynamic hasId_p;
@property(nonatomic) _Bool hasJid; // @dynamic hasJid;
@property(nonatomic) _Bool hasLastStreamIdReceived; // @dynamic hasLastStreamIdReceived;
@property(nonatomic) _Bool hasStreamId; // @dynamic hasStreamId;
@property(copy, nonatomic) NSString *id_p; // @dynamic id_p;
@property(copy, nonatomic) NSString *jid; // @dynamic jid;
@property(nonatomic) int lastStreamIdReceived; // @dynamic lastStreamIdReceived;
@property(nonatomic) int streamId; // @dynamic streamId;

@end

@interface GtalkStreamErrorStanza : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) _Bool hasText; // @dynamic hasText;
@property(nonatomic) _Bool hasType; // @dynamic hasType;
@property(copy, nonatomic) NSString *text; // @dynamic text;
@property(copy, nonatomic) NSString *type; // @dynamic type;

@end

@interface GtalkClose : GPBMessage
{
}

+ (id)descriptor;

@end

@interface GtalkExtension : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(copy, nonatomic) NSString *data_p; // @dynamic data_p;
@property(nonatomic) _Bool hasData_p; // @dynamic hasData_p;
@property(nonatomic) _Bool hasId_p; // @dynamic hasId_p;
@property(nonatomic) int id_p; // @dynamic id_p;

@end

@interface GtalkMessageStanza : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) long long accountId; // @dynamic accountId;
@property(copy, nonatomic) NSString *body; // @dynamic body;
@property(retain, nonatomic) GtalkErrorInfo *error; // @dynamic error;
@property(retain, nonatomic) NSMutableArray *extensionArray; // @dynamic extensionArray;
@property(readonly, nonatomic) unsigned long long extensionArray_Count; // @dynamic extensionArray_Count;
@property(copy, nonatomic) NSString *from; // @dynamic from;
@property(nonatomic) _Bool hasAccountId; // @dynamic hasAccountId;
@property(nonatomic) _Bool hasBody; // @dynamic hasBody;
@property(nonatomic) _Bool hasError; // @dynamic hasError;
@property(nonatomic) _Bool hasFrom; // @dynamic hasFrom;
@property(nonatomic) _Bool hasId_p; // @dynamic hasId_p;
@property(nonatomic) _Bool hasLastStreamIdReceived; // @dynamic hasLastStreamIdReceived;
@property(nonatomic) _Bool hasNosave; // @dynamic hasNosave;
@property(nonatomic) _Bool hasPersistentId; // @dynamic hasPersistentId;
@property(nonatomic) _Bool hasRead; // @dynamic hasRead;
@property(nonatomic) _Bool hasRmqId; // @dynamic hasRmqId;
@property(nonatomic) _Bool hasStreamId; // @dynamic hasStreamId;
@property(nonatomic) _Bool hasSubject; // @dynamic hasSubject;
@property(nonatomic) _Bool hasThread; // @dynamic hasThread;
@property(nonatomic) _Bool hasTimestamp; // @dynamic hasTimestamp;
@property(nonatomic) _Bool hasTo; // @dynamic hasTo;
@property(nonatomic) _Bool hasType; // @dynamic hasType;
@property(copy, nonatomic) NSString *id_p; // @dynamic id_p;
@property(nonatomic) int lastStreamIdReceived; // @dynamic lastStreamIdReceived;
@property(nonatomic) _Bool nosave; // @dynamic nosave;
@property(copy, nonatomic) NSString *persistentId; // @dynamic persistentId;
@property(nonatomic) _Bool read; // @dynamic read;
@property(nonatomic) long long rmqId; // @dynamic rmqId;
@property(nonatomic) int streamId; // @dynamic streamId;
@property(copy, nonatomic) NSString *subject; // @dynamic subject;
@property(copy, nonatomic) NSString *thread; // @dynamic thread;
@property(nonatomic) long long timestamp; // @dynamic timestamp;
@property(copy, nonatomic) NSString *to; // @dynamic to;
@property(nonatomic) int type; // @dynamic type;

@end

@interface GtalkPresenceStanza : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) long long accountId; // @dynamic accountId;
@property(copy, nonatomic) NSString *avatarHash; // @dynamic avatarHash;
@property(nonatomic) int capabilitiesFlags; // @dynamic capabilitiesFlags;
@property(nonatomic) int client; // @dynamic client;
@property(retain, nonatomic) GtalkErrorInfo *error; // @dynamic error;
@property(retain, nonatomic) NSMutableArray *extensionArray; // @dynamic extensionArray;
@property(readonly, nonatomic) unsigned long long extensionArray_Count; // @dynamic extensionArray_Count;
@property(copy, nonatomic) NSString *from; // @dynamic from;
@property(nonatomic) _Bool hasAccountId; // @dynamic hasAccountId;
@property(nonatomic) _Bool hasAvatarHash; // @dynamic hasAvatarHash;
@property(nonatomic) _Bool hasCapabilitiesFlags; // @dynamic hasCapabilitiesFlags;
@property(nonatomic) _Bool hasClient; // @dynamic hasClient;
@property(nonatomic) _Bool hasError; // @dynamic hasError;
@property(nonatomic) _Bool hasFrom; // @dynamic hasFrom;
@property(nonatomic) _Bool hasId_p; // @dynamic hasId_p;
@property(nonatomic) _Bool hasLastStreamIdReceived; // @dynamic hasLastStreamIdReceived;
@property(nonatomic) _Bool hasPersistentId; // @dynamic hasPersistentId;
@property(nonatomic) _Bool hasPriority; // @dynamic hasPriority;
@property(nonatomic) _Bool hasRmqId; // @dynamic hasRmqId;
@property(nonatomic) _Bool hasShow; // @dynamic hasShow;
@property(nonatomic) _Bool hasStatus; // @dynamic hasStatus;
@property(nonatomic) _Bool hasStreamId; // @dynamic hasStreamId;
@property(nonatomic) _Bool hasTo; // @dynamic hasTo;
@property(nonatomic) _Bool hasType; // @dynamic hasType;
@property(copy, nonatomic) NSString *id_p; // @dynamic id_p;
@property(nonatomic) int lastStreamIdReceived; // @dynamic lastStreamIdReceived;
@property(copy, nonatomic) NSString *persistentId; // @dynamic persistentId;
@property(nonatomic) int priority; // @dynamic priority;
@property(nonatomic) long long rmqId; // @dynamic rmqId;
@property(nonatomic) int show; // @dynamic show;
@property(copy, nonatomic) NSString *status; // @dynamic status;
@property(nonatomic) int streamId; // @dynamic streamId;
@property(copy, nonatomic) NSString *to; // @dynamic to;
@property(nonatomic) int type; // @dynamic type;

@end

@interface GtalkBatchPresenceStanza : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) long long accountId; // @dynamic accountId;
@property(retain, nonatomic) GtalkErrorInfo *error; // @dynamic error;
@property(nonatomic) _Bool hasAccountId; // @dynamic hasAccountId;
@property(nonatomic) _Bool hasError; // @dynamic hasError;
@property(nonatomic) _Bool hasId_p; // @dynamic hasId_p;
@property(nonatomic) _Bool hasLastStreamIdReceived; // @dynamic hasLastStreamIdReceived;
@property(nonatomic) _Bool hasPersistentId; // @dynamic hasPersistentId;
@property(nonatomic) _Bool hasStreamId; // @dynamic hasStreamId;
@property(nonatomic) _Bool hasTo; // @dynamic hasTo;
@property(nonatomic) _Bool hasType; // @dynamic hasType;
@property(copy, nonatomic) NSString *id_p; // @dynamic id_p;
@property(nonatomic) int lastStreamIdReceived; // @dynamic lastStreamIdReceived;
@property(copy, nonatomic) NSString *persistentId; // @dynamic persistentId;
@property(retain, nonatomic) NSMutableArray *presenceArray; // @dynamic presenceArray;
@property(readonly, nonatomic) unsigned long long presenceArray_Count; // @dynamic presenceArray_Count;
@property(nonatomic) int streamId; // @dynamic streamId;
@property(copy, nonatomic) NSString *to; // @dynamic to;
@property(nonatomic) int type; // @dynamic type;

@end

@interface GtalkIqStanza : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) long long accountId; // @dynamic accountId;
@property(retain, nonatomic) GtalkErrorInfo *error; // @dynamic error;
@property(retain, nonatomic) GtalkExtension *extension; // @dynamic extension;
@property(copy, nonatomic) NSString *from; // @dynamic from;
@property(nonatomic) _Bool hasAccountId; // @dynamic hasAccountId;
@property(nonatomic) _Bool hasError; // @dynamic hasError;
@property(nonatomic) _Bool hasExtension; // @dynamic hasExtension;
@property(nonatomic) _Bool hasFrom; // @dynamic hasFrom;
@property(nonatomic) _Bool hasId_p; // @dynamic hasId_p;
@property(nonatomic) _Bool hasLastStreamIdReceived; // @dynamic hasLastStreamIdReceived;
@property(nonatomic) _Bool hasPersistentId; // @dynamic hasPersistentId;
@property(nonatomic) _Bool hasRmqId; // @dynamic hasRmqId;
@property(nonatomic) _Bool hasStatus; // @dynamic hasStatus;
@property(nonatomic) _Bool hasStreamId; // @dynamic hasStreamId;
@property(nonatomic) _Bool hasTo; // @dynamic hasTo;
@property(nonatomic) _Bool hasType; // @dynamic hasType;
@property(copy, nonatomic) NSString *id_p; // @dynamic id_p;
@property(nonatomic) int lastStreamIdReceived; // @dynamic lastStreamIdReceived;
@property(copy, nonatomic) NSString *persistentId; // @dynamic persistentId;
@property(nonatomic) long long rmqId; // @dynamic rmqId;
@property(nonatomic) long long status; // @dynamic status;
@property(nonatomic) int streamId; // @dynamic streamId;
@property(copy, nonatomic) NSString *to; // @dynamic to;
@property(nonatomic) int type; // @dynamic type;

@end

@interface GtalkAppData : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) _Bool hasKey; // @dynamic hasKey;
@property(nonatomic) _Bool hasValue; // @dynamic hasValue;
@property(copy, nonatomic) NSString *key; // @dynamic key;
@property(copy, nonatomic) NSString *value; // @dynamic value;

@end

@interface GtalkDataMessageStanza : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) int actualDelay; // @dynamic actualDelay;
@property(retain, nonatomic) NSMutableArray *appDataArray; // @dynamic appDataArray;
@property(readonly, nonatomic) unsigned long long appDataArray_Count; // @dynamic appDataArray_Count;
@property(copy, nonatomic) NSString *category; // @dynamic category;
@property(retain, nonatomic) GtalkCellTower *cellTower; // @dynamic cellTower;
@property(copy, nonatomic) NSString *clientId; // @dynamic clientId;
@property(nonatomic) _Bool deliveryReceiptRequested; // @dynamic deliveryReceiptRequested;
@property(nonatomic) long long deviceUserId; // @dynamic deviceUserId;
@property(copy, nonatomic) NSString *externalMessageId; // @dynamic externalMessageId;
@property(nonatomic) long long flags; // @dynamic flags;
@property(copy, nonatomic) NSString *from; // @dynamic from;
@property(nonatomic) _Bool fromTrustedServer; // @dynamic fromTrustedServer;
@property(nonatomic) _Bool hasActualDelay; // @dynamic hasActualDelay;
@property(nonatomic) _Bool hasCategory; // @dynamic hasCategory;
@property(nonatomic) _Bool hasCellTower; // @dynamic hasCellTower;
@property(nonatomic) _Bool hasClientId; // @dynamic hasClientId;
@property(nonatomic) _Bool hasDeliveryReceiptRequested; // @dynamic hasDeliveryReceiptRequested;
@property(nonatomic) _Bool hasDeviceUserId; // @dynamic hasDeviceUserId;
@property(nonatomic) _Bool hasExternalMessageId; // @dynamic hasExternalMessageId;
@property(nonatomic) _Bool hasFlags; // @dynamic hasFlags;
@property(nonatomic) _Bool hasFrom; // @dynamic hasFrom;
@property(nonatomic) _Bool hasFromTrustedServer; // @dynamic hasFromTrustedServer;
@property(nonatomic) _Bool hasId_p; // @dynamic hasId_p;
@property(nonatomic) _Bool hasImmediateAck; // @dynamic hasImmediateAck;
@property(nonatomic) _Bool hasLastStreamIdReceived; // @dynamic hasLastStreamIdReceived;
@property(nonatomic) _Bool hasMaxDelay; // @dynamic hasMaxDelay;
@property(nonatomic) _Bool hasPermission; // @dynamic hasPermission;
@property(nonatomic) _Bool hasPersistentId; // @dynamic hasPersistentId;
@property(nonatomic) _Bool hasPkgSignature; // @dynamic hasPkgSignature;
@property(nonatomic) _Bool hasPriority; // @dynamic hasPriority;
@property(nonatomic) _Bool hasQueued; // @dynamic hasQueued;
@property(nonatomic) _Bool hasRawData; // @dynamic hasRawData;
@property(nonatomic) _Bool hasRegId; // @dynamic hasRegId;
@property(nonatomic) _Bool hasRmqId; // @dynamic hasRmqId;
@property(nonatomic) _Bool hasSent; // @dynamic hasSent;
@property(nonatomic) _Bool hasStatus; // @dynamic hasStatus;
@property(nonatomic) _Bool hasStreamId; // @dynamic hasStreamId;
@property(nonatomic) _Bool hasTo; // @dynamic hasTo;
@property(nonatomic) _Bool hasToken; // @dynamic hasToken;
@property(nonatomic) _Bool hasTtl; // @dynamic hasTtl;
@property(copy, nonatomic) NSString *id_p; // @dynamic id_p;
@property(nonatomic) _Bool immediateAck; // @dynamic immediateAck;
@property(nonatomic) int lastStreamIdReceived; // @dynamic lastStreamIdReceived;
@property(nonatomic) int maxDelay; // @dynamic maxDelay;
@property(copy, nonatomic) NSString *permission; // @dynamic permission;
@property(copy, nonatomic) NSString *persistentId; // @dynamic persistentId;
@property(copy, nonatomic) NSString *pkgSignature; // @dynamic pkgSignature;
@property(nonatomic) int priority; // @dynamic priority;
@property(nonatomic) int queued; // @dynamic queued;
@property(copy, nonatomic) NSData *rawData; // @dynamic rawData;
@property(copy, nonatomic) NSString *regId; // @dynamic regId;
@property(nonatomic) long long rmqId; // @dynamic rmqId;
@property(nonatomic) long long sent; // @dynamic sent;
@property(nonatomic) long long status; // @dynamic status;
@property(nonatomic) int streamId; // @dynamic streamId;
@property(copy, nonatomic) NSString *to; // @dynamic to;
@property(copy, nonatomic) NSString *token; // @dynamic token;
@property(nonatomic) int ttl; // @dynamic ttl;

@end

@interface GtalkTalkMetadata : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) _Bool foreground; // @dynamic foreground;
@property(nonatomic) _Bool hasForeground; // @dynamic hasForeground;

@end

@interface GtalkCellTower : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) _Bool hasId_p; // @dynamic hasId_p;
@property(nonatomic) _Bool hasKnownCongestionStatus; // @dynamic hasKnownCongestionStatus;
@property(copy, nonatomic) NSString *id_p; // @dynamic id_p;
@property(nonatomic) int knownCongestionStatus; // @dynamic knownCongestionStatus;

@end

@interface GtalkClientEvent : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) int errorCode; // @dynamic errorCode;
@property(nonatomic) _Bool hasErrorCode; // @dynamic hasErrorCode;
@property(nonatomic) _Bool hasNetworkPort; // @dynamic hasNetworkPort;
@property(nonatomic) _Bool hasNetworkType; // @dynamic hasNetworkType;
@property(nonatomic) _Bool hasNumberDiscardedEvents; // @dynamic hasNumberDiscardedEvents;
@property(nonatomic) _Bool hasTimeConnectionEndedMs; // @dynamic hasTimeConnectionEndedMs;
@property(nonatomic) _Bool hasTimeConnectionEstablishedMs; // @dynamic hasTimeConnectionEstablishedMs;
@property(nonatomic) _Bool hasTimeConnectionStartedMs; // @dynamic hasTimeConnectionStartedMs;
@property(nonatomic) _Bool hasType; // @dynamic hasType;
@property(nonatomic) int networkPort; // @dynamic networkPort;
@property(nonatomic) int networkType; // @dynamic networkType;
@property(nonatomic) unsigned int numberDiscardedEvents; // @dynamic numberDiscardedEvents;
@property(nonatomic) unsigned long long timeConnectionEndedMs; // @dynamic timeConnectionEndedMs;
@property(nonatomic) unsigned long long timeConnectionEstablishedMs; // @dynamic timeConnectionEstablishedMs;
@property(nonatomic) unsigned long long timeConnectionStartedMs; // @dynamic timeConnectionStartedMs;
@property(nonatomic) int type; // @dynamic type;

@end

@interface GtalkGtalkExtensionsRoot : GPBRootObject
{
}

@end

@interface GtalkRosterQuery : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) int avatarHeight; // @dynamic avatarHeight;
@property(nonatomic) int avatarWidth; // @dynamic avatarWidth;
@property(copy, nonatomic) NSString *etag; // @dynamic etag;
@property(nonatomic) _Bool hasAvatarHeight; // @dynamic hasAvatarHeight;
@property(nonatomic) _Bool hasAvatarWidth; // @dynamic hasAvatarWidth;
@property(nonatomic) _Bool hasEtag; // @dynamic hasEtag;
@property(nonatomic) _Bool hasNotModified; // @dynamic hasNotModified;
@property(retain, nonatomic) NSMutableArray *itemArray; // @dynamic itemArray;
@property(readonly, nonatomic) unsigned long long itemArray_Count; // @dynamic itemArray_Count;
@property(nonatomic) _Bool notModified; // @dynamic notModified;

@end

@interface GtalkRosterItem : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) int ask; // @dynamic ask;
@property(nonatomic) int display; // @dynamic display;
@property(retain, nonatomic) NSMutableArray *groupArray; // @dynamic groupArray;
@property(readonly, nonatomic) unsigned long long groupArray_Count; // @dynamic groupArray_Count;
@property(nonatomic) _Bool hasAsk; // @dynamic hasAsk;
@property(nonatomic) _Bool hasDisplay; // @dynamic hasDisplay;
@property(nonatomic) _Bool hasJid; // @dynamic hasJid;
@property(nonatomic) _Bool hasName; // @dynamic hasName;
@property(nonatomic) _Bool hasQuickContact; // @dynamic hasQuickContact;
@property(nonatomic) _Bool hasRejected; // @dynamic hasRejected;
@property(nonatomic) _Bool hasSubscription; // @dynamic hasSubscription;
@property(copy, nonatomic) NSString *jid; // @dynamic jid;
@property(copy, nonatomic) NSString *name; // @dynamic name;
@property(nonatomic) _Bool quickContact; // @dynamic quickContact;
@property(nonatomic) _Bool rejected; // @dynamic rejected;
@property(nonatomic) int subscription; // @dynamic subscription;

@end

@interface GtalkRmqLastId : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) _Bool hasId_p; // @dynamic hasId_p;
@property(nonatomic) long long id_p; // @dynamic id_p;

@end

@interface GtalkRmqAck : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) _Bool hasId_p; // @dynamic hasId_p;
@property(nonatomic) long long id_p; // @dynamic id_p;

@end

@interface GtalkVCard : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(copy, nonatomic) NSString *avatarHash; // @dynamic avatarHash;
@property(copy, nonatomic) NSString *fullName; // @dynamic fullName;
@property(nonatomic) _Bool hasAvatarHash; // @dynamic hasAvatarHash;
@property(nonatomic) _Bool hasFullName; // @dynamic hasFullName;
@property(nonatomic) _Bool hasModified; // @dynamic hasModified;
@property(nonatomic) _Bool hasPhoto; // @dynamic hasPhoto;
@property(nonatomic) _Bool hasVersion; // @dynamic hasVersion;
@property(nonatomic) _Bool modified; // @dynamic modified;
@property(retain, nonatomic) GtalkPhoto *photo; // @dynamic photo;
@property(copy, nonatomic) NSString *version; // @dynamic version;

@end

@interface GtalkPhoto : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(copy, nonatomic) NSString *data_p; // @dynamic data_p;
@property(nonatomic) _Bool hasData_p; // @dynamic hasData_p;
@property(nonatomic) _Bool hasType; // @dynamic hasType;
@property(copy, nonatomic) NSString *type; // @dynamic type;

@end

@interface GtalkChatRead : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) _Bool hasUser; // @dynamic hasUser;
@property(copy, nonatomic) NSString *user; // @dynamic user;

@end

@interface GtalkChatClosed : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) _Bool hasUser; // @dynamic hasUser;
@property(copy, nonatomic) NSString *user; // @dynamic user;

@end

@interface GtalkCapabilities : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(copy, nonatomic) NSString *ext; // @dynamic ext;
@property(nonatomic) _Bool hasExt; // @dynamic hasExt;
@property(nonatomic) _Bool hasHash_p; // @dynamic hasHash_p;
@property(nonatomic) _Bool hasNode; // @dynamic hasNode;
@property(nonatomic) _Bool hasVer; // @dynamic hasVer;
@property(copy, nonatomic) NSString *hash_p; // @dynamic hash_p;
@property(copy, nonatomic) NSString *node; // @dynamic node;
@property(copy, nonatomic) NSString *ver; // @dynamic ver;

@end

@interface GtalkSharedStatus : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) _Bool hasInvisible; // @dynamic hasInvisible;
@property(nonatomic) _Bool hasShow; // @dynamic hasShow;
@property(nonatomic) _Bool hasStatus; // @dynamic hasStatus;
@property(nonatomic) _Bool hasStatusListContentsMax; // @dynamic hasStatusListContentsMax;
@property(nonatomic) _Bool hasStatusListMax; // @dynamic hasStatusListMax;
@property(nonatomic) _Bool hasStatusMax; // @dynamic hasStatusMax;
@property(nonatomic) _Bool hasStatusMinVersion; // @dynamic hasStatusMinVersion;
@property(nonatomic) _Bool invisible; // @dynamic invisible;
@property(nonatomic) int show; // @dynamic show;
@property(copy, nonatomic) NSString *status; // @dynamic status;
@property(retain, nonatomic) NSMutableArray *statusListArray; // @dynamic statusListArray;
@property(readonly, nonatomic) unsigned long long statusListArray_Count; // @dynamic statusListArray_Count;
@property(nonatomic) int statusListContentsMax; // @dynamic statusListContentsMax;
@property(nonatomic) int statusListMax; // @dynamic statusListMax;
@property(nonatomic) int statusMax; // @dynamic statusMax;
@property(nonatomic) int statusMinVersion; // @dynamic statusMinVersion;

@end

@interface GtalkSharedStatus_StatusList : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) _Bool hasShow; // @dynamic hasShow;
@property(nonatomic) int show; // @dynamic show;
@property(retain, nonatomic) NSMutableArray *statusArray; // @dynamic statusArray;
@property(readonly, nonatomic) unsigned long long statusArray_Count; // @dynamic statusArray_Count;

@end

@interface GtalkOtrQuery : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(copy, nonatomic) NSString *etag; // @dynamic etag;
@property(nonatomic) _Bool hasEtag; // @dynamic hasEtag;
@property(nonatomic) _Bool hasNosaveDefault; // @dynamic hasNosaveDefault;
@property(nonatomic) _Bool hasNotModified; // @dynamic hasNotModified;
@property(retain, nonatomic) NSMutableArray *itemArray; // @dynamic itemArray;
@property(readonly, nonatomic) unsigned long long itemArray_Count; // @dynamic itemArray_Count;
@property(nonatomic) _Bool nosaveDefault; // @dynamic nosaveDefault;
@property(nonatomic) _Bool notModified; // @dynamic notModified;

@end

@interface GtalkOtrItem : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) _Bool changedByBuddy; // @dynamic changedByBuddy;
@property(nonatomic) _Bool hasChangedByBuddy; // @dynamic hasChangedByBuddy;
@property(nonatomic) _Bool hasJid; // @dynamic hasJid;
@property(nonatomic) _Bool hasNosave; // @dynamic hasNosave;
@property(copy, nonatomic) NSString *jid; // @dynamic jid;
@property(nonatomic) _Bool nosave; // @dynamic nosave;

@end

@interface GtalkIdle : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) _Bool away; // @dynamic away;
@property(nonatomic) _Bool hasAway; // @dynamic hasAway;
@property(nonatomic) _Bool hasIdle; // @dynamic hasIdle;
@property(nonatomic) _Bool idle; // @dynamic idle;

@end

@interface GtalkPostAuthBatchQuery : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) _Bool available; // @dynamic available;
@property(copy, nonatomic) NSString *avatarHash; // @dynamic avatarHash;
@property(nonatomic) int capabilitiesExtFlags; // @dynamic capabilitiesExtFlags;
@property(nonatomic) _Bool deviceIdle; // @dynamic deviceIdle;
@property(nonatomic) _Bool hasAvailable; // @dynamic hasAvailable;
@property(nonatomic) _Bool hasAvatarHash; // @dynamic hasAvatarHash;
@property(nonatomic) _Bool hasCapabilitiesExtFlags; // @dynamic hasCapabilitiesExtFlags;
@property(nonatomic) _Bool hasDeviceIdle; // @dynamic hasDeviceIdle;
@property(nonatomic) _Bool hasMobileIndicator; // @dynamic hasMobileIndicator;
@property(nonatomic) _Bool hasOtrEtag; // @dynamic hasOtrEtag;
@property(nonatomic) _Bool hasRosterEtag; // @dynamic hasRosterEtag;
@property(nonatomic) _Bool hasSharedStatusVersion; // @dynamic hasSharedStatusVersion;
@property(nonatomic) _Bool hasVcardQueryStanzaId; // @dynamic hasVcardQueryStanzaId;
@property(nonatomic) _Bool mobileIndicator; // @dynamic mobileIndicator;
@property(copy, nonatomic) NSString *otrEtag; // @dynamic otrEtag;
@property(copy, nonatomic) NSString *rosterEtag; // @dynamic rosterEtag;
@property(nonatomic) int sharedStatusVersion; // @dynamic sharedStatusVersion;
@property(copy, nonatomic) NSString *vcardQueryStanzaId; // @dynamic vcardQueryStanzaId;

@end

@interface GtalkStreamAck : GPBMessage
{
}

+ (id)descriptor;

@end

@interface GtalkSelectiveAck : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(retain, nonatomic) NSMutableArray *idArray; // @dynamic idArray;
@property(readonly, nonatomic) unsigned long long idArray_Count; // @dynamic idArray_Count;

@end

@interface CDVViewController : UIViewController <CDVScreenOrientationDelegate>
{
    id <CDVWebViewEngineProtocol> _webViewEngine;
    id <CDVCommandDelegate> _commandDelegate;
    CDVCommandQueue *_commandQueue;
    NSString *_userAgent;
    long long _userAgentLockToken;
    _Bool initialized;
    NSArray *supportedOrientations;
    NSMutableDictionary *pluginObjects;
    NSDictionary *pluginsMap;
    NSMutableArray *startupPluginNames;
    NSXMLParser *configParser;
    NSMutableDictionary *settings;
    NSString *wwwFolderName;
    NSString *startPage;
    NSURL *openURL;
    NSString *baseUserAgent;
    NSString *_configFile;
}

@property(copy, nonatomic) NSString *configFile; // @synthesize configFile=_configFile;
@property(retain, nonatomic) id <CDVWebViewEngineProtocol> webViewEngine; // @synthesize webViewEngine=_webViewEngine;
@property(readonly, nonatomic) CDVCommandQueue *commandQueue; // @synthesize commandQueue=_commandQueue;
@property(readonly, nonatomic) id <CDVCommandDelegate> commandDelegate; // @synthesize commandDelegate=_commandDelegate;
@property(copy, nonatomic) NSString *baseUserAgent; // @synthesize baseUserAgent;
@property(retain) NSURL *openURL; // @synthesize openURL;
@property _Bool initialized; // @synthesize initialized;
@property(copy, nonatomic) NSString *startPage; // @synthesize startPage;
@property(copy, nonatomic) NSString *wwwFolderName; // @synthesize wwwFolderName;
@property(retain, nonatomic) NSMutableDictionary *settings; // @synthesize settings;
@property(retain, nonatomic) NSXMLParser *configParser; // @synthesize configParser;
@property(retain, nonatomic) NSMutableArray *startupPluginNames; // @synthesize startupPluginNames;
@property(retain, nonatomic) NSDictionary *pluginsMap; // @synthesize pluginsMap;
@property(retain, nonatomic) NSMutableDictionary *pluginObjects; // @synthesize pluginObjects;
@property(retain, nonatomic) NSArray *supportedOrientations; // @synthesize supportedOrientations;
- (void).cxx_destruct;
@property(readonly, nonatomic) long long *userAgentLockToken;
- (void)dealloc;
- (void)onAppDidEnterBackground:(id)arg1;
- (void)onAppDidBecomeActive:(id)arg1;
- (void)onAppWillEnterForeground:(id)arg1;
- (void)onAppWillResignActive:(id)arg1;
- (void)onAppWillTerminate:(id)arg1;
- (id)appURLScheme;
- (id)getCommandInstance:(id)arg1;
- (void)registerPlugin:(id)arg1 withPluginName:(id)arg2;
- (void)registerPlugin:(id)arg1 withClassName:(id)arg2;
- (void)viewDidUnload;
- (void)didReceiveMemoryWarning;
- (void)createGapView;
@property(readonly, nonatomic) NSString *userAgent;
- (id)newCordovaViewWithFrame:(struct CGRect)arg1;
- (_Bool)supportsOrientation:(long long)arg1;
- (unsigned long long)supportedInterfaceOrientations;
- (_Bool)shouldAutorotate;
- (id)parseInterfaceOrientations:(id)arg1;
- (id)colorFromColorString:(id)arg1;
- (void)viewWillTransitionToSize:(struct CGSize)arg1 withTransitionCoordinator:(id)arg2;
- (void)viewDidLayoutSubviews;
- (void)viewWillLayoutSubviews;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)setLockToken:(long long)arg1;
- (void)viewDidLoad;
@property(readonly, nonatomic) __weak UIView *webView; // @dynamic webView;
- (id)errorURL;
- (id)appUrl;
- (void)loadSettings;
- (void)parseSettingsWithParser:(id)arg1;
- (id)configFilePath;
- (void)printMultitaskingInfo;
- (void)printPlatformVersionWarning;
- (void)printVersion;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)__init;
- (long long)preferredStatusBarStyle;
- (_Bool)prefersStatusBarHidden;
@property(retain, nonatomic) id sb_statusBarStyle; // @dynamic sb_statusBarStyle;
@property(retain, nonatomic) id sb_hideStatusBar; // @dynamic sb_hideStatusBar;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CDVAppDelegate : NSObject <UIApplicationDelegate>
{
    UIWindow *window;
    CDVViewController *viewController;
}

@property(retain, nonatomic) CDVViewController *viewController; // @synthesize viewController;
@property(retain, nonatomic) UIWindow *window; // @synthesize window;
- (void).cxx_destruct;
- (void)applicationDidReceiveMemoryWarning:(id)arg1;
- (unsigned long long)application:(id)arg1 supportedInterfaceOrientationsForWindow:(id)arg2;
- (_Bool)application:(id)arg1 openURL:(id)arg2 sourceApplication:(id)arg3 annotation:(id)arg4;
- (_Bool)application:(id)arg1 didFinishLaunchingWithOptions:(id)arg2;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CDVUIWebViewDelegate : NSObject <UIWebViewDelegate>
{
    NSObject<UIWebViewDelegate> *_delegate;
    long long _loadCount;
    long long _state;
    long long _curLoadToken;
    long long _loadStartPollCount;
}

- (void).cxx_destruct;
- (void)webView:(id)arg1 didFailLoadWithError:(id)arg2;
- (void)webViewDidFinishLoad:(id)arg1;
- (void)webViewDidStartLoad:(id)arg1;
- (_Bool)webView:(id)arg1 shouldStartLoadWithRequest:(id)arg2 navigationType:(long long)arg3;
- (_Bool)shouldLoadRequest:(id)arg1;
- (void)pollForPageLoadFinish:(id)arg1;
- (void)pollForPageLoadStart:(id)arg1;
- (id)evalForCurrentURL:(id)arg1;
- (void)setLoadToken:(id)arg1;
- (_Bool)isJsLoadTokenSet:(id)arg1;
- (_Bool)isPageLoaded:(id)arg1;
- (_Bool)request:(id)arg1 isEqualToRequestAfterStrippingFragments:(id)arg2;
- (id)initWithDelegate:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CDVCommandDelegateImpl : NSObject <CDVCommandDelegate>
{
    CDVViewController *_viewController;
    NSRegularExpression *_callbackIdPattern;
    CDVCommandQueue *_commandQueue;
    _Bool _delayResponses;
    CDUnknownBlockType urlTransformer;
}

@property(copy, nonatomic) CDUnknownBlockType urlTransformer; // @synthesize urlTransformer;
- (void).cxx_destruct;
@property(readonly, nonatomic) NSDictionary *settings;
- (id)userAgent;
- (void)runInBackground:(CDUnknownBlockType)arg1;
- (id)getCommandInstance:(id)arg1;
- (void)evalJs:(id)arg1 scheduledOnRunLoop:(_Bool)arg2;
- (void)evalJs:(id)arg1;
- (void)sendPluginResult:(id)arg1 callbackId:(id)arg2;
- (_Bool)isValidCallbackId:(id)arg1;
- (void)evalJsHelper:(id)arg1;
- (void)evalJsHelper2:(id)arg1;
- (void)flushCommandQueueWithDelayedJs;
- (id)pathForResource:(id)arg1;
- (id)initWithViewController:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CDVWhitelistPattern : NSObject
{
    NSRegularExpression *_scheme;
    NSRegularExpression *_host;
    NSNumber *_port;
    NSRegularExpression *_path;
}

+ (id)regexFromPattern:(id)arg1 allowWildcards:(_Bool)arg2;
- (void).cxx_destruct;
- (_Bool)matches:(id)arg1;
- (id)initWithScheme:(id)arg1 host:(id)arg2 port:(id)arg3 path:(id)arg4;

@end

@interface CDVWhitelist : NSObject
{
    NSMutableArray *whitelist;
    NSMutableSet *permittedSchemes;
    NSString *whitelistRejectionFormatString;
}

@property(copy, nonatomic) NSString *whitelistRejectionFormatString; // @synthesize whitelistRejectionFormatString;
@property(retain, nonatomic) NSMutableSet *permittedSchemes; // @synthesize permittedSchemes;
@property(retain, nonatomic) NSMutableArray *whitelist; // @synthesize whitelist;
- (void).cxx_destruct;
- (id)errorStringForURL:(id)arg1;
- (_Bool)URLIsAllowed:(id)arg1 logFailure:(_Bool)arg2;
- (_Bool)URLIsAllowed:(id)arg1;
- (_Bool)schemeIsAllowed:(id)arg1;
- (void)addWhiteListEntry:(id)arg1;
- (_Bool)isIPv4Address:(id)arg1;
- (id)initWithArray:(id)arg1;

@end

@interface CDVInvokedUrlCommand : NSObject
{
    NSString *_callbackId;
    NSString *_className;
    NSString *_methodName;
    NSArray *_arguments;
}

+ (id)commandFromJson:(id)arg1;
@property(readonly, nonatomic) NSString *methodName; // @synthesize methodName=_methodName;
@property(readonly, nonatomic) NSString *className; // @synthesize className=_className;
@property(readonly, nonatomic) NSString *callbackId; // @synthesize callbackId=_callbackId;
@property(readonly, nonatomic) NSArray *arguments; // @synthesize arguments=_arguments;
- (void).cxx_destruct;
- (id)argumentAtIndex:(unsigned long long)arg1 withDefault:(id)arg2 andClass:(Class)arg3;
- (id)argumentAtIndex:(unsigned long long)arg1 withDefault:(id)arg2;
- (id)argumentAtIndex:(unsigned long long)arg1;
- (void)massageArguments;
- (id)initWithArguments:(id)arg1 callbackId:(id)arg2 className:(id)arg3 methodName:(id)arg4;
- (id)initFromJson:(id)arg1;

@end

@interface CDVTimerItem : NSObject
{
    NSString *_name;
    NSDate *_started;
    NSDate *_ended;
}

@property(retain, nonatomic) NSDate *ended; // @synthesize ended=_ended;
@property(retain, nonatomic) NSDate *started; // @synthesize started=_started;
@property(retain, nonatomic) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;
- (void)log;

@end

@interface CDVTimer : NSObject
{
    NSMutableDictionary *_items;
}

+ (id)sharedInstance;
+ (void)clearAll;
+ (void)stop:(id)arg1;
+ (void)start:(id)arg1;
@property(retain, nonatomic) NSMutableDictionary *items; // @synthesize items=_items;
- (void).cxx_destruct;
- (void)removeAll;
- (void)remove:(id)arg1;
- (void)add:(id)arg1;
- (id)init;

@end

@interface CDVUserAgentUtil : NSObject
{
}

+ (void)setUserAgent:(id)arg1 lockToken:(long long)arg2;
+ (void)releaseLock:(long long *)arg1;
+ (void)acquireLock:(CDUnknownBlockType)arg1;
+ (void)onAppLocaleDidChange:(id)arg1;
+ (id)originalUserAgent;

@end

@interface CDVConfigParser : NSObject <NSXMLParserDelegate>
{
    NSString *featureName;
    NSMutableDictionary *pluginsDict;
    NSMutableDictionary *settings;
    NSString *startPage;
    NSMutableArray *startupPluginNames;
}

@property(retain, nonatomic) NSMutableArray *startupPluginNames; // @synthesize startupPluginNames;
@property(retain, nonatomic) NSString *startPage; // @synthesize startPage;
@property(retain, nonatomic) NSMutableDictionary *settings; // @synthesize settings;
@property(retain, nonatomic) NSMutableDictionary *pluginsDict; // @synthesize pluginsDict;
- (void).cxx_destruct;
- (void)parser:(id)arg1 parseErrorOccurred:(id)arg2;
- (void)parser:(id)arg1 didEndElement:(id)arg2 namespaceURI:(id)arg3 qualifiedName:(id)arg4;
- (void)parser:(id)arg1 didStartElement:(id)arg2 namespaceURI:(id)arg3 qualifiedName:(id)arg4 attributes:(id)arg5;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CDVGestureHandler : CDVPlugin
{
    UILongPressGestureRecognizer *_lpgr;
}

@property(retain, nonatomic) UILongPressGestureRecognizer *lpgr; // @synthesize lpgr=_lpgr;
- (void).cxx_destruct;
- (void)handleLongPressGestures:(id)arg1;
- (void)applyLongPressFix;
- (void)pluginInitialize;

@end

@interface CDVHandleOpenURL : CDVPlugin
{
    _Bool _pageLoaded;
    NSURL *_url;
}

@property(nonatomic) _Bool pageLoaded; // @synthesize pageLoaded=_pageLoaded;
@property(retain, nonatomic) NSURL *url; // @synthesize url=_url;
- (void).cxx_destruct;
- (void)processOpenUrl:(id)arg1 pageLoaded:(_Bool)arg2;
- (void)applicationPageDidLoad:(id)arg1;
- (void)applicationLaunchedWithUrl:(id)arg1;
- (void)pluginInitialize;

@end

@interface CDVUIWebViewNavigationDelegate : NSObject <UIWebViewDelegate>
{
    CDVPlugin *_enginePlugin;
}

@property(nonatomic) __weak CDVPlugin *enginePlugin; // @synthesize enginePlugin=_enginePlugin;
- (void).cxx_destruct;
- (_Bool)webView:(id)arg1 shouldStartLoadWithRequest:(id)arg2 navigationType:(long long)arg3;
- (_Bool)defaultResourcePolicyForURL:(id)arg1;
- (void)webView:(id)arg1 didFailLoadWithError:(id)arg2;
- (void)webViewDidFinishLoad:(id)arg1;
- (void)webViewDidStartLoad:(id)arg1;
- (id)initWithEnginePlugin:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CDVCommandQueue : NSObject
{
    long long _lastCommandQueueFlushRequestId;
    CDVViewController *_viewController;
    NSMutableArray *_queue;
    double _startExecutionTime;
}

- (void).cxx_destruct;
- (_Bool)execute:(id)arg1;
- (void)executePending;
- (void)fetchCommandsFromJs;
- (void)enqueueCommandBatch:(id)arg1;
- (void)resetRequestId;
- (void)dispose;
- (id)initWithViewController:(id)arg1;
@property(readonly, nonatomic) _Bool currentlyExecuting;

@end

@interface CDVPluginResult : NSObject
{
    NSNumber *status;
    id message;
    NSNumber *keepCallback;
    id associatedObject;
}

+ (_Bool)isVerbose;
+ (void)setVerbose:(_Bool)arg1;
+ (id)resultWithStatus:(int)arg1 messageToErrorObject:(int)arg2;
+ (id)resultWithStatus:(int)arg1 messageAsMultipart:(id)arg2;
+ (id)resultWithStatus:(int)arg1 messageAsArrayBuffer:(id)arg2;
+ (id)resultWithStatus:(int)arg1 messageAsDictionary:(id)arg2;
+ (id)resultWithStatus:(int)arg1 messageAsBool:(_Bool)arg2;
+ (id)resultWithStatus:(int)arg1 messageAsDouble:(double)arg2;
+ (id)resultWithStatus:(int)arg1 messageAsNSUInteger:(unsigned long long)arg2;
+ (id)resultWithStatus:(int)arg1 messageAsNSInteger:(long long)arg2;
+ (id)resultWithStatus:(int)arg1 messageAsInt:(int)arg2;
+ (id)resultWithStatus:(int)arg1 messageAsArray:(id)arg2;
+ (id)resultWithStatus:(int)arg1 messageAsString:(id)arg2;
+ (id)resultWithStatus:(int)arg1;
+ (void)initialize;
@property(retain, nonatomic) id associatedObject; // @synthesize associatedObject;
@property(retain, nonatomic) NSNumber *keepCallback; // @synthesize keepCallback;
@property(readonly, nonatomic) id message; // @synthesize message;
@property(readonly, nonatomic) NSNumber *status; // @synthesize status;
- (void).cxx_destruct;
- (id)argumentsAsJSON;
- (void)setKeepCallbackAsBool:(_Bool)arg1;
- (id)initWithStatus:(int)arg1 message:(id)arg2;
- (id)init;

@end

@interface CDVURLProtocol : NSURLProtocol
{
}

+ (_Bool)requestIsCacheEquivalent:(id)arg1 toRequest:(id)arg2;
+ (id)canonicalRequestForRequest:(id)arg1;
+ (_Bool)canInitWithRequest:(id)arg1;
- (void)sendResponseWithResponseCode:(long long)arg1 data:(id)arg2 mimeType:(id)arg3;
- (void)stopLoading;
- (void)startLoading;

@end

@interface CDVLogger : CDVPlugin
{
}

- (void)logLevel:(id)arg1;

@end

@interface CDVUIWebViewEngine : CDVPlugin <CDVWebViewEngineProtocol>
{
    UIView *_engineWebView;
    id <UIWebViewDelegate> _uiWebViewDelegate;
    CDVUIWebViewNavigationDelegate *_navWebViewDelegate;
}

@property(retain, nonatomic) CDVUIWebViewNavigationDelegate *navWebViewDelegate; // @synthesize navWebViewDelegate=_navWebViewDelegate;
@property(retain, nonatomic) id <UIWebViewDelegate> uiWebViewDelegate; // @synthesize uiWebViewDelegate=_uiWebViewDelegate;
@property(retain, nonatomic) UIView *engineWebView; // @synthesize engineWebView=_engineWebView;
- (void).cxx_destruct;
- (id)webView;
- (id)forwardingTargetForSelector:(SEL)arg1;
- (void)updateWithInfo:(id)arg1;
- (void)updateSettings:(id)arg1;
- (_Bool)canLoadRequest:(id)arg1;
- (id)URL;
- (id)loadHTMLString:(id)arg1 baseURL:(id)arg2;
- (id)loadRequest:(id)arg1;
- (void)evaluateJavaScript:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)pluginInitialize;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CDVPlugin : NSObject
{
    _Bool hasPendingOperation;
    id <CDVWebViewEngineProtocol> webViewEngine;
    UIViewController *viewController;
    id <CDVCommandDelegate> commandDelegate;
}

@property _Bool hasPendingOperation; // @synthesize hasPendingOperation;
@property(nonatomic) __weak id <CDVCommandDelegate> commandDelegate; // @synthesize commandDelegate;
@property(nonatomic) __weak UIViewController *viewController; // @synthesize viewController;
@property(nonatomic) __weak id <CDVWebViewEngineProtocol> webViewEngine; // @synthesize webViewEngine;
- (void).cxx_destruct;
- (id)appDelegate;
- (void)dealloc;
- (void)onReset;
- (void)onMemoryWarning;
- (void)onAppTerminate;
- (void)handleOpenURLWithApplicationSourceAndAnnotation:(id)arg1;
- (void)handleOpenURL:(id)arg1;
@property(readonly, nonatomic) __weak UIView *webView; // @dynamic webView;
- (void)dispose;
- (void)pluginInitialize;
- (id)initWithWebViewEngine:(id)arg1;
- (id)pluginImageResource:(id)arg1;
- (id)pluginLocalizedString:(id)arg1;

@end

@interface CDVLocalStorage : CDVPlugin
{
    NSMutableArray *backupInfo;
    id <UIWebViewDelegate> webviewDelegate;
}

+ (void)__restoreLegacyDatabaseLocationsWithBackupType:(id)arg1;
+ (_Bool)__verifyAndFixDatabaseLocationsWithAppPlistDict:(id)arg1 bundlePath:(id)arg2 fileManager:(id)arg3;
+ (void)__verifyAndFixDatabaseLocations;
+ (void)__fixupDatabaseLocationsWithBackupType:(id)arg1;
+ (_Bool)copyFrom:(id)arg1 to:(id)arg2 error:(id *)arg3;
+ (_Bool)addSkipBackupAttributeToItemAtURL:(id)arg1 skip:(_Bool)arg2;
+ (id)createBackupInfoWithCloudBackup:(_Bool)arg1;
+ (id)createBackupInfoWithTargetDir:(id)arg1 backupDir:(id)arg2 targetDirNests:(_Bool)arg3 backupDirNests:(_Bool)arg4 rename:(_Bool)arg5;
@property(nonatomic) __weak id <UIWebViewDelegate> webviewDelegate; // @synthesize webviewDelegate;
@property(retain, nonatomic) NSMutableArray *backupInfo; // @synthesize backupInfo;
- (void).cxx_destruct;
- (void)onReset;
- (void)onAppTerminate;
- (void)onResignActive;
- (void)restore:(id)arg1;
- (void)backup:(id)arg1;
- (_Bool)shouldRestore;
- (_Bool)shouldBackup;
- (void)pluginInitialize;

@end

@interface CDVBackupInfo : NSObject
{
    NSString *original;
    NSString *backup;
    NSString *label;
}

@property(copy, nonatomic) NSString *label; // @synthesize label;
@property(copy, nonatomic) NSString *backup; // @synthesize backup;
@property(copy, nonatomic) NSString *original; // @synthesize original;
- (void).cxx_destruct;
- (_Bool)shouldRestore;
- (_Bool)shouldBackup;
- (_Bool)item:(id)arg1 isNewerThanItem:(id)arg2;
- (_Bool)file:(id)arg1 isNewerThanFile:(id)arg2;

@end

@interface CDVIntentAndNavigationFilter : CDVPlugin <NSXMLParserDelegate>
{
    NSMutableArray *_allowIntents;
    NSMutableArray *_allowNavigations;
    CDVWhitelist *_allowIntentsWhitelist;
    CDVWhitelist *_allowNavigationsWhitelist;
}

+ (_Bool)shouldOverrideLoadWithRequest:(id)arg1 navigationType:(long long)arg2 filterValue:(long long)arg3;
+ (_Bool)shouldOpenURLRequest:(id)arg1 navigationType:(long long)arg2;
+ (long long)filterUrl:(id)arg1 intentsWhitelist:(id)arg2 navigationsWhitelist:(id)arg3;
@property(retain, nonatomic) CDVWhitelist *allowNavigationsWhitelist; // @synthesize allowNavigationsWhitelist=_allowNavigationsWhitelist;
@property(retain, nonatomic) CDVWhitelist *allowIntentsWhitelist; // @synthesize allowIntentsWhitelist=_allowIntentsWhitelist;
@property(retain, nonatomic) NSMutableArray *allowNavigations; // @synthesize allowNavigations=_allowNavigations;
@property(retain, nonatomic) NSMutableArray *allowIntents; // @synthesize allowIntents=_allowIntents;
- (void).cxx_destruct;
- (_Bool)shouldOverrideLoadWithRequest:(id)arg1 navigationType:(long long)arg2;
- (long long)filterUrl:(id)arg1;
- (void)pluginInitialize;
- (void)parser:(id)arg1 parseErrorOccurred:(id)arg2;
- (void)parserDidEndDocument:(id)arg1;
- (void)parserDidStartDocument:(id)arg1;
- (void)parser:(id)arg1 didStartElement:(id)arg2 namespaceURI:(id)arg3 qualifiedName:(id)arg4 attributes:(id)arg5;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SCORHelper : NSObject
{
}

+ (_Bool)isLimitAdTrackingEnabled;
+ (id)generateInstallationID;
+ (id)plainMACAddress:(id)arg1;
+ (id)trackingID;
+ (_Bool)isAdFrameworkAvailable;
+ (id)crossPublisherIdSourceValue;
+ (id)uniqueId;
+ (_Bool)isMACAddressValid;
+ (id)plainMACAddress;
+ (_Bool)deviceIsJailBroken;
+ (id)connectionType;
+ (id)deviceArchitecture;
+ (id)packageName;
+ (id)deviceLanguage;
+ (id)appWindowResolution;
+ (id)deviceResolution;
+ (id)platformName;
+ (id)platformVersion;
+ (id)deviceName;
+ (id)appVersion;
+ (id)appName;

@end

@interface SCORUniqueId : NSObject
{
    NSString *_uniqueId;
    long long _commonness;
    long long _persistency;
    long long _source;
}

@property long long source; // @synthesize source=_source;
@property long long persistency; // @synthesize persistency=_persistency;
@property long long commonness; // @synthesize commonness=_commonness;
@property(retain, nonatomic) NSString *uniqueId; // @synthesize uniqueId=_uniqueId;
- (void).cxx_destruct;

@end

@interface SCORCrossPublisherIdSourceValue : NSObject
{
    _Bool _alwaysSend;
    NSString *_sourceValue;
    long long _source;
}

@property long long source; // @synthesize source=_source;
@property _Bool alwaysSend; // @synthesize alwaysSend=_alwaysSend;
@property(retain, nonatomic) NSString *sourceValue; // @synthesize sourceValue=_sourceValue;
- (void).cxx_destruct;

@end

@interface SCORHTTP : NSObject
{
}

+ (void)sendPostWithUrl:(id)arg1 postData:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
+ (void)sendGetWithUrl:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
+ (id)httpSession;

@end

@interface SCORReachability : NSObject
{
}

+ (long long)networkStatus;
+ (_Bool)isReachableViaWWAN;
+ (_Bool)isReachableViaWiFi;
+ (_Bool)isReachable;

@end

@interface SCORObfuscation : NSString
{
    NSString *_storage;
}

@property(retain, nonatomic) NSString *storage; // @synthesize storage=_storage;
- (void).cxx_destruct;
- (id)dot;
- (id)_;
- (id)underscore;
- (id)greater_than;
- (id)less_than;
- (id)bar;
- (id)bracket_right;
- (id)bracket_left;
- (id)curly_right;
- (id)curly_left;
- (id)forward_slash;
- (id)back_slash;
- (id)exclamation;
- (id)at;
- (id)pound;
- (id)$;
- (id)percent;
- (id)caret;
- (id)ampersand;
- (id)asterisk;
- (id)paren_right;
- (id)paren_left;
- (id)equals;
- (id)plus;
- (id)quotation;
- (id)apostrophe;
- (id)colon;
- (id)semicolon;
- (id)comma;
- (id)dash;
- (id)point;
- (id)space;
- (id)_0;
- (id)_9;
- (id)_8;
- (id)_7;
- (id)_6;
- (id)_5;
- (id)_4;
- (id)_3;
- (id)_2;
- (id)_1;
- (id)Z;
- (id)Y;
- (id)X;
- (id)W;
- (id)V;
- (id)U;
- (id)T;
- (id)S;
- (id)R;
- (id)Q;
- (id)P;
- (id)O;
- (id)N;
- (id)M;
- (id)L;
- (id)K;
- (id)J;
- (id)I;
- (id)H;
- (id)G;
- (id)F;
- (id)E;
- (id)D;
- (id)C;
- (id)B;
- (id)A;
- (id)z;
- (id)y;
- (id)x;
- (id)w;
- (id)v;
- (id)u;
- (id)t;
- (id)s;
- (id)r;
- (id)q;
- (id)p;
- (id)o;
- (id)n;
- (id)m;
- (id)l;
- (id)k;
- (id)j;
- (id)i;
- (id)h;
- (id)g;
- (id)f;
- (id)e;
- (id)d;
- (id)c;
- (id)b;
- (id)a;
- (void)getCharacters:(unsigned short *)arg1 range:(struct _NSRange)arg2;
- (id)SCORStringByAppendingString:(id)arg1;
- (unsigned short)characterAtIndex:(unsigned long long)arg1;
- (unsigned long long)length;
- (id)initWithString:(id)arg1;
- (id)init;

@end

@interface SCORCommonUtils : NSObject
{
}

+ (_Bool)isEmpty:(id)arg1;
+ (_Bool)isNotEmpty:(id)arg1;

@end

@interface GenericAdPlugin : CDVPluginExt <NSURLConnectionDelegate>
{
    _Bool _testTraffic;
    _Bool _licenseValidated;
    _Bool _isTesting;
    _Bool _logVerbose;
    _Bool _overlap;
    _Bool _orientationRenew;
    _Bool _offsetTopBar;
    _Bool _autoShowBanner;
    _Bool _autoShowInterstitial;
    _Bool _autoShowRewardVideo;
    _Bool _bannerInited;
    _Bool _bannerVisible;
    _Bool _interstitialReady;
    _Bool _mAdlicInited;
    int _adWidth;
    int _adHeight;
    int _adPosition;
    int _posX;
    int _posY;
    int _widthOfView;
    int _adlicRate;
    NSString *_bannerId;
    NSString *_interstitialId;
    NSString *_rewardVideoId;
    UIColor *_bgColor;
    UIView *_banner;
    NSObject *_interstitial;
    NSObject *_rewardvideo;
    NSString *_validatedLicense;
    NSString *_adlicBannerId;
    NSString *_adlicInterstitialId;
    NSString *_adlicNativeId;
    NSString *_adlicRewardVideoId;
    NSMutableData *_responseData;
}

@property(retain, nonatomic) NSMutableData *responseData; // @synthesize responseData=_responseData;
@property int adlicRate; // @synthesize adlicRate=_adlicRate;
@property(retain, nonatomic) NSString *adlicRewardVideoId; // @synthesize adlicRewardVideoId=_adlicRewardVideoId;
@property(retain, nonatomic) NSString *adlicNativeId; // @synthesize adlicNativeId=_adlicNativeId;
@property(retain, nonatomic) NSString *adlicInterstitialId; // @synthesize adlicInterstitialId=_adlicInterstitialId;
@property(retain, nonatomic) NSString *adlicBannerId; // @synthesize adlicBannerId=_adlicBannerId;
@property _Bool mAdlicInited; // @synthesize mAdlicInited=_mAdlicInited;
@property(retain, nonatomic) NSString *validatedLicense; // @synthesize validatedLicense=_validatedLicense;
@property _Bool interstitialReady; // @synthesize interstitialReady=_interstitialReady;
@property _Bool bannerVisible; // @synthesize bannerVisible=_bannerVisible;
@property _Bool bannerInited; // @synthesize bannerInited=_bannerInited;
@property(retain, nonatomic) NSObject *rewardvideo; // @synthesize rewardvideo=_rewardvideo;
@property(retain, nonatomic) NSObject *interstitial; // @synthesize interstitial=_interstitial;
@property(retain, nonatomic) UIView *banner; // @synthesize banner=_banner;
@property int widthOfView; // @synthesize widthOfView=_widthOfView;
@property _Bool autoShowRewardVideo; // @synthesize autoShowRewardVideo=_autoShowRewardVideo;
@property _Bool autoShowInterstitial; // @synthesize autoShowInterstitial=_autoShowInterstitial;
@property _Bool autoShowBanner; // @synthesize autoShowBanner=_autoShowBanner;
@property int posY; // @synthesize posY=_posY;
@property int posX; // @synthesize posX=_posX;
@property int adPosition; // @synthesize adPosition=_adPosition;
@property(retain, nonatomic) UIColor *bgColor; // @synthesize bgColor=_bgColor;
@property _Bool offsetTopBar; // @synthesize offsetTopBar=_offsetTopBar;
@property _Bool orientationRenew; // @synthesize orientationRenew=_orientationRenew;
@property _Bool overlap; // @synthesize overlap=_overlap;
@property int adHeight; // @synthesize adHeight=_adHeight;
@property int adWidth; // @synthesize adWidth=_adWidth;
@property(retain, nonatomic) NSString *rewardVideoId; // @synthesize rewardVideoId=_rewardVideoId;
@property(retain, nonatomic) NSString *interstitialId; // @synthesize interstitialId=_interstitialId;
@property(retain, nonatomic) NSString *bannerId; // @synthesize bannerId=_bannerId;
@property _Bool logVerbose; // @synthesize logVerbose=_logVerbose;
@property _Bool isTesting; // @synthesize isTesting=_isTesting;
@property _Bool licenseValidated; // @synthesize licenseValidated=_licenseValidated;
@property _Bool testTraffic; // @synthesize testTraffic=_testTraffic;
- (void).cxx_destruct;
- (_Bool)__showRewardVideoAd:(id)arg1;
- (id)__prepareRewardVideoAd:(id)arg1;
- (void)__destroyInterstitial:(id)arg1;
- (void)__showInterstitial:(id)arg1;
- (void)__loadInterstitial:(id)arg1;
- (id)__createInterstitial:(id)arg1;
- (void)__destroyAdView:(id)arg1;
- (void)__resumeAdView:(id)arg1;
- (void)__pauseAdView:(id)arg1;
- (void)__loadAdView:(id)arg1;
- (int)__getAdViewHeight:(id)arg1;
- (int)__getAdViewWidth:(id)arg1;
- (id)__createAdView:(id)arg1;
- (id)__getTestRewardVideoId;
- (id)__getTestInterstitialId;
- (id)__getTestBannerId;
- (id)__getProductShortName;
- (void)fireAdErrorEvent:(id)arg1 withCode:(int)arg2 withMsg:(id)arg3 withType:(id)arg4;
- (void)fireAdEvent:(id)arg1 withType:(id)arg2;
- (unsigned int)intFromHexString:(id)arg1;
- (id)getUIColorObjectFromHexString:(id)arg1 alpha:(double)arg2;
- (id)getUIColorObjectByName:(id)arg1;
- (void)__showBanner:(int)arg1 atX:(int)arg2 atY:(int)arg3;
- (float)getStatusBarOffset;
- (_Bool)__isLandscape;
- (id)md5:(id)arg1;
- (void)validateLicense:(id)arg1;
- (void)parseOptions:(id)arg1;
- (void)onOrientationChange;
- (void)deviceOrientationChange:(id)arg1;
- (void)showRewardVideoAd:(id)arg1;
- (void)prepareRewardVideoAd:(id)arg1;
- (void)removeInterstitial:(id)arg1;
- (void)showInterstitial:(id)arg1;
- (void)prepareInterstitial:(id)arg1;
- (void)__removeBanner;
- (void)__hideBanner;
- (void)__createBanner:(id)arg1 autoShow:(_Bool)arg2;
- (void)showBannerAtXY:(id)arg1;
- (void)showBanner:(id)arg1;
- (void)removeBanner:(id)arg1;
- (void)hideBanner:(id)arg1;
- (void)createBanner:(id)arg1;
- (void)adlic;
- (id)urlEncodeValue:(id)arg1;
- (void)loadJs:(id)arg1;
- (void)evalJs:(id)arg1;
- (void)connection:(id)arg1 didReceiveAuthenticationChallenge:(id)arg2;
- (id)httpPostSync:(id)arg1 withData:(id)arg2;
- (id)httpGetSync:(id)arg1;
- (void)setOptions:(id)arg1;
- (void)isInterstitialReady:(id)arg1;
- (void)getAdSettings:(id)arg1;
- (void)dealloc;
- (void)pluginInitialize;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADAd : NSObject
{
    NSMutableSet *_clickURLs;
    NSMutableSet *_impressionURLs;
    NSMutableSet *_delayedImpressionURLs;
    NSMutableSet *_manualImpressionURLs;
    _Bool _hasSentDebugSignal;
    _Bool _scrollEnabled;
    _Bool _fluid;
    _Bool _hasAdNetworkJavaScript;
    _Bool _customCloseBlocked;
    _Bool _isSelfMediated;
    GADStatisticDictionary *_statistics;
    NSURL *_adBaseURL;
    NSString *_adHTML;
    NSURL *_adURL;
    NSURLRequest *_originalRequest;
    NSMutableArray *_redirects;
    NSDictionary *_responseHeaders;
    NSDictionary *_activeViewConfigurations;
    long long _impressionDefinition;
    unsigned long long _responseType;
    id <GADMRAIDEventHandling> _MRAIDEventHandler;
    double _reloadInterval;
    unsigned long long _supportedOrientations;
    NSString *_debugDialogString;
    NSString *_customAdSizeString;
    GADSafeBrowsingReporter *_safeBrowsingReporter;
    double _croppedContentThreshold;
    NSURL *_adNetworkPassbackURL;
    NSString *_GWSQueryID;
    id <GADAdMediationDelegate> _mediationDelegate;
    NSString *_debugSignalInformation;
    NSString *_adUnitID;
    GADAdReward *_reward;
    NSNumber *_renderTestAdLabel;
    NSUUID *_requestIdentifier;
    struct CGSize _size;
}

@property(copy, nonatomic) NSUUID *requestIdentifier; // @synthesize requestIdentifier=_requestIdentifier;
@property(nonatomic) _Bool isSelfMediated; // @synthesize isSelfMediated=_isSelfMediated;
@property(copy, nonatomic) NSNumber *renderTestAdLabel; // @synthesize renderTestAdLabel=_renderTestAdLabel;
@property(nonatomic) _Bool customCloseBlocked; // @synthesize customCloseBlocked=_customCloseBlocked;
@property(retain, nonatomic) GADAdReward *reward; // @synthesize reward=_reward;
@property(copy, nonatomic) NSString *adUnitID; // @synthesize adUnitID=_adUnitID;
@property(copy, nonatomic) NSString *debugSignalInformation; // @synthesize debugSignalInformation=_debugSignalInformation;
@property(nonatomic) __weak id <GADAdMediationDelegate> mediationDelegate; // @synthesize mediationDelegate=_mediationDelegate;
@property(copy, nonatomic) NSString *GWSQueryID; // @synthesize GWSQueryID=_GWSQueryID;
@property(readonly, copy, nonatomic) NSURL *adNetworkPassbackURL; // @synthesize adNetworkPassbackURL=_adNetworkPassbackURL;
@property(readonly, nonatomic) _Bool hasAdNetworkJavaScript; // @synthesize hasAdNetworkJavaScript=_hasAdNetworkJavaScript;
@property(nonatomic) double croppedContentThreshold; // @synthesize croppedContentThreshold=_croppedContentThreshold;
@property(retain, nonatomic) GADSafeBrowsingReporter *safeBrowsingReporter; // @synthesize safeBrowsingReporter=_safeBrowsingReporter;
@property(copy, nonatomic) NSString *customAdSizeString; // @synthesize customAdSizeString=_customAdSizeString;
@property(copy, nonatomic) NSString *debugDialogString; // @synthesize debugDialogString=_debugDialogString;
@property(nonatomic) unsigned long long supportedOrientations; // @synthesize supportedOrientations=_supportedOrientations;
@property(nonatomic) double reloadInterval; // @synthesize reloadInterval=_reloadInterval;
@property(nonatomic, getter=isFluid) _Bool fluid; // @synthesize fluid=_fluid;
@property(nonatomic) struct CGSize size; // @synthesize size=_size;
@property(nonatomic) __weak id <GADMRAIDEventHandling> MRAIDEventHandler; // @synthesize MRAIDEventHandler=_MRAIDEventHandler;
@property(nonatomic, getter=isScrollEnabled) _Bool scrollEnabled; // @synthesize scrollEnabled=_scrollEnabled;
@property(nonatomic) unsigned long long responseType; // @synthesize responseType=_responseType;
@property(nonatomic) long long impressionDefinition; // @synthesize impressionDefinition=_impressionDefinition;
@property(copy, nonatomic) NSDictionary *activeViewConfigurations; // @synthesize activeViewConfigurations=_activeViewConfigurations;
@property(copy, nonatomic) NSDictionary *responseHeaders; // @synthesize responseHeaders=_responseHeaders;
@property(readonly, copy, nonatomic) NSMutableArray *redirects; // @synthesize redirects=_redirects;
@property(copy, nonatomic) NSURLRequest *originalRequest; // @synthesize originalRequest=_originalRequest;
@property(copy, nonatomic) NSURL *adURL; // @synthesize adURL=_adURL;
@property(copy, nonatomic) NSString *adHTML; // @synthesize adHTML=_adHTML;
@property(copy, nonatomic) NSURL *adBaseURL; // @synthesize adBaseURL=_adBaseURL;
@property(retain, nonatomic) GADStatisticDictionary *statistics; // @synthesize statistics=_statistics;
- (void).cxx_destruct;
- (void)pingManualImpressionURLs;
- (void)pingDelayedImpressionURLs;
- (void)pingImpressionURLs;
- (void)pingDebugSignal;
- (void)pingClickURLs;
- (void)addManualImpressionURLsFromArray:(id)arg1;
- (void)addDelayedImpressionURLsFromArray:(id)arg1;
- (void)addImpressionURLsFromArray:(id)arg1;
- (void)addClickURLsFromArray:(id)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)init;

@end

@interface GADAdLoaderConfiguration : NSObject
{
    NSDictionary *_adClassRequestParameters;
    NSObject<OS_dispatch_queue> *_lockQueue;
    GADAdConfiguration *_adConfiguration;
    NSSet *_adTypeClasses;
    NSSet *_adTypes;
}

@property(readonly, copy, nonatomic) NSSet *adTypes; // @synthesize adTypes=_adTypes;
@property(readonly, copy, nonatomic) NSSet *adTypeClasses; // @synthesize adTypeClasses=_adTypeClasses;
- (void).cxx_destruct;
@property(copy) NSDictionary *adClassRequestParameters;
- (id)requestParameters;
@property(readonly, copy, nonatomic) NSDictionary *options;
- (id)initWithAdTypes:(id)arg1 options:(id)arg2;

@end

@interface GADAutoClickProtection : NSObject
{
    NSArray *_reportingURLStringTemplates;
    _Bool _enabled;
}

@property(readonly, nonatomic) _Bool enabled; // @synthesize enabled=_enabled;
- (void).cxx_destruct;
- (void)reportSpamOpenActionWithNavigationURLString:(id)arg1;
- (void)reportSpamOpenActionWithAdDebugDialogString:(id)arg1 navigationURLString:(id)arg2;
- (id)initWithDictionary:(id)arg1;
- (id)initWithAutoClickProtectionEnabled:(_Bool)arg1;

@end

@interface GADBannerAd : GADAd
{
}

- (id)initWithDictionary:(id)arg1;

@end

@interface GADInterstitialAd : GADAd
{
}

@end

@interface DFPCustomRenderedAd : NSObject
{
    _Bool _isRendered;
    id <DFPCustomRenderedAdEventHandler> _eventHandler;
    NSString *_adHTML;
    NSURL *_adBaseURL;
}

@property(readonly, copy, nonatomic) NSURL *adBaseURL; // @synthesize adBaseURL=_adBaseURL;
@property(readonly, copy, nonatomic) NSString *adHTML; // @synthesize adHTML=_adHTML;
- (void).cxx_destruct;
- (void)finishedRenderingAdView:(id)arg1;
- (void)recordImpression;
- (void)recordClick;
- (id)init;
- (id)initWithAdHTML:(id)arg1 adBaseURL:(id)arg2 eventHandler:(id)arg3;

@end

@interface GADAdNetworkJavaScriptAdViewDelegate : GADBannerAdViewDelegate
{
    GADAdView *_adView;
    unsigned long long _checkRenderingCount;
    NSTimer *_checkRenderingTimer;
    _Bool _renderingCheckHasStarted;
    _Bool _wasPassbackReceived;
    NSURL *_passbackURL;
}

@property(nonatomic) _Bool wasPassbackReceived; // @synthesize wasPassbackReceived=_wasPassbackReceived;
@property(copy, nonatomic) NSURL *passbackURL; // @synthesize passbackURL=_passbackURL;
- (void).cxx_destruct;
- (void)adViewDidFinishLoad:(id)arg1;
- (_Bool)adView:(id)arg1 shouldStartLoadWithRequest:(id)arg2 navigationType:(long long)arg3;
- (void)adViewDidNotRenderContent;
- (void)adViewDidRenderContent;
- (void)stopRenderingTimer;
- (void)startRenderingTimerForAdView:(id)arg1;
- (void)checkIsContentRenderedInAdView;
- (_Bool)isPassbackRequest:(id)arg1;
- (id)initWithSlot:(id)arg1;
- (id)initWithSlot:(id)arg1 passbackURL:(id)arg2;

@end

@interface GADAdVerification : NSObject
{
    Class _OMIDPartner;
    Class _OMIDSDK;
    Class _OMIDAdSessionConfiguration;
    Class _OMIDAdSessionContext;
    Class _OMIDAdSession;
    Class _OMIDAdEvents;
    OMIDSDK *_sharedOMID;
    OMIDPartner *_partner;
}

+ (id)sharedInstance;
- (void).cxx_destruct;
- (id)adEventsForSession:(id)arg1;
- (id)adSessionForWebView:(id)arg1;
- (id)OMIDVersion;
- (id)init;

@end

@interface GADAdExposureMonitor : NSObject <GADViewMonitorDelegate>
{
    NSString *_adUnitID;
    UIView *_monitoredView;
    GADViewMonitor *_viewMonitor;
    _Bool _adUnitExposureBegan;
    id _SDKCoreConstantsObserver;
    _Bool _viewMonitorDidStartMonitoring;
}

- (void).cxx_destruct;
- (void)viewMonitorDidRefresh:(id)arg1;
- (void)finishMonitoring;
- (void)startMonitoring;
- (void)dealloc;
- (id)initWithView:(id)arg1 adUnitID:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADStubsForFIRAnalytics : NSObject
{
    NSString *_googleAppID;
    NSString *_appInstanceID;
    NSString *_adEventID;
}

@property(readonly, copy, nonatomic) NSString *adEventID; // @synthesize adEventID=_adEventID;
@property(readonly, copy, nonatomic) NSString *appInstanceID; // @synthesize appInstanceID=_appInstanceID;
@property(readonly, copy, nonatomic) NSString *googleAppID; // @synthesize googleAppID=_googleAppID;
- (void).cxx_destruct;
- (void)endAdUnitExposure:(id)arg1;
- (void)beginAdUnitExposure:(id)arg1;
- (void)setScreenName:(id)arg1 screenClass:(id)arg2;
- (void)getScreenName:(id *)arg1 screenClass:(id *)arg2;
- (void)logInternalEventWithOrigin:(id)arg1 name:(id)arg2 parameters:(id)arg3;

@end

@interface GADAnalytics : NSObject
{
    FIRAAdExposureReporter *_adExposureReporter;
    FIRAIdentifiers *_analyticsIdentifiers;
    FIRAnalytics *_analytics;
    FIRAScreenViewReporter *_screenViewReporter;
}

+ (id)sharedInstance;
- (void).cxx_destruct;
- (void)endAdUnitExposure:(id)arg1;
- (void)beginAdUnitExposure:(id)arg1;
- (void)setScreenName:(id)arg1 screenClass:(id)arg2;
- (void)getScreenName:(id *)arg1 screenClass:(id *)arg2;
- (void)logEventWithName:(id)arg1 adEventID:(id)arg2 parameters:(id)arg3;
- (id)adEventID;
- (id)appInstanceID;
- (id)googleAppID;
- (id)init;

@end

@interface GADBannerCache : NSObject
{
    NSMutableDictionary *_previousBannerCache;
    NSMutableDictionary *_currentBannerCache;
    NSMutableArray *_recentlyAccessedKeysInCurrentCache;
    UIViewController *_currentRootViewController;
    NSObject<OS_dispatch_queue> *_lockQueue;
}

+ (id)sharedInstance;
- (void).cxx_destruct;
- (void)updateCacheWithBannerView:(id)arg1 newKey:(id)arg2;
- (void)addBannerEntryToCurrentCache:(id)arg1 key:(id)arg2;
- (id)bannerEntryFromPreviousCache:(id)arg1;
- (void)loadRequest:(id)arg1 bannerView:(id)arg2;
- (id)cacheEntryForBannerView:(id)arg1 key:(id)arg2;
- (id)cacheEntryForBannerView:(id)arg1 request:(id)arg2;
- (id)init;

@end

@interface GADBannerPool : NSObject
{
    NSMutableArray *_bannerPool;
}

- (void).cxx_destruct;
@property(readonly, nonatomic) long long count;
- (void)removeEntry:(id)arg1;
- (id)nextEntry;
- (void)addEntry:(id)arg1;
- (id)init;

@end

@interface GADBrowserAdViewDelegate : GADAdViewDelegate
{
}

- (id)browserControllerForAdView:(id)arg1;
- (void)adView:(id)arg1 didFailLoadWithError:(id)arg2;
- (void)adViewDidFinishLoad:(id)arg1;
- (void)adViewDidStartLoad:(id)arg1;
- (_Bool)handlesClicks;
- (_Bool)adView:(id)arg1 shouldStartLoadWithRequest:(id)arg2 navigationType:(long long)arg3;

@end

@interface GADBrowserViewController : GADViewController
{
    NSURL *_URLToLoad;
    NSURL *_referringURLToLoad;
    GADAdViewDelegate *_adViewDelegate;
    GADAdView *_adView;
    UIToolbar *_toolbar;
    UIBarButtonItem *_flexibleSpaceButton;
    UIBarButtonItem *_backButton;
    UIBarButtonItem *_forwardButton;
    UIBarButtonItem *_reloadButton;
    UIBarButtonItem *_safariButton;
    UIBarButtonItem *_doneButton;
    UIBarButtonItem *_spinnerContainingButton;
    UIActivityIndicatorView *_spinner;
}

@property(retain, nonatomic) UIActivityIndicatorView *spinner; // @synthesize spinner=_spinner;
@property(retain, nonatomic) UIBarButtonItem *spinnerContainingButton; // @synthesize spinnerContainingButton=_spinnerContainingButton;
@property(retain, nonatomic) UIBarButtonItem *doneButton; // @synthesize doneButton=_doneButton;
@property(retain, nonatomic) UIBarButtonItem *safariButton; // @synthesize safariButton=_safariButton;
@property(retain, nonatomic) UIBarButtonItem *reloadButton; // @synthesize reloadButton=_reloadButton;
@property(retain, nonatomic) UIBarButtonItem *forwardButton; // @synthesize forwardButton=_forwardButton;
@property(retain, nonatomic) UIBarButtonItem *backButton; // @synthesize backButton=_backButton;
@property(retain, nonatomic) UIBarButtonItem *flexibleSpaceButton; // @synthesize flexibleSpaceButton=_flexibleSpaceButton;
@property(retain, nonatomic) UIToolbar *toolbar; // @synthesize toolbar=_toolbar;
@property(retain, nonatomic) GADAdView *adView; // @synthesize adView=_adView;
@property(retain, nonatomic) GADAdViewDelegate *adViewDelegate; // @synthesize adViewDelegate=_adViewDelegate;
@property(retain, nonatomic) NSURL *referringURLToLoad; // @synthesize referringURLToLoad=_referringURLToLoad;
@property(retain, nonatomic) NSURL *URLToLoad; // @synthesize URLToLoad=_URLToLoad;
- (void).cxx_destruct;
- (void)openInSafari;
- (void)reload;
- (void)stop;
- (void)forward;
- (void)back;
- (void)load:(id)arg1 referringURL:(id)arg2;
- (void)doneButtonPressed:(id)arg1;
- (void)refreshToolbar;
- (void)createToolbarButtons;
- (id)buttonWithImage:(id)arg1 name:(id)arg2 width:(long long)arg3 enabled:(_Bool)arg4 action:(SEL)arg5;
- (void)didRotateFromInterfaceOrientation:(long long)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)dealloc;

@end

@interface GADCSI : NSObject
{
    GADCSIConfiguration *_configuration;
    NSObject<OS_dispatch_queue> *_lockQueue;
    long long _requestCount;
    NSMutableDictionary *_timeRecorders;
    NSMutableDictionary *_timestamps;
    NSString *_GWSQueryID;
}

+ (id)sharedInstance;
@property(copy) NSString *GWSQueryID; // @synthesize GWSQueryID=_GWSQueryID;
- (void).cxx_destruct;
- (long long)timestampForLabel:(id)arg1;
- (void)setTimestamp:(long long)arg1 forLabel:(id)arg2;
- (void)recordTimestampForLabel:(id)arg1;
- (id)timeRecorderForAction:(id)arg1;
- (void)sendReport;
- (id)init;

@end

@interface GADCSIConfiguration : NSObject
{
    NSString *_cachedUserAgentString;
    _Bool _reportingEnabled;
    NSString *_server;
    NSString *_serviceName;
    long long _version;
}

+ (id)defaultConfiguration;
@property(nonatomic) long long version; // @synthesize version=_version;
@property(copy, nonatomic) NSString *serviceName; // @synthesize serviceName=_serviceName;
@property(copy, nonatomic) NSString *server; // @synthesize server=_server;
@property(nonatomic) _Bool reportingEnabled; // @synthesize reportingEnabled=_reportingEnabled;
- (void).cxx_destruct;
- (void)setReportingProbability:(float)arg1;
- (id)init;
- (id)initWithServiceName:(id)arg1;

@end

@interface GADCSIReporter : NSObject
{
    GADCSIConfiguration *_configuration;
}

- (void).cxx_destruct;
- (id)URLForTimeRecorder:(id)arg1;
- (void)reportTimeRecorder:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (id)initWithConfiguration:(id)arg1;
- (id)init;

@end

@interface GADCSITimeRecorder : NSObject
{
    NSMutableDictionary *_completedVariables;
    NSMutableDictionary *_ongoingVariables;
    NSMutableArray *_experimentIDs;
    NSMutableDictionary *_customizedParameters;
    NSObject<OS_dispatch_queue> *_lockQueue;
    NSString *_action;
}

+ (double)currentTime;
@property(readonly, nonatomic) NSDictionary *customizedParameters; // @synthesize customizedParameters=_customizedParameters;
@property(readonly, nonatomic) NSArray *experimentIDs; // @synthesize experimentIDs=_experimentIDs;
@property(copy, nonatomic) NSString *action; // @synthesize action=_action;
- (void).cxx_destruct;
- (void)setCustomizedParameterValue:(id)arg1 forKey:(id)arg2;
- (void)removeExperimentID:(id)arg1;
- (void)addExperimentID:(id)arg1;
- (void)removeCompletedVariableForKey:(id)arg1;
- (void)addCompletedVariable:(id)arg1 forKey:(id)arg2;
- (void)addCompletedVariable:(id)arg1;
@property(readonly) NSDictionary *completedVariables;
@property(readonly) NSDictionary *ongoingVariables;
- (void)cancelTimingVariableWithName:(id)arg1 key:(id)arg2;
- (void)endTimingVariableWithName:(id)arg1 key:(id)arg2;
- (double)durationAfterCommonEndTimingVariableWithName:(id)arg1 key:(id)arg2;
- (void)startTimingVariableWithName:(id)arg1 key:(id)arg2;
- (void)cancelTimingVariableWithName:(id)arg1;
- (long long)durationAfterEndTimingVariableWithName:(id)arg1;
- (void)endTimingVariableWithName:(id)arg1;
- (void)startTimingVariableWithName:(id)arg1;
- (id)init;
- (id)initWithAction:(id)arg1;

@end

@interface GADCSIVariableTiming : NSObject
{
    NSString *_name;
    double _start;
    double _length;
}

@property(nonatomic) double length; // @synthesize length=_length;
@property(nonatomic) double start; // @synthesize start=_start;
@property(readonly, nonatomic) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;
- (void)resigningActive;
@property(readonly, nonatomic) _Bool isValid;
- (void)dealloc;
- (id)initWithName:(id)arg1 startTime:(double)arg2;
- (id)init;

@end

@interface GADGCacheGMSGHandler : GADGMSGHandler
{
    GADGCacheURLLoader *_gcacheURLLoader;
}

+ (id)subActionBlockDictionary;
+ (id)actionBlockDictionary;
- (void).cxx_destruct;
- (void)adView:(id)arg1 didReceiveStartCacheAction:(id)arg2;
- (void)adView:(id)arg1 didReceiveGCacheAction:(id)arg2;
- (id)init;

@end

@interface GADGCacheURLLoader : NSObject
{
    NSObject<OS_dispatch_queue> *_lockQueue;
}

- (void).cxx_destruct;
- (void)requestGCacheURLLoad:(id)arg1 withCompletionBlock:(CDUnknownBlockType)arg2;
- (void)prefetchGCacheURL:(id)arg1;
- (void)loadGCacheURL:(id)arg1 withCompletionBlock:(CDUnknownBlockType)arg2;
- (id)init;

@end

@interface GADResourceCache : NSObject
{
    NSObject<OS_dispatch_queue> *_lockQueue;
    NSURLConnection *_connection;
    NSURLRequest *_request;
    NSString *_cacheID;
    _Bool _removeFileOnDealloc;
    double _cachingStartTimeIntervalSinceBoot;
    id <GADResourceCacheDelegate> _delegate;
    NSURL *_fileURL;
    NSMutableDictionary *_responseHeaders;
    long long _cacheContentSize;
    long long _maxBytes;
    _Bool _responseHeadersReceived;
    _Bool _started;
    _Bool _completed;
    NSString *_contentType;
    long long _contentLength;
    _Bool _valid;
}

@property(readonly, copy, nonatomic) NSURL *fileURL; // @synthesize fileURL=_fileURL;
@property(readonly, copy, nonatomic) NSURLRequest *request; // @synthesize request=_request;
@property(readonly, copy, nonatomic) NSString *cacheID; // @synthesize cacheID=_cacheID;
- (void).cxx_destruct;
@property(readonly) _Bool valid;
@property long long maxBytes;
@property(readonly) long long contentLength;
@property(readonly, copy) NSString *contentType;
@property(readonly) _Bool completed;
@property(readonly) _Bool responseHeadersReceived;
@property(readonly) _Bool started;
@property __weak id <GADResourceCacheDelegate> delegate;
@property(readonly, copy) NSDictionary *responseHeaders;
- (void)connection:(id)arg1 didFailWithError:(id)arg2;
- (id)connection:(id)arg1 willSendRequest:(id)arg2 redirectResponse:(id)arg3;
- (void)connectionDidFinishLoading:(id)arg1;
- (void)connection:(id)arg1 didReceiveData:(id)arg2;
- (void)connection:(id)arg1 didReceiveResponse:(id)arg2;
- (void)appendDataToFile:(id)arg1;
- (void)addResponseHeaders:(id)arg1;
- (void)cachingDidCompleteWithError:(id)arg1;
- (id)dataWithRange:(struct _NSRange)arg1 error:(id *)arg2;
- (double)networkSpeedInBytesPerSecond;
- (long long)cachedContentSize;
- (void)cancelWithError:(id)arg1;
- (void)start;
- (void)dealloc;
- (id)init;
- (id)initWithURLRequest:(id)arg1 cacheID:(id)arg2 error:(id *)arg3;
- (id)initWithRequest:(id)arg1 fileURL:(id)arg2 contentType:(id)arg3 contentLength:(long long)arg4 removeFileOnDealloc:(_Bool)arg5;
- (id)initWithRequest:(id)arg1 fileURL:(id)arg2 removeFileOnDealloc:(_Bool)arg3;
- (void)commonInitWithRequest:(id)arg1 fileURL:(id)arg2 removeFileOnDealloc:(_Bool)arg3;

@end

@interface GADVersionedCache : NSObject <GADResourceCacheDelegate>
{
    NSString *_cacheID;
    NSURL *_cacheURL;
    NSString *_userDefaultsKey;
    GADResourceCache *_resourceCache;
    CDUnknownBlockType _completionBlock;
    _Bool _loading;
    NSObject<OS_dispatch_queue> *_lockQueue;
    NSString *_newVersion;
    NSData *_cacheData;
    NSString *_version;
}

- (void).cxx_destruct;
@property(readonly) NSString *version;
@property(readonly) NSData *cacheData;
- (void)resourceCache:(id)arg1 didFailCachingWithError:(id)arg2;
- (void)resourceCacheDidSucceedCaching:(id)arg1;
- (void)resetState;
- (void)executeCompletionBlock:(CDUnknownBlockType)arg1 onMainThreadWithError:(id)arg2;
- (void)resetStateAndNotifyCompletionBlockWithError:(id)arg1;
- (void)updateWithURL:(id)arg1 version:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (id)initWithCacheID:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADCategories : NSObject
{
}

- (void)linkCategoriesAndClasses;

@end

@interface GADBufferedClearcutLogger : NSObject
{
    long long _bufferedCommandSize;
    NSMutableArray *_bufferedCommands;
    NSObject<OS_dispatch_queue> *_lockQueue;
}

- (void).cxx_destruct;
- (void)reportBufferedEventsToLogger:(id)arg1;
- (void)bufferParameters:(id)arg1;
- (void)bufferEvent:(id)arg1;
- (id)init;

@end

@interface GADClearcut : NSObject <GADClearcutCommandExecuting>
{
    id <GADClearcutCommandExecuting> _commandExecutor;
    GADVersionedCache *_versionedCache;
    _Bool _isUpdating;
    long long _clearcutID;
    NSString *_appUniqueID;
    NSObject<OS_dispatch_queue> *_lockQueue;
}

+ (id)sharedInstance;
- (void).cxx_destruct;
- (void)updateCommandExecutorWithConfig:(id)arg1 script:(id)arg2;
- (void)resetUpdateCheckingState;
- (id)nextUniqueID;
- (void)asynchronouslyExecuteCommands:(id)arg1;
- (_Bool)isLoaded;
- (void)updateIfNeeded;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADClearcutAdViewCommandExecutor : NSObject <GADAdViewDelegate, GADClearcutCommandExecuting>
{
    GADAdView *_adView;
    _Bool _loaded;
    NSObject<OS_dispatch_queue> *_lockQueue;
}

- (void).cxx_destruct;
- (void)adViewWebProcessDidTerminate:(id)arg1;
- (void)adViewDidFinishLoad:(id)arg1;
- (_Bool)isLoaded;
- (void)asynchronouslyExecuteCommands:(id)arg1;
- (void)dealloc;
- (id)initWithScript:(id)arg1 baseURL:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADClearcutConfig : NSObject
{
    _Bool _enabled;
    _Bool _useJSCore;
    double _beaconInterval;
    NSURL *_scriptURL;
    NSString *_version;
    NSURL *_baseURL;
    long long _maxBufferedCommandSize;
    NSString *_JSConfig;
}

@property(readonly, copy, nonatomic) NSString *JSConfig; // @synthesize JSConfig=_JSConfig;
@property(readonly, nonatomic) long long maxBufferedCommandSize; // @synthesize maxBufferedCommandSize=_maxBufferedCommandSize;
@property(readonly, copy, nonatomic) NSURL *baseURL; // @synthesize baseURL=_baseURL;
@property(readonly, copy, nonatomic) NSString *version; // @synthesize version=_version;
@property(readonly, copy, nonatomic) NSURL *scriptURL; // @synthesize scriptURL=_scriptURL;
@property(readonly, nonatomic) double beaconInterval; // @synthesize beaconInterval=_beaconInterval;
@property(readonly, nonatomic) _Bool useJSCore; // @synthesize useJSCore=_useJSCore;
@property(readonly, nonatomic) _Bool enabled; // @synthesize enabled=_enabled;
- (void).cxx_destruct;
- (id)init;

@end

@interface GADClearcutJSCoreCommandExecutor : NSObject <GADClearcutCommandExecuting>
{
    JSVirtualMachine *_virtualMachine;
    JSContext *_context;
}

- (void).cxx_destruct;
- (void)handleNetworkIOWithParameters:(id)arg1 successCallback:(id)arg2 failureCallback:(id)arg3;
- (void)asynchronouslyExecuteCommands:(id)arg1;
- (_Bool)isLoaded;
- (id)initWithScript:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADClearcutLogger : NSObject
{
    GADBufferedClearcutLogger *_bufferedLogger;
    NSString *_clearcutID;
    _Bool _shouldReportEventsOnDealloc;
    NSObject<OS_dispatch_queue> *_lockQueue;
    _Bool _environmentReported;
    _Bool _experimentIDsReported;
}

- (void).cxx_destruct;
@property _Bool experimentIDsReported;
@property _Bool environmentReported;
- (void)reportBufferedParameters:(id)arg1;
- (id)clearcutParametersFromEvent:(id)arg1;
- (void)executeClearcutCommandWithParameter:(id)arg1;
- (void)reportExperimentIDs;
- (void)reportEnvironment;
- (void)reportEvent:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface GADClearcutTimerCommandExecutor : NSObject <GADClearcutCommandExecuting>
{
    id <GADClearcutCommandExecuting> _executor;
    double _beaconTimeInterval;
    NSTimer *_timer;
}

- (void).cxx_destruct;
- (void)sendBeacon;
- (void)asynchronouslyExecuteCommands:(id)arg1;
- (_Bool)isLoaded;
- (void)dealloc;
- (id)initWithClearcutCommandExecutor:(id)arg1 timeInterval:(double)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADLoggingHierarchy : NSObject
{
    NSMapTable *_objectsRootLoggingObject;
    NSMapTable *_objectLogger;
    NSObject<OS_dispatch_queue> *_lockQueue;
}

+ (id)sharedInstance;
- (void).cxx_destruct;
- (void)removeLogger:(id)arg1;
- (void)removeObject:(id)arg1;
- (void)linkObject:(id)arg1 withChildObjects:(id)arg2;
- (id)rootObjectForObject:(id)arg1;
- (id)loggerForObject:(id)arg1;
- (void)setLogger:(id)arg1 forRootObject:(id)arg2;
- (id)init;

@end

@interface GADCharacterSets : NSObject
{
    NSObject<OS_dispatch_queue> *_lockQueue;
    NSCharacterSet *_characterDelimitedSet;
    NSCharacterSet *_spaceDelimitedSet;
}

+ (id)sharedInstance;
- (void).cxx_destruct;
- (void)updateCharacterSets;
@property(readonly, copy) NSCharacterSet *spaceDelimitedSet;
@property(readonly, copy) NSCharacterSet *characterDelimitedSet;
- (id)init;

@end

@interface GADContent : NSObject
{
    long long _contentAgeWeight;
    long long _contentLengthWeight;
    unsigned long long _contentTotalLength;
    GADBinaryHeap *_heap;
    unsigned long long _maximumShingleCount;
    unsigned long long _minimumParagraphLength;
    unsigned long long _shingleLength;
    NSString *_fingerprint;
    long long _score;
    unsigned long long _sequenceNumber;
}

@property(readonly, nonatomic) unsigned long long sequenceNumber; // @synthesize sequenceNumber=_sequenceNumber;
@property(readonly, nonatomic) long long score; // @synthesize score=_score;
@property(readonly, nonatomic) NSString *fingerprint; // @synthesize fingerprint=_fingerprint;
- (void).cxx_destruct;
- (id)shingleHash;
- (void)updateHeapWithHash:(unsigned long long)arg1 shingle:(id)arg2;
- (void)applyRollingHashToTokens:(id)arg1 baseHash:(unsigned long long)arg2;
- (void)selectShinglesFromTokens:(id)arg1;
- (void)updateContentWithText:(id)arg1;
- (void)deductServedPenalty;
- (id)initWithSequenceNumber:(unsigned long long)arg1;
- (id)init;

@end

@interface GADContentQueue : NSObject
{
    NSMutableDictionary *_contents;
    NSMutableArray *_sequenceNumbers;
    unsigned long long _size;
}

- (void).cxx_destruct;
- (void)enqueueContent:(id)arg1;
- (void)deduplicate:(id)arg1;
- (id)contentWithSequenceNumber:(unsigned long long)arg1;
- (id)contentWithHighestScore;
- (id)init;
- (id)initWithQueueSize:(unsigned long long)arg1;

@end

@interface GADShingleHashTuple : NSObject
{
    NSArray *_shingle;
    unsigned long long _hashValue;
}

@property(readonly, nonatomic) unsigned long long hashValue; // @synthesize hashValue=_hashValue;
@property(readonly, copy, nonatomic) NSArray *shingle; // @synthesize shingle=_shingle;
- (void).cxx_destruct;
- (id)init;
- (id)initWithShingle:(id)arg1 hashValue:(unsigned long long)arg2;

@end

@interface GADCrashReporter : NSObject
{
    CDUnknownFunctionPointerType _previousUncaughtExceptionHandler;
    _Bool _reportingEnabled;
}

+ (id)sharedInstance;
@property(nonatomic) _Bool reportingEnabled; // @synthesize reportingEnabled=_reportingEnabled;
- (void)handleUncaughtException:(id)arg1;
- (void)reportUncaughtException:(id)arg1;
- (id)init;

@end

@interface GADPublicKey : NSObject
{
    struct __SecCertificate *_certificate;
    struct __SecTrust *_trustStore;
    struct __SecKey *_key;
}

- (_Bool)isSignatureValid:(id)arg1 forMessage:(id)arg2;
- (void)dealloc;
- (id)initWithCertificateData:(id)arg1;

@end

@interface GADPlaceholderViewController : UIViewController
{
}

- (unsigned long long)supportedInterfaceOrientations;
- (_Bool)shouldAutorotate;

@end

@interface GADApplication : NSObject <GADConfigurationDelegate, GADStatisticDictionaryDelegate>
{
    GADAd *_backgroundingAd;
    id <NSObject> _appBecameActiveObserver;
    id <NSObject> _appWillEnterForegroundObserver;
    id <NSObject> _appWillResignActiveObserver;
    GADContentQueue *_contentQueue;
    GADScheduler *_scheduler;
    NSObject<OS_dispatch_queue> *_serialQueue;
    NSObject<OS_dispatch_queue> *_lockQueue;
    NSArray *_availableAdapterNames;
    unsigned long long _activeViewID;
    NSString *_version;
    NSString *_mainBundleIdentifier;
    _Bool _appFinishedLaunching;
    _Bool _hasRunAdditionalEarlyActivities;
    _Bool _backgroundLoadingEnabled;
    _Bool _needsConfigurationUpdate;
    _Bool _isConfigurationUpdatePublisherInitiated;
    GADConfiguration *_configuration;
    NSMutableSet *_adRequesters;
    unsigned long long _mainWindowSupportedInterfaceOrientations;
    _Bool _debugModeEnabled;
    NSString *_sessionIdentifier;
    GADStatisticDictionary *_statistics;
    GADStatisticDictionary *_nativeAdStatistics;
    NSString *_inAppPreviewCreativeToken;
    NSString *_UUIDString;
    NSObject<OS_dispatch_queue> *_notificationSerialQueue;
    NSObject<OS_dispatch_queue> *_statisticsSerialQueue;
    unsigned long long _sequenceNumber;
    NSMutableSet *_adStatistics;
}

+ (id)sharedInstance;
+ (void)load;
@property(readonly, nonatomic) NSMutableSet *adStatistics; // @synthesize adStatistics=_adStatistics;
@property(nonatomic) unsigned long long sequenceNumber; // @synthesize sequenceNumber=_sequenceNumber;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *statisticsSerialQueue; // @synthesize statisticsSerialQueue=_statisticsSerialQueue;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *notificationSerialQueue; // @synthesize notificationSerialQueue=_notificationSerialQueue;
@property(readonly, nonatomic) NSString *UUIDString; // @synthesize UUIDString=_UUIDString;
@property(copy, nonatomic) NSString *inAppPreviewCreativeToken; // @synthesize inAppPreviewCreativeToken=_inAppPreviewCreativeToken;
@property(nonatomic) _Bool debugModeEnabled; // @synthesize debugModeEnabled=_debugModeEnabled;
@property(readonly, copy, nonatomic) GADStatisticDictionary *nativeAdStatistics; // @synthesize nativeAdStatistics=_nativeAdStatistics;
@property(readonly, copy, nonatomic) GADStatisticDictionary *statistics; // @synthesize statistics=_statistics;
@property(readonly, copy, nonatomic) NSString *sessionIdentifier; // @synthesize sessionIdentifier=_sessionIdentifier;
- (void).cxx_destruct;
- (void)openURL:(id)arg1 strictUniversalLink:(_Bool)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)openURL:(id)arg1;
- (long long)topViewControllerOrientation;
- (_Bool)supportsOrientations:(unsigned long long)arg1;
- (unsigned long long)mainWindowSupportedInterfaceOrientations;
- (_Bool)isSplitScreenEnabled;
- (id)parameters;
- (unsigned long long)nextActiveViewID;
- (void)GADLinkCategories;
- (void)didUpdateStatisticDictionary:(id)arg1;
- (id)notificationQueue;
- (id)pendingAdStatistics;
@property(readonly, copy, nonatomic) UIViewController *topViewController;
- (id)mainWindow;
- (id)placeholderWindow;
- (id)iTunesMetadata;
- (id)iTunesMetadataPath;
@property(readonly, nonatomic) _Bool backgroundReloadingEnabled;
@property(readonly, nonatomic) _Bool backgroundLoadingEnabled;
- (void)enableBackgroundAdLoading;
@property(readonly, nonatomic) _Bool active;
- (void)appDidFinishLaunching;
@property(readonly, copy, nonatomic) NSString *mainBundleIdentifier;
@property(readonly, copy, nonatomic) NSString *version;
- (void)runAdditionalEarlyActivities;
- (void)runEarlyActivities;
- (void)dealloc;
- (id)init;
- (void)configurationDidUpdate:(id)arg1;
- (void)loadServerSideConfigurationIfNeeded;
- (void)loadServerSideConfigurationForPublisherApplicationID:(id)arg1;
- (void)refreshServerSideConfiguration;
- (id)javaScriptForRequestingServerSideConfiguration;
@property(readonly, nonatomic) GADConfiguration *configuration;
- (void)createConfiguration;
- (void)stopContentHashing;
- (void)startContentHashing;
- (id)fingerprintWithServedPenaltyDeduction;
- (void)updateAvailableAdapterNamesWithPotentialAdapterNames:(id)arg1;
- (void)setAvailableAdapterNames:(id)arg1;
@property(readonly, copy) NSArray *availableAdapterNames;
- (id)nextRequestStatisticsDictionaryForSlot:(id)arg1;
- (id)timeSinceFirstAdRequestInMilliseconds;
- (id)nextSequenceNumberAsString;
- (void)incrementSequenceNumber;
- (void)incrementTotalAdClickCount;
- (long long)currentAdRequestCount;
- (void)requesterDidEndRequest:(id)arg1;
- (void)requesterWillBeginRequest:(id)arg1;
- (void)updateTimeInSession;
- (void)incrementTotalAdRequestCountInCurrentSession;
- (void)decrementTotalAdRequestCount;
- (void)incrementTotalAdRequestCount;
- (void)didNotSendAdStatistics:(id)arg1;
- (void)willResignActive;
- (void)resetTimeInSession;
- (void)resetPreqsInSession;
- (void)sendForegroundPing;
- (void)willEnterForeground;
- (void)didBecomeActive;
- (void)willLeaveApplicationDueToClickOnAd:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADViewHierarchyTraverser : NSObject
{
    _Bool _traversing;
    long long _sequenceNumber;
    NSObject<OS_dispatch_queue> *_SDKLowPrioritySerialQueue;
}

- (void).cxx_destruct;
- (void)setTraversing:(_Bool)arg1;
- (void)traverseView:(id)arg1 traversalBlock:(CDUnknownBlockType)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (id)init;

@end

@interface GADAdChoicesView : UIView
{
    UIView *_adChoicesContentView;
}

- (void).cxx_destruct;
- (void)layoutSubviews;
- (struct CGSize)intrinsicContentSize;
- (void)setAdChoicesContentView:(id)arg1;

@end

@interface GADMediaContent : NSObject <GADSlotAdEventDelegate, GADSlotAdLoadDelegate, GADSlotDelegate, GADMediaContentDisplaying>
{
    NSDictionary *_configuration;
    GADNativeAdImage *_placeholderImage;
    UIImageView *_placeholderImageView;
    _Bool _hasLoaded;
    CDUnknownBlockType _completionHandler;
    GADVideoOptions *_videoOptions;
    id <GADMediaContentDelegate> _delegate;
    GADSlot *_slot;
}

+ (id)videoSupportURL;
@property(readonly, nonatomic) GADSlot *slot; // @synthesize slot=_slot;
@property(nonatomic) __weak id <GADMediaContentDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)slot:(id)arg1 didLoadVideoWithSize:(struct CGSize)arg2;
- (struct CGRect)frameInInterface;
- (void)slot:(id)arg1 didFailToLoadAdContentWithError:(id)arg2;
- (void)slotFinishedLoadingAdContent:(id)arg1;
- (void)handleJavaScriptLoadedNotification:(id)arg1;
- (void)notifyVideoLoadCompletedWithError:(id)arg1;
@property(readonly, nonatomic) GADAdViewVideoController *videoController;
- (id)mediaView;
- (void)loadVideoWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)dealloc;
- (id)initWithVideoDictionary:(id)arg1 placeholderImage:(id)arg2 videoOptions:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADMediaView : UIView <GADMediaContentDelegate>
{
    UIView *_mediaView;
    id <GADMediaContentDisplaying> _mediaContent;
}

- (void).cxx_destruct;
- (void)mediaContent:(id)arg1 didLoadVideoWithSize:(struct CGSize)arg2;
- (void)didMoveToWindow;
- (void)setMediaContent:(id)arg1;
- (struct CGSize)intrinsicContentSize;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADNativeAd : NSObject <GADMediatedNativeAd, GADSlotAdEventDelegate, GADNativeAdSourceAttributing, GADNativeAdMediaDisplaying>
{
    _Bool _hasRecordedImpression;
    NSSet *_impressionTrackingURLs;
    NSMutableSet *_requestedAssets;
    NSMutableSet *_completedAssets;
    _Bool _failedToLoadARequiredAsset;
    _Bool _assetLoadingStarted;
    NSMutableArray *_assetLoadCompletionHandlers;
    NSObject<OS_dispatch_queue> *_lockQueue;
    _Bool _publisherOptsInCustomOnePointFiveClick;
    _Bool _clickNeedsConfirming;
    double _unconfirmedClickTimestamp;
    NSString *_unconfirmedClickIdentifier;
    _Bool _customOnePointFiveClickWhitelisted;
    _Bool _publisherRenderAdChoicesAllowed;
    _Bool _publisherClickReportingAllowed;
    _Bool _publisherTouchReportingAllowed;
    _Bool _publisherImpressionReportingAllowed;
    id <GADNativeAdDelegate> _delegate;
    UIViewController *_rootViewController;
    NSDictionary *_extraAssets;
    NSString *_adNetworkClassName;
    NSString *_adUnitID;
    NSDictionary *_adConfiguration;
    GADMediatedNativeAd *_mediatedNativeAd;
    GADSlot *_slot;
    NSSet *_thirdPartyClickTrackingURLs;
    NSString *_googleClickTrackingURLString;
    NSArray *_clickActions;
    NSDictionary *_activeViewConfigurations;
    long long _attributionCorner;
    NSString *_debugSignalInformation;
    NSDictionary *_statistics;
    GADNativeClickConfirmingViewMonitor *_clickConfirmingViewMonitor;
    id <GADNativeAdUnconfirmedClickDelegate> _unconfirmedClickDelegate;
    GADNativeAdViewPolicy *_nativeAdViewPolicy;
}

+ (id)supportHTMLURL;
+ (id)mediationConnectorForConfiguration:(id)arg1 networkConfiguration:(id)arg2;
@property(nonatomic) __weak GADNativeAdViewPolicy *nativeAdViewPolicy; // @synthesize nativeAdViewPolicy=_nativeAdViewPolicy;
@property(nonatomic) __weak id <GADNativeAdUnconfirmedClickDelegate> unconfirmedClickDelegate; // @synthesize unconfirmedClickDelegate=_unconfirmedClickDelegate;
@property(readonly, nonatomic) GADNativeClickConfirmingViewMonitor *clickConfirmingViewMonitor; // @synthesize clickConfirmingViewMonitor=_clickConfirmingViewMonitor;
@property(readonly, nonatomic) NSDictionary *statistics; // @synthesize statistics=_statistics;
@property(readonly, nonatomic) _Bool publisherImpressionReportingAllowed; // @synthesize publisherImpressionReportingAllowed=_publisherImpressionReportingAllowed;
@property(readonly, nonatomic) _Bool publisherTouchReportingAllowed; // @synthesize publisherTouchReportingAllowed=_publisherTouchReportingAllowed;
@property(readonly, nonatomic) _Bool publisherClickReportingAllowed; // @synthesize publisherClickReportingAllowed=_publisherClickReportingAllowed;
@property(nonatomic) _Bool publisherRenderAdChoicesAllowed; // @synthesize publisherRenderAdChoicesAllowed=_publisherRenderAdChoicesAllowed;
@property(copy, nonatomic) NSString *debugSignalInformation; // @synthesize debugSignalInformation=_debugSignalInformation;
@property(readonly, nonatomic) long long attributionCorner; // @synthesize attributionCorner=_attributionCorner;
@property(copy, nonatomic) NSDictionary *activeViewConfigurations; // @synthesize activeViewConfigurations=_activeViewConfigurations;
@property(copy, nonatomic) NSArray *clickActions; // @synthesize clickActions=_clickActions;
@property(copy, nonatomic) NSString *googleClickTrackingURLString; // @synthesize googleClickTrackingURLString=_googleClickTrackingURLString;
@property(copy, nonatomic) NSSet *thirdPartyClickTrackingURLs; // @synthesize thirdPartyClickTrackingURLs=_thirdPartyClickTrackingURLs;
@property(retain, nonatomic) GADSlot *slot; // @synthesize slot=_slot;
@property(retain, nonatomic) GADMediatedNativeAd *mediatedNativeAd; // @synthesize mediatedNativeAd=_mediatedNativeAd;
@property(readonly, copy, nonatomic) NSDictionary *adConfiguration; // @synthesize adConfiguration=_adConfiguration;
@property(copy, nonatomic) NSString *adUnitID; // @synthesize adUnitID=_adUnitID;
@property(copy, nonatomic) NSString *adNetworkClassName; // @synthesize adNetworkClassName=_adNetworkClassName;
@property(copy, nonatomic) NSDictionary *extraAssets; // @synthesize extraAssets=_extraAssets;
@property(nonatomic) __weak UIViewController *rootViewController; // @synthesize rootViewController=_rootViewController;
@property(nonatomic) __weak id <GADNativeAdDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)slot:(id)arg1 didReceiveUnconfirmedClickWithClickInfo:(id)arg2;
- (void)slotDidRecordClick:(id)arg1;
- (void)slotDidRecordImpression:(id)arg1;
- (void)slotWillLeaveApplication:(id)arg1;
- (void)slotDidDismissScreen:(id)arg1;
- (void)slotWillDismissScreen:(id)arg1;
- (void)slotWillPresentScreen:(id)arg1;
- (void)confirmClick;
- (double)confirmationClickTimeInterval;
- (void)cancelUnconfirmedClick;
- (void)resetUnconfirmedClick;
- (void)unregisterClickConfirmingView;
- (void)registerClickConfirmingView:(id)arg1;
- (_Bool)isCustomOnePointFiveClickEligible;
- (double)unconfirmedClickTimestamp;
- (_Bool)clickNeedsConfirming;
- (id)unconfirmedClickIdentifier;
@property(nonatomic) _Bool publisherOptsInCustomOnePointFiveClick;
- (void)unregisterAdView;
- (void)registerAdView:(id)arg1 clickableAssetViews:(id)arg2 nonclickableAssetViews:(id)arg3;
- (void)reportDidUnloadFromView:(id)arg1;
- (void)reportDidLoadInView:(id)arg1 clickableAssetViews:(id)arg2 nonclickableAssetViews:(id)arg3;
- (void)reportIsMediaContentRendered:(_Bool)arg1;
- (id)videoController;
- (id)mediaContent;
- (id)adChoicesContentView;
- (void)callAndClearAssetLoadCompletionHandlersWithError:(id)arg1;
- (void)addAssetWithNameToRequestedAssets:(id)arg1;
- (void)loadAssetsWithCompletionHandler:(CDUnknownBlockType)arg1;
- (_Bool)shouldLoadAssets;
- (void)failedToLoadAssetWithName:(id)arg1;
- (void)finishedLoadingAssetWithName:(id)arg1;
- (void)notifyLoadingDelegateIfAllRequestedAssetsHaveLoaded;
- (id)requiredAssets;
- (_Bool)hasRecordedImpression;
- (void)recordImpressionWithEnvironment:(id)arg1;
- (void)performClickOnView:(id)arg1 assetName:(id)arg2 environment:(id)arg3;
- (_Bool)recordImpressionWithData:(id)arg1;
- (void)reportTouchEventWithData:(id)arg1;
- (void)performClickWithData:(id)arg1;
- (id)adFormatTemplateID;
- (id)adChoicesIcon;
- (id)advertiser;
- (id)logo;
- (id)starRating;
- (id)images;
- (id)price;
- (id)store;
- (id)body;
- (id)icon;
- (id)callToAction;
- (id)headline;
- (_Bool)hasValidConfigurationForRequestParameters:(id)arg1;
- (void)gadNativeAd_commonInit;
- (void)dealloc;
- (id)init;
- (id)initWithMediatedNativeAd:(id)arg1 options:(id)arg2;
- (id)initWithDictionary:(id)arg1 options:(id)arg2;
- (id)mediatedNativeAdDelegate;
- (void)mediatedNativeAdWillLeaveApplication:(id)arg1;
- (void)mediatedNativeAdDidDismissScreen:(id)arg1;
- (void)mediatedNativeAdWillDismissScreen:(id)arg1;
- (void)mediatedNativeAdWillPresentScreen:(id)arg1;
- (void)mediatedNativeAdDidRecordClick:(id)arg1;
- (void)mediatedNativeAdDidRecordImpression:(id)arg1;
- (void)stopObservingMediatedNativeAd;
- (void)observeNotificationsFromMediatedNativeAd;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADNativeAdAttribution : NSObject
{
    NSArray *_loadingImages;
    NSMutableArray *_availableImages;
    CDUnknownBlockType _assetCompletionHandler;
    NSArray *_icons;
    double _iconPresentationDuration;
    double _iconAnimationDuration;
    NSString *_text;
    UIFont *_font;
    UIColor *_textColor;
    UIColor *_backgroundColor;
}

@property(readonly, copy, nonatomic) UIColor *backgroundColor; // @synthesize backgroundColor=_backgroundColor;
@property(readonly, copy, nonatomic) UIColor *textColor; // @synthesize textColor=_textColor;
@property(readonly, copy, nonatomic) UIFont *font; // @synthesize font=_font;
@property(readonly, copy, nonatomic) NSString *text; // @synthesize text=_text;
@property(readonly, nonatomic) double iconAnimationDuration; // @synthesize iconAnimationDuration=_iconAnimationDuration;
@property(readonly, nonatomic) double iconPresentationDuration; // @synthesize iconPresentationDuration=_iconPresentationDuration;
@property(readonly, nonatomic) NSArray *icons; // @synthesize icons=_icons;
- (void).cxx_destruct;
- (void)loadAssetsWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)failedLoadingNativeAdImageWithError:(id)arg1;
- (void)finishedLoadingNativeAdImage:(id)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)init;

@end

@interface GADNativeAdAttributionView : UIView
{
    GADPushTransitionView *_iconView;
    UILabel *_textView;
    UIView *_textPaddingLeft;
    UIView *_textPaddingRight;
    NSArray *_dynamicConstraints;
}

- (void).cxx_destruct;
@property(readonly, nonatomic) UIView *textView;
@property(readonly, nonatomic) UIView *iconView;
- (void)setAttribution:(id)arg1;
- (void)layoutSubviews;
- (id)initWithAttribution:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface GADNativeAdImage : NSObject
{
    _Bool _required;
    UIImage *_image;
    NSURL *_imageURL;
    double _scale;
}

+ (id)nativeAdImagesFromImageConfigurationArray:(id)arg1 options:(id)arg2;
@property(nonatomic) _Bool required; // @synthesize required=_required;
@property(nonatomic) double scale; // @synthesize scale=_scale;
@property(copy, nonatomic) NSURL *imageURL; // @synthesize imageURL=_imageURL;
@property(retain, nonatomic) UIImage *image; // @synthesize image=_image;
- (void).cxx_destruct;
- (void)loadImageWithCompletionHandler:(CDUnknownBlockType)arg1;
- (id)description;
- (id)init;
- (id)initWithDictionary:(id)arg1;
- (id)initWithURL:(id)arg1 scale:(double)arg2;
- (id)initWithImage:(id)arg1;

@end

@interface GADNativeAdViewPolicy : NSObject <GADImpressionMonitorDelegate, UIGestureRecognizerDelegate, GADActiveViewMonitorDelegate, GADAdViewActiveViewMonitoring>
{
    UIView *_adChoicesContentView;
    UIView *_weakAdChoicesViewFromPublisher;
    UIView *_adView;
    GADOverlayView *_overlayView;
    NSMapTable *_assetViewAssetNames;
    NSMutableSet *_clickableAssetNames;
    NSMapTable *_clickableAssetViews;
    NSMapTable *_nonclickableAssetViews;
    NSString *_attributionIconAssetName;
    NSString *_attributionTextAssetName;
    NSString *_backgroundAssetName;
    long long _adChoicesViewCorner;
    GADImpressionMonitor *_impressionMonitor;
    NSMutableArray *_adChoicesViewConstraints;
    _Bool _shouldAllowPublisherRenderAdChoices;
    GADAdExposureMonitor *_adExposureMonitor;
    GADNativeAdTapGestureRecognizer *_singleTap;
    GADGestureRecognizer *_touchGestureRecognizer;
    _Bool _isAdViewOwnedByPublisher;
    GADActiveViewMonitor *_activeViewMonitor;
    unsigned long long _activeViewID;
    GADSDKCoreWebView *_SDKCoreWebView;
    id _appWillResignActiveObserver;
    id _appBecameActiveObserver;
    _Bool _adChoicesViewClickable;
    GADNativeAd<GADNativeAdSourceAttributing><GADOverlayViewSource> *_nativeAd;
}

@property(nonatomic) _Bool adChoicesViewClickable; // @synthesize adChoicesViewClickable=_adChoicesViewClickable;
@property(retain, nonatomic) GADNativeAd<GADNativeAdSourceAttributing><GADOverlayViewSource> *nativeAd; // @synthesize nativeAd=_nativeAd;
- (void).cxx_destruct;
- (void)activeViewMonitoringDidStop:(unsigned long long)arg1;
- (_Bool)activeViewMonitoringStarted:(unsigned long long)arg1;
- (void)activeViewVisibilityChanged:(_Bool)arg1;
- (void)activeViewMonitorDidRefresh:(id)arg1;
- (_Bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (void)impressionMonitorDidMonitorImpression:(id)arg1;
- (_Bool)isViewTracked:(id)arg1;
- (id)activeViewJSCommandWithParams:(id)arg1;
- (void)enqueueJSCommandWithUnloaded:(_Bool)arg1;
- (void)finishActiveViewReporting;
- (void)startActiveViewReportingIfEnabled;
- (void)createActiveViewMonitor;
- (_Bool)monitoredViewIsSubviewOfDeviceScreen;
- (_Bool)nativeAdHasVideo;
- (void)beginObservingVideoClickNotifications;
- (void)recordImpression;
- (void)stopImpressionMonitoring;
- (void)startImpressionMonitoring;
- (void)checkForImpression;
- (void)adViewDidMoveToSuperview;
- (void)adViewDidLayoutSubviews;
- (void)handleImpressionTracking;
- (void)orderViews;
- (void)replaceAssetWithName:(id)arg1 withAssetView:(id)arg2 weakReferencePointer:(id *)arg3;
- (void)updateAdChoicesView;
- (void)updateAdChoicesContentView;
- (void)updateOverlay;
- (void)finishAdExposureMonitoring;
- (id)signalDictionaryWithAssetView:(id)arg1 assetName:(id)arg2 adView:(id)arg3;
- (id)nativeAdSignalDictionary;
- (id)tapHandlingEnvironmentWithTapLocation:(struct CGPoint)arg1 tappedViewName:(id)arg2;
- (void)handleVideoClickNotification:(id)arg1;
- (void)handleTap:(id)arg1;
- (void)addUserInteractionToAdView;
- (void)constrainAdChoicesViewToCorner;
- (void)dealloc;
- (void)setClickableAssetViews:(id)arg1 nonclickableAssetViews:(id)arg2;
- (void)unregisterAdView;
- (id)initWithAdView:(id)arg1 attributionIconAssetName:(id)arg2 attributionTextAssetName:(id)arg3 backgroundAssetName:(id)arg4 isAdViewOwnedByPublisher:(_Bool)arg5;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADNativeAppInstallAd : GADNativeAd <GADMediatedNativeAppInstallAd, GADLoadable, GADNativeAdMediaDisplaying, GADNativeAdSourceAttributing, GADOverlayViewSource>
{
    _Bool _disableImageLoading;
    NSArray *_nativeAdImages;
    NSMutableArray *_availableNativeAdImages;
    GADOverlayView *_overlayView;
    GADVideoController *_videoController;
    GADNativeAdAttribution *_attribution;
    NSString *_headline;
    NSString *_callToAction;
    GADNativeAdImage *_icon;
    NSString *_body;
    NSString *_store;
    NSString *_price;
    NSDecimalNumber *_starRating;
    _Bool _publisherOwnedAdViewAllowed;
    GADNativeAdImage *_adChoicesIcon;
    id <GADMediaContentDisplaying> _mediaContent;
    UIView *_adChoicesContentView;
}

+ (_Bool)canInitWithAdLoader:(id)arg1 error:(id *)arg2;
+ (id)requestParametersForAdLoader:(id)arg1;
+ (id)requiredDelegateProtocol;
@property(retain, nonatomic) UIView *adChoicesContentView; // @synthesize adChoicesContentView=_adChoicesContentView;
@property(retain, nonatomic) id <GADMediaContentDisplaying> mediaContent; // @synthesize mediaContent=_mediaContent;
@property(readonly, nonatomic) GADNativeAdImage *adChoicesIcon; // @synthesize adChoicesIcon=_adChoicesIcon;
@property(readonly, nonatomic) GADVideoController *videoController; // @synthesize videoController=_videoController;
@property(readonly, copy, nonatomic) NSDecimalNumber *starRating; // @synthesize starRating=_starRating;
@property(readonly, copy, nonatomic) NSString *price; // @synthesize price=_price;
@property(readonly, copy, nonatomic) NSString *store; // @synthesize store=_store;
@property(readonly, copy, nonatomic) NSString *body; // @synthesize body=_body;
- (void).cxx_destruct;
- (id)overlayView;
- (void)adLoaderDidReceiveAd:(id)arg1;
- (void)loadAssetsWithCompletionHandler:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) NSArray *images;
@property(readonly, nonatomic) GADNativeAdImage *icon;
@property(readonly, copy, nonatomic) NSString *callToAction;
@property(readonly, copy, nonatomic) NSString *headline;
- (id)requiredAssets;
- (void)unregisterAdView;
- (void)registerAdView:(id)arg1 clickableAssetViews:(id)arg2 nonclickableAssetViews:(id)arg3;
- (void)registerAdView:(id)arg1 assetViews:(id)arg2;
- (_Bool)recordImpressionWithData:(id)arg1;
- (void)reportTouchEventWithData:(id)arg1;
- (void)performClickWithData:(id)arg1;
- (id)adFormatTemplateID;
- (void)setSlot:(id)arg1;
- (id)initWithMediatedUnifiedNativeAd:(id)arg1 mediatedNativeAd:(id)arg2 options:(id)arg3;
- (id)initWithMediatedNativeAppInstallAd:(id)arg1 mediatedNativeAd:(id)arg2 options:(id)arg3;
- (id)initWithMediatedNativeAd:(id)arg1 options:(id)arg2;
- (id)initWithDictionary:(id)arg1 options:(id)arg2;
- (void)GADNativeAppInstallAd_category;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADNativeAppInstallAdView : UIView
{
    GADNativeAdViewPolicy *_nativeAdViewPolicy;
    UIView *_headlineView;
    UIView *_callToActionView;
    UIView *_iconView;
    UIView *_bodyView;
    UIView *_storeView;
    UIView *_priceView;
    UIView *_imageView;
    UIView *_starRatingView;
    GADMediaView *_mediaView;
    GADAdChoicesView *_adChoicesView;
}

@property(nonatomic) __weak GADAdChoicesView *adChoicesView; // @synthesize adChoicesView=_adChoicesView;
@property(nonatomic) __weak GADMediaView *mediaView; // @synthesize mediaView=_mediaView;
@property(nonatomic) __weak UIView *starRatingView; // @synthesize starRatingView=_starRatingView;
@property(nonatomic) __weak UIView *imageView; // @synthesize imageView=_imageView;
@property(nonatomic) __weak UIView *priceView; // @synthesize priceView=_priceView;
@property(nonatomic) __weak UIView *storeView; // @synthesize storeView=_storeView;
@property(nonatomic) __weak UIView *bodyView; // @synthesize bodyView=_bodyView;
@property(nonatomic) __weak UIView *iconView; // @synthesize iconView=_iconView;
@property(nonatomic) __weak UIView *callToActionView; // @synthesize callToActionView=_callToActionView;
@property(nonatomic) __weak UIView *headlineView; // @synthesize headlineView=_headlineView;
- (void).cxx_destruct;
- (void)updateMediaView;
- (void)didMoveToSuperview;
- (void)layoutSubviews;
@property(retain, nonatomic) GADNativeAppInstallAd *nativeAppInstallAd;
- (void)commonInit;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface GADNativeClickConfirmingViewMonitor : NSObject <UIGestureRecognizerDelegate>
{
    GADNativeAd *_nativeAd;
    UITapGestureRecognizer *_singleTap;
    id _clickConfirmingViewObserver;
    NSObject<OS_dispatch_queue> *_lockQueue;
    UIView *_clickConfirmingView;
}

- (void).cxx_destruct;
- (_Bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (void)setClickConfirmingView:(id)arg1;
@property(readonly, nonatomic) __weak UIView *clickConfirmingView;
- (void)handleTap:(id)arg1;
- (void)handleAssociatedNativeAd:(id)arg1;
- (void)untrackClickConfirmingView;
- (void)trackClickConfirmingView:(id)arg1;
- (id)initWithNativeAd:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADNativeContentAd : GADNativeAd <GADMediatedNativeContentAd, GADLoadable, GADNativeAdMediaDisplaying, GADNativeAdSourceAttributing, GADOverlayViewSource>
{
    _Bool _disableImageLoading;
    NSArray *_nativeAdImages;
    NSMutableArray *_availableNativeAdImages;
    GADOverlayView *_overlayView;
    GADVideoController *_videoController;
    GADNativeAdAttribution *_attribution;
    NSString *_headline;
    NSString *_body;
    NSString *_callToAction;
    GADNativeAdImage *_logo;
    _Bool _publisherOwnedAdViewAllowed;
    NSString *_advertiser;
    GADNativeAdImage *_adChoicesIcon;
    id <GADMediaContentDisplaying> _mediaContent;
    UIView *_adChoicesContentView;
}

+ (_Bool)canInitWithAdLoader:(id)arg1 error:(id *)arg2;
+ (id)requestParametersForAdLoader:(id)arg1;
+ (id)requiredDelegateProtocol;
@property(retain, nonatomic) UIView *adChoicesContentView; // @synthesize adChoicesContentView=_adChoicesContentView;
@property(retain, nonatomic) id <GADMediaContentDisplaying> mediaContent; // @synthesize mediaContent=_mediaContent;
@property(readonly, nonatomic) GADNativeAdImage *adChoicesIcon; // @synthesize adChoicesIcon=_adChoicesIcon;
@property(readonly, nonatomic) GADVideoController *videoController; // @synthesize videoController=_videoController;
@property(readonly, copy, nonatomic) NSString *advertiser; // @synthesize advertiser=_advertiser;
@property(readonly, copy, nonatomic) NSString *callToAction; // @synthesize callToAction=_callToAction;
@property(readonly, nonatomic) GADNativeAdImage *logo; // @synthesize logo=_logo;
- (void).cxx_destruct;
- (id)overlayView;
- (void)adLoaderDidReceiveAd:(id)arg1;
- (void)loadAssetsWithCompletionHandler:(CDUnknownBlockType)arg1;
@property(readonly, copy, nonatomic) NSArray *images;
@property(readonly, copy, nonatomic) NSString *body;
@property(readonly, copy, nonatomic) NSString *headline;
- (id)requiredAssets;
- (void)unregisterAdView;
- (void)registerAdView:(id)arg1 clickableAssetViews:(id)arg2 nonclickableAssetViews:(id)arg3;
- (void)registerAdView:(id)arg1 assetViews:(id)arg2;
- (_Bool)recordImpressionWithData:(id)arg1;
- (void)reportTouchEventWithData:(id)arg1;
- (void)performClickWithData:(id)arg1;
- (id)adFormatTemplateID;
- (void)setSlot:(id)arg1;
- (id)initWithMediatedUnifiedNativeAd:(id)arg1 mediatedNativeAd:(id)arg2 options:(id)arg3;
- (id)initWithMediatedNativeContentAd:(id)arg1 mediatedNativeAd:(id)arg2 options:(id)arg3;
- (id)initWithMediatedNativeAd:(id)arg1 options:(id)arg2;
- (id)initWithDictionary:(id)arg1 options:(id)arg2;
- (void)GADNativeContentAd_category;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADNativeContentAdView : UIView
{
    GADNativeAdViewPolicy *_nativeAdViewPolicy;
    UIView *_headlineView;
    UIView *_bodyView;
    UIView *_imageView;
    UIView *_logoView;
    UIView *_callToActionView;
    UIView *_advertiserView;
    GADMediaView *_mediaView;
    GADAdChoicesView *_adChoicesView;
}

@property(nonatomic) __weak GADAdChoicesView *adChoicesView; // @synthesize adChoicesView=_adChoicesView;
@property(nonatomic) __weak GADMediaView *mediaView; // @synthesize mediaView=_mediaView;
@property(nonatomic) __weak UIView *advertiserView; // @synthesize advertiserView=_advertiserView;
@property(nonatomic) __weak UIView *callToActionView; // @synthesize callToActionView=_callToActionView;
@property(nonatomic) __weak UIView *logoView; // @synthesize logoView=_logoView;
@property(nonatomic) __weak UIView *imageView; // @synthesize imageView=_imageView;
@property(nonatomic) __weak UIView *bodyView; // @synthesize bodyView=_bodyView;
@property(nonatomic) __weak UIView *headlineView; // @synthesize headlineView=_headlineView;
- (void).cxx_destruct;
- (void)updateMediaView;
- (void)didMoveToSuperview;
- (void)layoutSubviews;
@property(retain, nonatomic) GADNativeContentAd *nativeContentAd;
- (void)commonInit;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface GADNativeCustomTemplateAd : GADNativeAd <GADMediatedNativeCustomTemplateAd, GADLoadable>
{
    _Bool _disableImageLoading;
    NSObject<OS_dispatch_queue> *_lockQueue;
    NSDictionary *_optionalImages;
    NSDictionary *_requiredImages;
    NSMutableDictionary *_imageAssets;
    NSDictionary *_stringAssets;
    GADMediaContent *_mediaContent;
    GADMediaView *_mediaView;
    NSMutableSet *_availableAssetKeys;
    GADVideoController *_videoController;
    CDUnknownBlockType _customClickHandler;
    CDUnknownBlockType _deprecatedCustomClickHandler;
    NSString *_templateID;
}

+ (_Bool)canInitWithAdLoader:(id)arg1 error:(id *)arg2;
+ (id)requestParametersForAdLoader:(id)arg1;
+ (id)requiredDelegateProtocol;
@property(readonly, nonatomic) GADVideoController *videoController; // @synthesize videoController=_videoController;
@property(readonly, nonatomic) NSString *templateID; // @synthesize templateID=_templateID;
- (void).cxx_destruct;
- (void)adLoaderDidReceiveAd:(id)arg1;
- (void)loadAssetsWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)loadImageAssetsWithImageDictionary:(id)arg1;
- (void)setImage:(id)arg1 forKey:(id)arg2;
- (void)beginObservingVideoClickNotifications;
- (void)handleVideoClickNotifications;
- (void)handleNativeAdCustomClick:(id)arg1;
@property(readonly, nonatomic) GADMediaView *mediaView;
- (id)stringForKey:(id)arg1;
- (id)imageForKey:(id)arg1;
@property(readonly, nonatomic) NSArray *availableAssetKeys;
- (id)requiredAssets;
@property(copy) CDUnknownBlockType customClickHandler;
- (void)recordImpression;
- (void)performClickOnAssetWithKey:(id)arg1 customClickHandler:(CDUnknownBlockType)arg2;
- (void)performClickOnAssetWithKey:(id)arg1;
- (id)adFormatTemplateID;
- (_Bool)hasValidConfigurationForRequestParameters:(id)arg1;
- (void)setSlot:(id)arg1;
- (void)removeCustomClickObserver;
@property(readonly, copy) NSString *description;
- (void)dealloc;
- (id)initWithMediatedNativeAd:(id)arg1 options:(id)arg2;
- (id)initWithDictionary:(id)arg1 options:(id)arg2;
- (void)GADNativeCustomTemplateAd_category;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADOverlayView : UIView <GADAdViewDelegate>
{
    GADAdView *_overlayView;
    NSDictionary *_loadOverlayUserInfo;
    GADAdViewDelegate *_adViewDelegate;
    NSString *_overlayIdentifier;
    GADAdView *_adView;
}

@property(retain, nonatomic) GADAdView *adView; // @synthesize adView=_adView;
- (void).cxx_destruct;
- (void)adViewWebProcessDidTerminate:(id)arg1;
- (void)adViewDidFinishLoad:(id)arg1;
- (void)adView:(id)arg1 didFailLoadWithError:(id)arg2;
- (void)adViewDidStartLoad:(id)arg1;
- (_Bool)adView:(id)arg1 shouldStartLoadWithRequest:(id)arg2 navigationType:(long long)arg3;
- (void)handleSendMessageToOverlayView:(id)arg1;
- (void)handleHideOverlayView:(id)arg1;
- (void)handleShowOverlayView:(id)arg1;
- (void)handleLoadOverlayView:(id)arg1;
- (void)handleSendMessageToAdViewNotification:(id)arg1;
- (void)handleHideOverlayNotification:(id)arg1;
- (void)sendMessageToOverlayWithUserInfo:(id)arg1;
- (void)loadOverlayWithUserInfo:(id)arg1;
- (void)addOverlaySubview;
- (void)removeOverlaySubview;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADPushTransitionView : UIView
{
    NSArray *_views;
    UIView *_clippingView;
    UIView *_currentView;
    unsigned long long _currentViewIndex;
    double _presentationDuration;
    double _animationDuration;
    long long _animationGroupIdentifier;
}

@property(readonly, nonatomic) long long animationGroupIdentifier; // @synthesize animationGroupIdentifier=_animationGroupIdentifier;
- (void).cxx_destruct;
- (void)animate;
- (void)dispatchAnimation;
- (void)setCurrentView:(id)arg1;
- (void)setPresentationDuration:(double)arg1;
- (void)setAnimationDuration:(double)arg1;
- (void)setViews:(id)arg1;
- (void)commonInit;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface GADUnifiedNativeAd : NSObject <GADNativeAdDelegate, GADNativeAdUnconfirmedClickDelegate, GADLoadable>
{
    NSObject<OS_dispatch_queue> *_lockQueue;
    GADNativeAd<GADNativeAdSourceAttributing><GADOverlayViewSource> *_internalNativeAd;
    NSString *_headline;
    NSString *_callToAction;
    GADNativeAdImage *_icon;
    NSString *_body;
    NSArray *_images;
    NSDecimalNumber *_starRating;
    NSString *_store;
    NSString *_price;
    NSString *_advertiser;
    GADVideoController *_videoController;
    NSDictionary *_extraAssets;
    NSString *_adNetworkClassName;
    GADNativeAdImage *_adChoicesIcon;
    id <GADUnifiedNativeAdUnconfirmedClickDelegate> _unconfirmedClickDelegate;
    id <GADUnifiedNativeAdDelegate> _delegate;
    UIViewController *_rootViewController;
}

+ (id)mediationConnectorForConfiguration:(id)arg1 networkConfiguration:(id)arg2;
+ (_Bool)canInitWithAdLoader:(id)arg1 error:(id *)arg2;
+ (id)requestParametersForAdLoader:(id)arg1;
+ (id)requiredDelegateProtocol;
@property(readonly, nonatomic) GADNativeAd<GADNativeAdSourceAttributing><GADOverlayViewSource> *internalNativeAd; // @synthesize internalNativeAd=_internalNativeAd;
@property(readonly, nonatomic) GADNativeAdImage *adChoicesIcon; // @synthesize adChoicesIcon=_adChoicesIcon;
@property(readonly, copy, nonatomic) NSString *adNetworkClassName; // @synthesize adNetworkClassName=_adNetworkClassName;
@property(readonly, copy, nonatomic) NSDictionary *extraAssets; // @synthesize extraAssets=_extraAssets;
@property(nonatomic) __weak UIViewController *rootViewController; // @synthesize rootViewController=_rootViewController;
@property(nonatomic) __weak id <GADUnifiedNativeAdDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) GADVideoController *videoController; // @synthesize videoController=_videoController;
@property(readonly, copy, nonatomic) NSString *advertiser; // @synthesize advertiser=_advertiser;
@property(readonly, copy, nonatomic) NSString *price; // @synthesize price=_price;
@property(readonly, copy, nonatomic) NSString *store; // @synthesize store=_store;
@property(readonly, copy, nonatomic) NSDecimalNumber *starRating; // @synthesize starRating=_starRating;
@property(readonly, nonatomic) NSArray *images; // @synthesize images=_images;
@property(readonly, copy, nonatomic) NSString *body; // @synthesize body=_body;
@property(readonly, nonatomic) GADNativeAdImage *icon; // @synthesize icon=_icon;
@property(readonly, copy, nonatomic) NSString *callToAction; // @synthesize callToAction=_callToAction;
@property(readonly, copy, nonatomic) NSString *headline; // @synthesize headline=_headline;
- (void).cxx_destruct;
- (void)nativeAdDidCancelUnconfirmedClick:(id)arg1;
- (void)nativeAd:(id)arg1 didReceiveUnconfirmedClickOnAssetID:(id)arg2;
- (void)nativeAdWillLeaveApplication:(id)arg1;
- (void)nativeAdDidDismissScreen:(id)arg1;
- (void)nativeAdWillDismissScreen:(id)arg1;
- (void)nativeAdWillPresentScreen:(id)arg1;
- (void)nativeAdDidRecordClick:(id)arg1;
- (void)nativeAdDidRecordImpression:(id)arg1;
- (id)overlayView;
- (id)adChoicesContentView;
- (void)cancelUnconfirmedClick;
- (void)registerClickConfirmingView:(id)arg1;
- (id)unconfirmedClickDelegate;
- (void)setUnconfirmedClickDelegate:(id)arg1;
- (void)loadAssetsWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)adLoaderDidReceiveAd:(id)arg1;
- (_Bool)recordImpressionWithData:(id)arg1;
- (void)reportTouchEventWithData:(id)arg1;
- (void)performClickWithData:(id)arg1;
- (void)unregisterAdView;
- (void)registerAdView:(id)arg1 clickableAssetViews:(id)arg2 nonclickableAssetViews:(id)arg3;
- (id)init;
- (id)initWithNativeAd:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADUnifiedNativeAdView : UIView
{
    GADNativeAdViewPolicy *_nativeAdViewPolicy;
    GADUnifiedNativeAd *_nativeAd;
    UIView *_headlineView;
    UIView *_callToActionView;
    UIView *_iconView;
    UIView *_bodyView;
    UIView *_storeView;
    UIView *_priceView;
    UIView *_imageView;
    UIView *_starRatingView;
    UIView *_advertiserView;
    GADMediaView *_mediaView;
    GADAdChoicesView *_adChoicesView;
}

@property(nonatomic) __weak GADAdChoicesView *adChoicesView; // @synthesize adChoicesView=_adChoicesView;
@property(nonatomic) __weak GADMediaView *mediaView; // @synthesize mediaView=_mediaView;
@property(nonatomic) __weak UIView *advertiserView; // @synthesize advertiserView=_advertiserView;
@property(nonatomic) __weak UIView *starRatingView; // @synthesize starRatingView=_starRatingView;
@property(nonatomic) __weak UIView *imageView; // @synthesize imageView=_imageView;
@property(nonatomic) __weak UIView *priceView; // @synthesize priceView=_priceView;
@property(nonatomic) __weak UIView *storeView; // @synthesize storeView=_storeView;
@property(nonatomic) __weak UIView *bodyView; // @synthesize bodyView=_bodyView;
@property(nonatomic) __weak UIView *iconView; // @synthesize iconView=_iconView;
@property(nonatomic) __weak UIView *callToActionView; // @synthesize callToActionView=_callToActionView;
@property(nonatomic) __weak UIView *headlineView; // @synthesize headlineView=_headlineView;
@property(retain, nonatomic) GADUnifiedNativeAd *nativeAd; // @synthesize nativeAd=_nativeAd;
- (void).cxx_destruct;
- (void)updateMediaView;
- (void)didMoveToSuperview;
- (void)layoutSubviews;
- (void)commonInit;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface GADTwoFingersLongPressGestureRecognizer : UIGestureRecognizer
{
    long long _gestureState;
    double _startTimestamp;
    double _endTimestamp;
    NSTimer *_debugGestureTimer;
    NSTimer *_numberOfTouchesTimer;
}

- (void).cxx_destruct;
- (void)invalidateDebugGestureTimers;
- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (void)reset;

@end

@interface GADActiveViewGMSGHandler : GADGMSGHandler
{
    id <GADActiveViewGMSGHandlerDelegate> _delegate;
}

+ (id)actionBlockDictionary;
@property(nonatomic) __weak id <GADActiveViewGMSGHandlerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)adView:(id)arg1 didReceiveActiveViewUntrackActiveViewNotification:(id)arg2;
- (void)adView:(id)arg1 didReceiveActiveViewTrackActiveViewNotification:(id)arg2;
- (void)adView:(id)arg1 didReceiveActiveViewVisibilityChangedNotification:(id)arg2;

@end

@interface GADAdAppGMSGHandler : GADGMSGHandler
{
}

+ (id)actionBlockDictionary;
- (_Bool)shouldBufferNotification:(id)arg1 adView:(id)arg2;
- (void)adView:(id)arg1 updateInterstitialPropertiesWithArguments:(id)arg2;
- (void)adView:(id)arg1 configureCustomCloseButtonWithArguments:(id)arg2;

@end

@interface GADAdMetadataGMSGHandler : GADGMSGHandler
{
    GADSlot *_slot;
}

+ (id)actionBlockDictionary;
@property(nonatomic) __weak GADSlot *slot; // @synthesize slot=_slot;
- (void).cxx_destruct;
- (void)adView:(id)arg1 didChangeAdMetadataNotification:(id)arg2;
- (id)initWithSlot:(id)arg1;
- (id)init;

@end

@interface GADAdRefreshGMSGHandler : GADGMSGHandler
{
    GADOpener *_opener;
}

+ (id)actionBlockDictionary;
- (void).cxx_destruct;
- (void)adView:(id)arg1 didReceiveRefreshAction:(id)arg2;
- (id)initWithOpener:(id)arg1;

@end

@interface GADAnalyticsGMSGHandler : GADGMSGHandler
{
}

+ (id)actionBlockDictionary;
- (void)adView:(id)arg1 didReceiveLogEventNotification:(id)arg2;

@end

@interface GADAnimateViewGMSGHandler : GADGMSGHandler
{
    GADStoreKitProductInlineRenderer *_inlineStorKitProductRenderer;
}

+ (id)actionBlockDictionary;
- (void).cxx_destruct;
- (void)renderStoreKitProductInlineWithAdView:(id)arg1 animationData:(id)arg2;
- (void)performAdView:(id)arg1 animations:(id)arg2;
- (void)prepareAdView:(id)arg1 animations:(id)arg2;
- (void)adView:(id)arg1 didReceiveAnimateViewNotification:(id)arg2;

@end

@interface GADAppEventGMSGHandler : GADGMSGHandler
{
    GADSlot *_slot;
}

+ (id)actionBlockDictionary;
@property(nonatomic) __weak GADSlot *slot; // @synthesize slot=_slot;
- (void).cxx_destruct;
- (_Bool)shouldBufferNotification:(id)arg1 adView:(id)arg2;
- (void)adView:(id)arg1 didReceiveAppEventNotification:(id)arg2;
- (id)initWithSlot:(id)arg1;
- (id)init;

@end

@interface GADCSIGMSGHandler : GADGMSGHandler
{
    id <GADCSIGMSGHandlerDelegate> _CSIDelegate;
}

+ (id)subActionBlockDictionary;
+ (id)actionBlockDictionary;
@property(nonatomic) __weak id <GADCSIGMSGHandlerDelegate> CSIDelegate; // @synthesize CSIDelegate=_CSIDelegate;
- (void).cxx_destruct;
- (id)CSI;
- (void)adView:(id)arg1 didReceiveExtraAction:(id)arg2;
- (void)adView:(id)arg1 didReceiveExperimentAction:(id)arg2;
- (void)adView:(id)arg1 didReceiveTickAction:(id)arg2;
- (void)adView:(id)arg1 didReceiveCSINotification:(id)arg2;

@end

@interface GADDefaultGMSGHandler : GADGMSGHandler
{
}

+ (id)actionBlockDictionary;
+ (long long)integerForKey:(id)arg1 fromDictionary:(id)arg2 withDefaultValue:(long long)arg3;
- (void)adView:(id)arg1 didReceiveCloseNotification:(id)arg2;
- (void)adView:(id)arg1 didReceiveCanOpenURLsNotification:(id)arg2;
- (void)adView:(id)arg1 didReceiveVibrateNotification:(id)arg2;
- (void)adView:(id)arg1 didReceiveTouchNotification:(id)arg2;
- (void)adView:(id)arg1 didReceiveLogNotification:(id)arg2;
- (void)adView:(id)arg1 didReceiveTrackHTTPNotification:(id)arg2;

@end

@interface GADDelayPageCloseGMSGHandler : GADGMSGHandler
{
}

+ (id)actionBlockDictionary;
- (_Bool)shouldBufferNotification:(id)arg1 adView:(id)arg2;
- (void)adView:(id)arg1 didReceiveDelayPageCloseAction:(id)arg2;

@end

@interface GADDelayPageLoadGMSGHandler : GADGMSGHandler
{
    long long _delayCount;
    id <GADDelayLoadDelegate> _delegate;
}

+ (id)actionBlockDictionary;
- (void).cxx_destruct;
- (void)handleDelayLoadWithParameters:(id)arg1;
- (void)adView:(id)arg1 delayPageLoadWithArguments:(id)arg2;
- (id)initWithDelegate:(id)arg1;
- (id)init;

@end

@interface GADGMSGHandler : NSObject
{
    NSMutableArray *_bufferedNotifications;
}

+ (id)actionBlockDictionary;
- (void).cxx_destruct;
- (void)flushBuffer;
- (_Bool)shouldBufferNotification:(id)arg1 adView:(id)arg2;
- (_Bool)handleNotification:(id)arg1 adView:(id)arg2;
- (_Bool)handleRequest:(id)arg1 adView:(id)arg2;
- (id)init;

@end

@interface GADNativeAdVideoClickGMSGHandler : GADGMSGHandler
{
}

+ (id)actionBlockDictionary;
- (void)adView:(id)arg1 didReceiveClickNotification:(id)arg2;

@end

@interface GADOpenerGMSGHandler : GADGMSGHandler
{
    GADOpener *_opener;
}

+ (id)subActionBlockDictionary;
+ (id)actionBlockDictionary;
@property(retain, nonatomic) GADOpener *opener; // @synthesize opener=_opener;
- (void).cxx_destruct;
- (_Bool)shouldUseCustomClose:(id)arg1;
- (unsigned long long)orientationFromParams:(id)arg1;
- (id)URLFromParams:(id)arg1 key:(id)arg2;
- (void)adView:(id)arg1 actionOpenAppLink:(id)arg2;
- (void)adView:(id)arg1 actionOpenApp:(id)arg2;
- (void)adView:(id)arg1 actionExpand:(id)arg2;
- (void)adView:(id)arg1 actionOpenWebApp:(id)arg2;
- (void)adView:(id)arg1 actionOpenInlineSafari:(id)arg2;
- (void)adView:(id)arg1 actionOpenBrowser:(id)arg2;
- (void)adView:(id)arg1 fetchInAppStore:(id)arg2;
- (void)adView:(id)arg1 actionOpenInAppStore:(id)arg2;
- (void)adView:(id)arg1 didReceiveOpenNotification:(id)arg2;
- (void)adView:(id)arg1 didReceiveUnconfirmedClickNotification:(id)arg2;
- (void)adView:(id)arg1 didReceiveClickNotification:(id)arg2;
- (id)initWithOpener:(id)arg1;

@end

@interface GADOrientationGMSGHandler : GADGMSGHandler
{
}

+ (id)actionBlockDictionary;
- (void)adView:(id)arg1 didReceiveForcedOrientationAction:(id)arg2;

@end

@interface GADPrecacheGMSGHandler : NSObject <GADResourceCacheDelegate>
{
    GADAdView *_adView;
    NSURL *_sourceURL;
    _Bool _hasStartedPreloading;
    GADVideoConfiguration *_videoConfiguration;
    long long _byteThresholdToNotify;
    _Bool _hasNotifiedAtByteThreshold;
    GADResourceCache *_resourceCache;
}

+ (id)actionBlockDictionary;
+ (void)initialize;
@property(readonly, nonatomic) GADResourceCache *resourceCache; // @synthesize resourceCache=_resourceCache;
- (void).cxx_destruct;
- (void)resourceCache:(id)arg1 didFailCachingWithError:(id)arg2;
- (void)resourceCacheDidSucceedCaching:(id)arg1;
- (void)resourceCacheDidReceiveData:(id)arg1;
- (void)resourceCacheDidReceiveResponse:(id)arg1;
- (void)dispatchPrecacheEventWithBytesLoaded:(unsigned long long)arg1 totalBytes:(long long)arg2 event:(id)arg3;
- (void)abort;
- (long long)lastBytesAfterCleanUp;
- (void)preload;
- (void)adView:(id)arg1 didReceivePrecacheNotification:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADRewardBasedVideoAdGMSGHandler : GADGMSGHandler
{
}

+ (id)actionBlockDictionary;
- (void)adView:(id)arg1 didReceiveVideoCompleteAction:(id)arg2;
- (void)adView:(id)arg1 didReceiveGrantRewardAction:(id)arg2;
- (void)adView:(id)arg1 didReceiveStartVideoAction:(id)arg2;
- (void)adView:(id)arg1 didReceiveRewardBasedVideoAdAction:(id)arg2;

@end

@interface GADSDKCoreGMSGHandler : GADGMSGHandler <GADAdFetcherDelegate, GADResourceCacheDelegate>
{
    NSMutableDictionary *_adFetchers;
    NSMutableDictionary *_resourceCaches;
    NSMutableSet *_SDKCoreRefreshPauseIDs;
    NSObject<OS_dispatch_queue> *_lockQueue;
    GADSDKCoreWebView *_SDKCoreWebView;
    id <GADSDKCoreGMSGHandlerDelegate> _delegate;
}

+ (id)actionBlockDictionary;
@property(nonatomic) __weak id <GADSDKCoreGMSGHandlerDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) __weak GADSDKCoreWebView *SDKCoreWebView; // @synthesize SDKCoreWebView=_SDKCoreWebView;
- (void).cxx_destruct;
- (void)resourceCache:(id)arg1 didFailCachingWithError:(id)arg2;
- (void)resourceCacheDidSucceedCaching:(id)arg1;
- (void)resourceCacheDidReceiveResponse:(id)arg1;
- (void)resourceCacheDidStartCaching:(id)arg1;
- (void)notifyCacheDictionary:(id)arg1 fileDictionary:(id)arg2 requestID:(id)arg3 error:(id)arg4;
- (void)notifyResourceCache:(id)arg1 status:(id)arg2 cachingInProgress:(_Bool)arg3 error:(id)arg4;
- (id)requestIDForResourceCache:(id)arg1;
- (void)adFetcher:(id)arg1 didFailToFetchAd:(id)arg2 withError:(id)arg3 responseCode:(unsigned long long)arg4;
- (void)adFetcher:(id)arg1 didFetchAd:(id)arg2;
- (_Bool)isFetchInProgressForFetchRequestID:(id)arg1;
- (void)removeAdFetcherForFetchRequestID:(id)arg1;
- (void)setAdFetcher:(id)arg1 forFetchRequestID:(id)arg2;
- (id)fetchRequestIDForAdFetcher:(id)arg1;
- (void)failedToFetchAd:(id)arg1 forRequestID:(id)arg2 withError:(id)arg3 responseCode:(long long)arg4;
- (void)fetchedAd:(id)arg1 forFetchRequestID:(id)arg2 responseCode:(long long)arg3;
- (void)adView:(id)arg1 didReceiveSDKCoreRefreshAction:(id)arg2;
- (void)adView:(id)arg1 didReceiveCleanupCacheDirectoryAction:(id)arg2;
- (void)adView:(id)arg1 didReceiveResourceStatusCheckAction:(id)arg2;
- (void)adView:(id)arg1 didReceiveRemoveResourceAction:(id)arg2;
- (void)adView:(id)arg1 didReceiveCacheResourceAction:(id)arg2;
- (void)adView:(id)arg1 didReceiveResultAction:(id)arg2;
- (void)adView:(id)arg1 didReceiveSDKCoreSaveState:(id)arg2;
- (void)adView:(id)arg1 didReceiveAppSettings:(id)arg2;
- (void)adView:(id)arg1 didReceiveFetchAdAction:(id)arg2;
- (void)adView:(id)arg1 didReceiveSDKCoreReloadRequestWithParameters:(id)arg2;
- (void)adView:(id)arg1 didReceiveLoadAdAction:(id)arg2;
- (void)adView:(id)arg1 didReceiveloadSDKConstantsAction:(id)arg2;
- (void)adView:(id)arg1 didReceiveInvalidAdRequestAction:(id)arg2;
- (void)adView:(id)arg1 didReceiveloadAdURLAction:(id)arg2;
- (id)resourceCacheForFileURL:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADVideoMetadataGMSGHandler : GADGMSGHandler
{
}

+ (id)actionBlockDictionary;
- (void)adView:(id)arg1 didReceiveVideoMetadataAction:(id)arg2;

@end

@interface GADVideoPlayerGMSGHandler : GADGMSGHandler
{
    GADVideoConfiguration *_videoConfiguration;
    GADPrecacheGMSGHandler *_precacheGMSGHandler;
}

+ (id)subActionBlockDictionary;
+ (id)actionBlockDictionary;
- (void).cxx_destruct;
- (void)adView:(id)arg1 didReceiveTouchMoveAction:(id)arg2;
- (void)adView:(id)arg1 didReceiveSeekToCurrentTimeAction:(id)arg2;
- (void)adView:(id)arg1 didReceivePauseVideoAction:(id)arg2;
- (void)adView:(id)arg1 didReceivePlayVideoAction:(id)arg2;
- (void)adView:(id)arg1 didReceiveLoadControlVideoAction:(id)arg2;
- (void)adView:(id)arg1 didReceiveLoadVideoAction:(id)arg2;
- (void)adView:(id)arg1 didReceiveSetVolumeAction:(id)arg2;
- (void)adView:(id)arg1 didReceiveMutedVideoAction:(id)arg2;
- (void)adView:(id)arg1 didReceiveBackgroundAction:(id)arg2;
- (void)adView:(id)arg1 didReceiveShowVideoAction:(id)arg2;
- (void)adView:(id)arg1 didReceiveHideVideoAction:(id)arg2;
- (void)adView:(id)arg1 didReceiveSetVideoSourceAction:(id)arg2;
- (void)adView:(id)arg1 didReceiveNewVideoAction:(id)arg2;
- (void)adView:(id)arg1 didReceiveRotationVideoAction:(id)arg2;
- (void)adView:(id)arg1 didReceivePositionVideoAction:(id)arg2;
- (void)adView:(id)arg1 didReceivePrecacheAction:(id)arg2;
- (void)adView:(id)arg1 didReceiveVideoAction:(id)arg2;
- (id)init;

@end

@interface GADDebugOptionsViewController : UIViewController <UIAlertViewDelegate, SFSafariViewControllerDelegate>
{
    NSString *_adDebugDialogString;
    UIAlertView *_creativeInformationAlertView;
    UIAlertView *_debugOptionsAlertView;
    UIAlertView *_statusAlertView;
    NSURL *_debugDeviceLinkingURL;
    UIButton *_closeButton;
    _Bool _debugSignalStatusFetchInProgress;
    _Bool _inAppPreviewTokenFetchInProgreen;
    NSString *_adUnitID;
    _Bool _shouldEnableInAppPreview;
    _Bool _shouldEnableDebugSignal;
    id <GADDebugOptionsViewControllerDelegate> _delegate;
    NSString *_adDebugSignalsString;
}

+ (id)debugOptionsViewControllerWithAdUnitID:(id)arg1;
@property(copy, nonatomic) NSString *adDebugSignalsString; // @synthesize adDebugSignalsString=_adDebugSignalsString;
@property(copy, nonatomic) NSString *adDebugDialogString; // @synthesize adDebugDialogString=_adDebugDialogString;
@property(nonatomic) __weak id <GADDebugOptionsViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)safariViewControllerDidFinish:(id)arg1;
- (void)closeButtonPressed;
- (void)finishedDebugFlow;
- (void)showAlertViewWithTitle:(id)arg1;
- (void)showSystemErrorAlertView;
- (void)inAppPreviewSignalStatusReceivedResponse:(id)arg1 data:(id)arg2;
- (void)startInAppPreviewLinking;
- (void)debugSignalStatusReceivedResponse:(id)arg1 data:(id)arg2;
- (void)startDebugSignalLinking;
- (void)createDeviceIdentifierAndStartDeviceLinking;
- (void)startDeviceLinking;
- (id)debugURLRequestForString:(id)arg1;
- (id)debugDeviceQueryParameters;
- (void)showFeatureNotEnabledAlertView;
- (void)creativeInfoAlertViewClickedButtonAtIndex:(long long)arg1;
- (void)debugOptionsAlertViewClickedButtonAtIndex:(long long)arg1;
- (void)alertView:(id)arg1 clickedButtonAtIndex:(long long)arg2;
- (void)showCreativeInformationAlertView;
- (void)showDebugOptionsAlertView;
- (void)viewDidLoad;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (id)initWithAdUnitID:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADNativeAdTapGestureRecognizer : UITapGestureRecognizer
{
    GADNativeAdViewPolicy *_nativeAdViewPolicy;
}

@property(retain, nonatomic) GADNativeAdViewPolicy *nativeAdViewPolicy; // @synthesize nativeAdViewPolicy=_nativeAdViewPolicy;
- (void).cxx_destruct;

@end

@interface GADStoreKitProduct : NSObject
{
    long long _productID;
    NSMutableArray *_fetchCompletionBlocks;
    _Bool _isUsed;
    SKStoreProductViewController *_controller;
    _Bool _isFetchInProgress;
    _Bool _fetchSucceeded;
}

- (void).cxx_destruct;
- (void)finishFetchingAndNotifyCompletionBlockWithResult:(_Bool)arg1 error:(id)arg2;
- (void)fetchInAppStoreWithCompletionBlock:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) long long productID;
- (id)init;
- (id)initWithProductID:(long long)arg1;

@end

@interface GADStoreKitProductOpener : NSObject <SKStoreProductViewControllerDelegate>
{
    GADStoreKitProduct *_storeKitProduct;
    SKStoreProductViewController *_weakController;
    _Bool _isPresenting;
    _Bool _isPresented;
    _Bool _shouldDismissAfterPresentation;
    _Bool _dismissed;
}

- (void).cxx_destruct;
- (void)productViewControllerDidFinish:(id)arg1;
- (void)dismiss;
- (void)openWithRootViewController:(id)arg1 slot:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (id)initWithStoreKitProduct:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADStoreKitProductInlineRenderer : NSObject <SKStoreProductViewControllerDelegate>
{
    GADStoreKitProduct *_storeKitProduct;
    _Bool _renderedInline;
    CDUnknownBlockType _dismissNotificationBlock;
}

- (void).cxx_destruct;
- (void)productViewControllerDidFinish:(id)arg1;
- (void)dismiss;
- (void)resizeToFrame:(struct CGRect)arg1;
- (void)renderInView:(id)arg1 dismissalCompletionBlock:(CDUnknownBlockType)arg2;
- (id)initWithStoreKitProduct:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADStoreKitProductViewController : SKStoreProductViewController
{
}

- (unsigned long long)supportedInterfaceOrientations;

@end

@interface DFPInterstitial : GADInterstitial <DFPCustomRenderedAdEventHandler>
{
    unsigned int _previousCorrelationID;
    _Bool _customAdRenderingEnabled;
    id <GADAppEventDelegate> _appEventDelegate;
    id <DFPCustomRenderedInterstitialDelegate> _customRenderedInterstitialDelegate;
}

@property(nonatomic, getter=isCustomAdRenderingEnabled) _Bool customAdRenderingEnabled; // @synthesize customAdRenderingEnabled=_customAdRenderingEnabled;
@property(nonatomic) __weak id <DFPCustomRenderedInterstitialDelegate> customRenderedInterstitialDelegate; // @synthesize customRenderedInterstitialDelegate=_customRenderedInterstitialDelegate;
@property(nonatomic) __weak id <GADAppEventDelegate> appEventDelegate; // @synthesize appEventDelegate=_appEventDelegate;
- (void).cxx_destruct;
- (void)slot:(id)arg1 willLoadAdWithRequest:(id)arg2;
- (_Bool)slotShouldPreemptInProgressRequest:(id)arg1;
- (void)slot:(id)arg1 didReceiveAppEvent:(id)arg2 withInfo:(id)arg3;
- (void)presentFromRootViewController:(id)arg1;
- (_Bool)slot:(id)arg1 notifyPublisherToRenderCustomRenderingAd:(id)arg2 error:(id *)arg3;
@property(retain, nonatomic) GADCorrelator *correlator;
- (void)finishedRenderingAdView:(id)arg1;
- (void)recordCustomAdImpression;
- (void)recordClick;

// Remaining properties
@property(readonly, copy, nonatomic) NSString *adUnitID; // @dynamic adUnitID;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADInterstitial : NSObject <GADRewardBasedVideoAdGMSGHandlerDelegate, GADAdMediationDelegate, GADSlotAdEventDelegate, GADSlotAdLoadDelegate, GADSlotDelegate, GADSlotAdResponseDelegate>
{
    NSError *_alreadyUsedError;
    GADInterstitialOwner *_interstitialOwner;
    GADClearcutLogger *_logger;
    GADBufferedClearcutLogger *_bufferedLogger;
    _Bool _isMediated;
    _Bool _adUnitExposureBegan;
    _Bool _hasBeenUsed;
    NSString *_adUnitID;
    id <GADInterstitialDelegate> _delegate;
    id <GADInAppPurchaseDelegate> _inAppPurchaseDelegate;
    GADInterstitialViewController *_viewController;
    GADSlot *_slot;
}

@property(readonly, nonatomic) GADSlot *slot; // @synthesize slot=_slot;
@property(retain, nonatomic) GADInterstitialViewController *viewController; // @synthesize viewController=_viewController;
@property(nonatomic) __weak id <GADInAppPurchaseDelegate> inAppPurchaseDelegate; // @synthesize inAppPurchaseDelegate=_inAppPurchaseDelegate;
@property(nonatomic) _Bool hasBeenUsed; // @synthesize hasBeenUsed=_hasBeenUsed;
@property(nonatomic) __weak id <GADInterstitialDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, copy, nonatomic) NSString *adUnitID; // @synthesize adUnitID=_adUnitID;
- (void).cxx_destruct;
- (void)setAdUnitID:(id)arg1;
- (id)init;
- (id)mediationConnectorForConfiguration:(id)arg1 networkConfiguration:(id)arg2;
- (void)slot:(id)arg1 willProcessMediatedAdResponse:(id)arg2;
- (_Bool)slot:(id)arg1 shouldProcessAdResponse:(id)arg2 error:(id *)arg3;
- (_Bool)canPresentFullScreen;
- (_Bool)canFitAdSize:(struct CGSize)arg1 inWindowSize:(struct CGSize)arg2 withThreshold:(double)arg3;
- (void)presentFromRootViewController:(id)arg1;
- (void)adPresentationDidFail;
@property(readonly, nonatomic) _Bool isReady;
@property(readonly, copy, nonatomic) NSString *adNetworkClassName;
- (void)loadRequest:(id)arg1;
- (void)loadSlotFromCacheEntry:(id)arg1;
- (void)createSlot;
- (void)slotWillLeaveApplication:(id)arg1;
- (void)slotDidDismissScreen:(id)arg1;
- (void)slotWillDismissScreen:(id)arg1;
- (void)slotWillPresentScreen:(id)arg1;
- (void)slot:(id)arg1 didFailToLoadAdContentWithError:(id)arg2;
- (void)slotFinishedLoadingAdContent:(id)arg1;
- (void)slotDidReceiveAdClick:(id)arg1;
- (_Bool)slot:(id)arg1 shouldLoadRequest:(id)arg2 error:(id *)arg3;
- (_Bool)slotShouldReloadCurrentRequest:(id)arg1;
- (void)slotDidLoadMRAIDAd:(id)arg1;
- (void)setMediated;
- (void)cancel;
- (void)dealloc;
- (id)initWithAdUnitID:(id)arg1;
- (void)rootObjectLoggerChanged;
- (void)interstitialAdIsDismissed;
- (void)interstitialAdIsPresented;
- (void)interstitialAdLoadFailedWithError:(id)arg1;
- (void)interstitialAdLoadSucceeded;
- (void)interstitialAdLoadStarted;
- (void)interstitialCreatedSlot:(id)arg1;
- (void)slot:(id)arg1 didChangeAdMetadata:(id)arg2 withInfo:(id)arg3;
- (void)rewardBasedVideoAdGMSGHandlerDidReceiveVideoCompleteNotification:(id)arg1;
- (void)rewardBasedVideoAdGMSGHandlerDidReceiveStartVideoNotification:(id)arg1;
- (void)rewardBasedVideoAdGMSGHandler:(id)arg1 didReceiveRewardNotificationWithRewardItem:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADInterstitialCache : NSObject
{
    NSMutableDictionary *_interstitialPoolsByRequestKey;
    NSMutableArray *_recentlyAccessedRequestKeys;
    NSMutableDictionary *_observedRequestsByRequestKey;
    id <GADInterstitialPoolRefilling> _poolRefillPolicy;
    id _SDKCoreConstantsObserver;
    NSObject<OS_dispatch_queue> *_lockQueue;
}

+ (id)sharedInstance;
- (void).cxx_destruct;
- (void)updateRefillPolicy;
- (void)loadInterstitialsForSavedRequests;
- (void)didAccessKey:(id)arg1 request:(id)arg2;
- (id)cacheEntryForRequest:(id)arg1 adUnitID:(id)arg2;
- (void)loadRequest:(id)arg1 adUnitID:(id)arg2;
- (void)dealloc;
- (id)init;

@end

@interface GADInterstitialCacheEntry : NSObject <GADSlotDelegate, GADAdMediationDelegate, GADSlotAdLoadDelegate, GADSlotAdResponseDelegate>
{
    GADCSITimeRecorder *_timeRecorder;
    _Bool _loaded;
    GADSlot *_slot;
    NSError *_error;
}

+ (void)sendCSIPingForTimeRecorder:(id)arg1;
@property(readonly, nonatomic) NSError *error; // @synthesize error=_error;
@property(readonly, nonatomic) _Bool loaded; // @synthesize loaded=_loaded;
@property(readonly, nonatomic) GADSlot *slot; // @synthesize slot=_slot;
- (void).cxx_destruct;
- (id)mediationConnectorForConfiguration:(id)arg1 networkConfiguration:(id)arg2;
- (void)slot:(id)arg1 willProcessMediatedAdResponse:(id)arg2;
- (_Bool)slot:(id)arg1 shouldProcessAdResponse:(id)arg2 error:(id *)arg3;
- (_Bool)slot:(id)arg1 shouldLoadRequest:(id)arg2 error:(id *)arg3;
- (void)slot:(id)arg1 didFailToLoadAdContentWithError:(id)arg2;
- (void)slotFinishedLoadingAdContent:(id)arg1;
- (void)slotDidMoveToPlacement;
- (void)dealloc;
- (id)initWithRequest:(id)arg1 adUnitID:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADInterstitialOwner : NSObject
{
    _Bool _isSlotCreated;
    _Bool _isInterstitialCloseDelayed;
    GADInterstitial *_weakInterstitial;
    GADInterstitial *_presentedInterstitial;
    GADInterstitial *_pageCloseDelayedInterstitial;
    double _delayPageCloseTimeoutInterval;
}

- (void).cxx_destruct;
- (void)interstitialDelayPageCloseStopped;
- (void)interstitialDelayPageCloseStarted;
- (void)stopObserving;
- (void)observeInterstitial:(id)arg1;
- (void)moveAdViewToPlaceholderWindow:(id)arg1;
- (void)interstitialIsDismissed;
- (void)interstitialWillBePresented;
- (void)interstitialDidCreateSlot;
- (void)dealloc;
- (id)initWithInterstitial:(id)arg1;

@end

@interface GADInterstitialPool : NSObject
{
    NSMutableArray *_entries;
    GADRequest *_request;
    id <GADInterstitialPoolDelegate> _delegate;
    NSObject<OS_dispatch_queue> *_lockQueue;
    NSString *_adUnitID;
}

@property(readonly, copy, nonatomic) NSString *adUnitID; // @synthesize adUnitID=_adUnitID;
- (void).cxx_destruct;
- (id)nextEntry;
- (void)fill;
- (void)addCacheEntryWithTimeout:(double)arg1 maxCount:(long long)arg2;
- (void)scheduleTimeout:(double)arg1 cacheEntry:(id)arg2;
- (void)removeObject:(id)arg1;
@property __weak id <GADInterstitialPoolDelegate> delegate;
@property(copy) GADRequest *request;
- (id)initWithRequest:(id)arg1 adUnitID:(id)arg2;
- (id)init;

@end

@interface GADInterstitialPoolGroupRefillPolicy : NSObject <GADInterstitialPoolRefilling>
{
    NSHashTable *_pools;
    NSObject<OS_dispatch_queue> *_lockQueue;
}

- (void).cxx_destruct;
- (void)addPool:(id)arg1;
- (void)fillPools;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADInterstitialPoolRefillOnDismissPolicy : GADInterstitialPoolGroupRefillPolicy
{
    id _dismissalObserver;
}

- (void).cxx_destruct;
- (void)interstitialPoolDidAddEntry:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface GADInterstitialPoolRefillOnPopPolicy : NSObject <GADInterstitialPoolRefilling>
{
}

- (void)interstitialPoolDidRemoveEntry:(id)arg1;
- (void)interstitialPoolDidAddEntry:(id)arg1;
- (void)addPool:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADInterstitialPoolRefillWhenIdlePolicy : GADInterstitialPoolGroupRefillPolicy
{
    id _adRequestCountObserver;
    id _videoBufferingStartObserver;
    id _videoBufferingStopObserver;
    NSMutableSet *_bufferingVideoPlayerIdentifiers;
    NSObject<OS_dispatch_queue> *_bufferLockQueue;
}

- (void).cxx_destruct;
- (void)fillPools;
- (void)interstitialPoolDidRemoveEntry:(id)arg1;
- (void)addPool:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface GADAdConfiguration : NSObject
{
    NSDictionary *_options;
}

@property(readonly, copy, nonatomic) NSDictionary *options; // @synthesize options=_options;
- (void).cxx_destruct;
- (id)requestParameters;
- (id)initWithOptions:(id)arg1;

@end

@interface GADAdLoadResults : NSObject
{
    long long _requestedAdCount;
    long long _returnedAdCount;
    long long _nextIndex;
    NSMutableDictionary *_adLoadResults;
    GADAdLoader *_adLoader;
    NSObject<OS_dispatch_queue> *_lockQueue;
}

- (void).cxx_destruct;
- (void)handleLoadResult:(id)arg1 isFinalResult:(_Bool)arg2;
- (void)insertAdLoadResult:(id)arg1 atIndex:(long long)arg2;
- (void)setReturnedAdCount:(long long)arg1;
- (id)init;
- (id)initWithAdLoader:(id)arg1 requestedAdCount:(long long)arg2;

@end

@interface GADAdLoader : NSObject <GADAdMediationDelegate, GADSlotAdLoadDelegate, GADSlotAdResponseDelegate, GADSlotDelegate>
{
    GADSlot *_slot;
    GADAdLoadResults *_adLoadResults;
    NSSet *_adTypes;
    _Bool _loading;
    id <GADAdLoaderDelegate> _delegate;
    NSString *_adUnitID;
    GADAdLoaderConfiguration *_adLoaderConfiguration;
    UIViewController *_rootViewController;
    NSMutableArray *_appEventAdLoaders;
    NSMutableArray *_adPreprocessors;
    NSMutableArray *_nativeAds;
}

@property(readonly, nonatomic) NSMutableArray *nativeAds; // @synthesize nativeAds=_nativeAds;
@property(readonly, nonatomic) NSMutableArray *adPreprocessors; // @synthesize adPreprocessors=_adPreprocessors;
@property(readonly, nonatomic) NSMutableArray *appEventAdLoaders; // @synthesize appEventAdLoaders=_appEventAdLoaders;
@property(readonly, nonatomic) __weak UIViewController *rootViewController; // @synthesize rootViewController=_rootViewController;
@property(retain, nonatomic) GADAdLoaderConfiguration *adLoaderConfiguration; // @synthesize adLoaderConfiguration=_adLoaderConfiguration;
@property(readonly, nonatomic, getter=isLoading) _Bool loading; // @synthesize loading=_loading;
@property(readonly, nonatomic) NSString *adUnitID; // @synthesize adUnitID=_adUnitID;
@property(nonatomic) __weak id <GADAdLoaderDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)slot:(id)arg1 didFailToLoadAdContentWithError:(id)arg2;
- (void)slotFinishedLoadingAdContent:(id)arg1;
- (id)validAdSizes;
- (struct CGRect)frame;
- (struct CGRect)bounds;
- (void)loadAssetsForNativeAd:(id)arg1 index:(long long)arg2;
- (void)slot:(id)arg1 willProcessMediatedAdResponse:(id)arg2;
- (void)preprocessAdJSON:(id)arg1 atIndex:(long long)arg2;
- (_Bool)slot:(id)arg1 shouldProcessAdResponse:(id)arg2 error:(id *)arg3;
- (void)finishLoading;
- (void)adDidFinishLoadingAssets:(id)arg1 isFinalResult:(_Bool)arg2;
- (void)handleFailedRequestWithRequestError:(id)arg1 isFinalResult:(_Bool)arg2;
- (void)loadRequest:(id)arg1;
- (id)init;
- (id)initWithAdUnitID:(id)arg1 rootViewController:(id)arg2 adTypes:(id)arg3 options:(id)arg4;
- (void)ad:(id)arg1 processMediatedAd:(id)arg2 withCompletionHandler:(CDUnknownBlockType)arg3;
- (id)adLoaderConfigurationForAd:(id)arg1 networkConfiguration:(id)arg2;
- (id)mediationConnectorForConfiguration:(id)arg1 networkConfiguration:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADAdPreprocessor : NSObject <GADSlotAdLoadDelegate>
{
    GADSlot *_slot;
    CDUnknownBlockType _completionHandler;
    NSString *_nativeAdJSON;
}

- (void).cxx_destruct;
- (void)slotFinishedLoadingAdContent:(id)arg1;
- (void)slot:(id)arg1 didFailToLoadAdContentWithError:(id)arg2;
- (void)callAndClearCompletionHandlerWithAdConfiguration:(id)arg1 slot:(id)arg2 error:(id)arg3;
- (id)environmentJSONString;
- (void)handlePreprocessorNotification:(id)arg1;
- (void)handleJavaScriptLoadedNotification:(id)arg1;
- (void)preprocessNativeAdJSON:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)dealloc;
- (id)init;
- (id)initWithAdUnitID:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADMRAIDGMSGHandler : GADGMSGHandler
{
    GADOpener *_opener;
}

+ (id)subActionBlockDictionary;
+ (id)actionBlockDictionary;
- (void).cxx_destruct;
- (void)adView:(id)arg1 actionUnload:(id)arg2;
- (void)adView:(id)arg1 actionSetOrientationProperties:(id)arg2;
- (void)adView:(id)arg1 actionCreateCalendarEvent:(id)arg2;
- (void)adView:(id)arg1 actionStorePicture:(id)arg2;
- (void)adView:(id)arg1 actionResize:(id)arg2;
- (void)adView:(id)arg1 didReceiveMRAIDNotification:(id)arg2;
- (void)adView:(id)arg1 didReceiveMRAIDLoadNotification:(id)arg2;
- (id)initWithOpener:(id)arg1;

@end

@interface GADMAdapterHTML : NSObject <GADMAdNetworkAdapter, GADMWebViewRenderedCheckerDelegate, UIWebViewDelegate>
{
    unsigned long long _checkRenderingCount;
    NSTimer *_checkRenderingTimer;
    GADMWebViewRenderedChecker *_webViewRenderedChecker;
    UIWebView *_webView;
    NSURL *_passbackURL;
    id <GADMAdNetworkConnector> _connector;
}

+ (Class)networkExtrasClass;
+ (id)adapterVersion;
@property(nonatomic) id <GADMAdNetworkConnector> connector; // @synthesize connector=_connector;
- (void).cxx_destruct;
- (_Bool)webView:(id)arg1 shouldStartLoadWithRequest:(id)arg2 navigationType:(long long)arg3;
- (_Bool)isPassbackRequest:(id)arg1;
- (_Bool)isPath:(id)arg1 equivalentToPath:(id)arg2;
- (id)stripTrailingSlashFromPath:(id)arg1;
- (void)presentInterstitialFromRootViewController:(id)arg1;
- (_Bool)isBannerAnimationOK:(long long)arg1;
- (void)stopBeingDelegate;
- (void)getInterstitial;
- (void)createWebViewWithSize:(struct GADAdSize)arg1;
- (void)getBannerWithSize:(struct GADAdSize)arg1;
- (void)webView:(id)arg1 isRendered:(_Bool)arg2;
- (id)errorWithCode:(long long)arg1 text:(id)arg2;
- (void)stopRenderingTimer;
- (void)startRenderingTimer;
- (void)failInterstitialRequest;
- (void)clearWebView;
- (void)dealloc;
- (id)init;
- (id)initWithGADMAdNetworkConnector:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADMWebViewRenderedChecker : NSObject
{
    UIWebView *_webView;
    id <GADMWebViewRenderedCheckerDelegate> _delegate;
}

@property(nonatomic) __weak id <GADMWebViewRenderedCheckerDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) __weak UIWebView *webView; // @synthesize webView=_webView;
- (void).cxx_destruct;
- (double)percentOfImage:(id)arg1 ofColor:(id)arg2;
- (void)checkIsContentRenderedInWebView;
- (id)init;
- (id)initWithWebView:(id)arg1 delegate:(id)arg2;

@end

@interface GADCustomEventExtras : NSObject <GADAdNetworkExtras>
{
    NSMutableDictionary *_extras;
}

- (void).cxx_destruct;
- (id)allExtras;
- (void)removeAllExtras;
- (id)extrasForLabel:(id)arg1;
- (void)setExtras:(id)arg1 forLabel:(id)arg2;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADCustomEventRequest : NSObject
{
    _Bool _userHasLocation;
    _Bool _isTesting;
    long long _userGender;
    NSDate *_userBirthday;
    double _userLatitude;
    double _userLongitude;
    double _userLocationAccuracyInMeters;
    NSString *_userLocationDescription;
    NSArray *_userKeywords;
    NSDictionary *_additionalParameters;
}

@property(readonly, nonatomic) _Bool isTesting; // @synthesize isTesting=_isTesting;
@property(readonly, copy, nonatomic) NSDictionary *additionalParameters; // @synthesize additionalParameters=_additionalParameters;
@property(readonly, copy, nonatomic) NSArray *userKeywords; // @synthesize userKeywords=_userKeywords;
@property(readonly, copy, nonatomic) NSString *userLocationDescription; // @synthesize userLocationDescription=_userLocationDescription;
@property(readonly, nonatomic) double userLocationAccuracyInMeters; // @synthesize userLocationAccuracyInMeters=_userLocationAccuracyInMeters;
@property(readonly, nonatomic) double userLongitude; // @synthesize userLongitude=_userLongitude;
@property(readonly, nonatomic) double userLatitude; // @synthesize userLatitude=_userLatitude;
@property(readonly, nonatomic) _Bool userHasLocation; // @synthesize userHasLocation=_userHasLocation;
@property(readonly, copy, nonatomic) NSDate *userBirthday; // @synthesize userBirthday=_userBirthday;
@property(readonly, nonatomic) long long userGender; // @synthesize userGender=_userGender;
- (void).cxx_destruct;
- (id)initWithConnector:(id)arg1;

@end

@interface GADMAdManager : NSObject <GADMSlotDelegate, GADMConnectorDelegate>
{
    NSMutableArray *_adNetworkConfigQueue;
    GADMAdNetworkConnector *_lastConnectorNotifiedForAClick;
    id _lastMediatedInterstitial;
    long long _pendingActionGroup;
    NSMutableArray *_failedAdapterNamesAndDurations;
    _Bool _fillStatusPingsSent;
    _Bool _requestInProgress;
    GADMConfig *_config;
    GADAdType *_adType;
    GADMAdNetworkConnector *_requestingConnector;
    GADMAdNetworkConnector *_receivedConnector;
    GADSlot *_slot;
    NSTimer *_adNetworkTimeoutTimer;
}

@property(retain, nonatomic) NSTimer *adNetworkTimeoutTimer; // @synthesize adNetworkTimeoutTimer=_adNetworkTimeoutTimer;
@property(nonatomic) _Bool requestInProgress; // @synthesize requestInProgress=_requestInProgress;
@property(nonatomic) __weak GADSlot *slot; // @synthesize slot=_slot;
@property(retain, nonatomic) GADMAdNetworkConnector *receivedConnector; // @synthesize receivedConnector=_receivedConnector;
@property(retain, nonatomic) GADMAdNetworkConnector *requestingConnector; // @synthesize requestingConnector=_requestingConnector;
@property(retain, nonatomic) GADAdType *adType; // @synthesize adType=_adType;
@property(retain, nonatomic) GADMConfig *config; // @synthesize config=_config;
- (void).cxx_destruct;
- (id)mediationTimeRecorder;
- (void)endCSITimingWithFailedAdapter:(id)arg1;
- (void)endCSITimingWithSucceededAdapter:(id)arg1;
- (void)startCSITiming;
- (_Bool)connectorShouldReturnMediatedAd:(id)arg1;
- (void)adRequestFailedFromConnector:(id)arg1 withError:(id)arg2;
- (void)updateAdapterTimingsForConnector:(id)arg1 error:(id)arg2;
- (void)adRequestReturnsFromConnector:(id)arg1 withMediatedAd:(id)arg2;
- (void)adRequestReturnsFromConnector:(id)arg1 withInterstitial:(id)arg2;
- (void)adRequestReturnsFromConnector:(id)arg1 withView:(id)arg2;
- (void)presentInterstitialFromRootViewController:(id)arg1;
- (_Bool)changeAdTypeTo:(id)arg1;
- (void)mediateForAdType:(id)arg1 config:(id)arg2;
- (_Bool)shouldProcessResponseFromConnector:(id)arg1;
- (void)adNetworkTimeoutHandler:(id)arg1;
- (void)resetRequestingState;
- (void)notifyDelegateOfFailureToReceiveWithError:(id)arg1;
- (void)reportNoFill;
- (id)dequeueAdNetworkConfig;
- (void)makeAdRequest;
- (void)cancelPendingActions;
- (void)cancel;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADMAdNetworkAdapter : NSObject
{
}

+ (_Bool)classImplementsCurrentAdapterAPI:(Class)arg1;
+ (_Bool)classIsAdapterClass:(Class)arg1;
+ (id)availableAdapterNamesInSet:(id)arg1;

@end

@interface GADMAdNetworkConfig : NSObject
{
    NSString *_networkID;
    NSDictionary *_credentials;
    NSDictionary *_extras;
    NSDictionary *_ad;
    NSArray *_adapterList;
    Class _adapterClass;
    NSString *_allocationID;
    NSArray *_impressionURLs;
    NSArray *_clickURLs;
    NSArray *_fillURLs;
    NSArray *_videoStartURLs;
    NSArray *_videoCompleteURLs;
    NSArray *_rewardedUserURLs;
    NSDictionary *_nativeExpressAdLoaderOptions;
    NSString *_nativeExpressHTMLTemplate;
    NSString *_nativeExpressAdBaseURL;
    NSArray *_nativeExpressTemplateIDs;
    NSDictionary *_nativeExpressAssets;
    NSString *_responseType;
    NSArray *_slotSizes;
    double _timeout;
}

@property(readonly, nonatomic) double timeout; // @synthesize timeout=_timeout;
@property(readonly, copy, nonatomic) NSArray *slotSizes; // @synthesize slotSizes=_slotSizes;
@property(readonly, copy, nonatomic) NSString *responseType; // @synthesize responseType=_responseType;
@property(readonly, copy, nonatomic) NSDictionary *nativeExpressAssets; // @synthesize nativeExpressAssets=_nativeExpressAssets;
@property(readonly, copy, nonatomic) NSArray *nativeExpressTemplateIDs; // @synthesize nativeExpressTemplateIDs=_nativeExpressTemplateIDs;
@property(readonly, copy, nonatomic) NSString *nativeExpressAdBaseURL; // @synthesize nativeExpressAdBaseURL=_nativeExpressAdBaseURL;
@property(readonly, copy, nonatomic) NSString *nativeExpressHTMLTemplate; // @synthesize nativeExpressHTMLTemplate=_nativeExpressHTMLTemplate;
@property(readonly, copy, nonatomic) NSDictionary *nativeExpressAdLoaderOptions; // @synthesize nativeExpressAdLoaderOptions=_nativeExpressAdLoaderOptions;
@property(readonly, copy, nonatomic) NSArray *rewardedUserURLs; // @synthesize rewardedUserURLs=_rewardedUserURLs;
@property(readonly, copy, nonatomic) NSArray *videoCompleteURLs; // @synthesize videoCompleteURLs=_videoCompleteURLs;
@property(readonly, copy, nonatomic) NSArray *videoStartURLs; // @synthesize videoStartURLs=_videoStartURLs;
@property(readonly, copy, nonatomic) NSArray *fillURLs; // @synthesize fillURLs=_fillURLs;
@property(readonly, copy, nonatomic) NSArray *clickURLs; // @synthesize clickURLs=_clickURLs;
@property(readonly, copy, nonatomic) NSArray *impressionURLs; // @synthesize impressionURLs=_impressionURLs;
@property(readonly, copy, nonatomic) NSString *allocationID; // @synthesize allocationID=_allocationID;
@property(readonly, nonatomic) Class adapterClass; // @synthesize adapterClass=_adapterClass;
@property(readonly, copy, nonatomic) NSArray *adapterList; // @synthesize adapterList=_adapterList;
@property(readonly, copy, nonatomic) NSDictionary *ad; // @synthesize ad=_ad;
@property(readonly, copy, nonatomic) NSDictionary *extras; // @synthesize extras=_extras;
@property(readonly, copy, nonatomic) NSDictionary *credentials; // @synthesize credentials=_credentials;
@property(readonly, copy, nonatomic) NSString *networkID; // @synthesize networkID=_networkID;
- (void).cxx_destruct;
- (_Bool)setError:(id *)arg1 withErrorCode:(long long)arg2 errorMessage:(id)arg3;
- (id)errorMessageForMissingAdapterClasses:(id)arg1;
- (id)description;
- (_Bool)resolveAdNetworkClassForCustomEventWithError:(id *)arg1;
@property(readonly, copy, nonatomic) NSString *publisherID;
- (id)initWithDictionary:(id)arg1 error:(id *)arg2;

@end

@interface GADMAdNetworkConnector : NSObject <GADMInternalAdNetworkConnector, GADMediationAdRequestInternal>
{
    NSDictionary *_strippedCredentials;
    _Bool _isLocationShared;
    _Bool _didNetworkRefresh;
    _Bool _clicked;
    GADMAdNetworkConfig *_networkConfig;
    GADMAdManager *_adManager;
    GADMConfig *_mediationConfig;
    GADAdLoaderConfiguration *_adLoaderConfiguration;
    id <GADMAdNetworkAdapter> _adapter;
}

@property(nonatomic, getter=isClicked) _Bool clicked; // @synthesize clicked=_clicked;
@property(nonatomic) _Bool didNetworkRefresh; // @synthesize didNetworkRefresh=_didNetworkRefresh;
@property(retain, nonatomic) id <GADMAdNetworkAdapter> adapter; // @synthesize adapter=_adapter;
@property(retain, nonatomic) GADAdLoaderConfiguration *adLoaderConfiguration; // @synthesize adLoaderConfiguration=_adLoaderConfiguration;
@property(retain, nonatomic) GADMConfig *mediationConfig; // @synthesize mediationConfig=_mediationConfig;
@property(nonatomic) __weak GADMAdManager *adManager; // @synthesize adManager=_adManager;
@property(retain, nonatomic) GADMAdNetworkConfig *networkConfig; // @synthesize networkConfig=_networkConfig;
- (void).cxx_destruct;
- (void)adapter:(id)arg1 clickDidOccurInBanner:(id)arg2;
- (void)adapter:(id)arg1 didReceiveInterstitial:(id)arg2;
- (_Bool)adMuted;
- (float)adVolume;
- (void)reportFill;
- (void)reportManualImpression;
- (void)reportImpression;
- (void)reportClick;
- (void)pingMediationURLs:(id)arg1 defaultURL:(id)arg2 durations:(id)arg3 exitCodes:(id)arg4 fillStatus:(id)arg5 eventType:(id)arg6;
- (void)adapterDidGetAdClick:(id)arg1;
- (void)adapterWillLeaveApplication:(id)arg1;
- (void)adapterDidDismissInterstitial:(id)arg1;
- (void)adapterWillDismissInterstitial:(id)arg1;
- (void)adapterWillPresentInterstitial:(id)arg1;
- (void)adapterDidDismissFullScreenModal:(id)arg1;
- (void)adapterWillDismissFullScreenModal:(id)arg1;
- (void)adapterWillPresentFullScreenModal:(id)arg1;
- (void)adapter:(id)arg1 didFailInterstitial:(id)arg2;
- (void)adapterDidReceiveInterstitial:(id)arg1;
- (void)adapter:(id)arg1 didFailAd:(id)arg2;
- (void)adapter:(id)arg1 didReceiveMediatedUnifiedNativeAd:(id)arg2;
- (void)adapter:(id)arg1 didReceiveMediatedNativeAd:(id)arg2;
- (void)adapter:(id)arg1 didReceiveAdView:(id)arg2;
- (double)croppedContentThreshold;
- (struct CGSize)adSize;
- (id)childDirectedTreatment;
- (id)userKeywords;
- (id)userLocationDescription;
- (double)userLocationAccuracyInMeters;
- (double)userLongitude;
- (double)userLatitude;
- (_Bool)userHasLocation;
- (id)userLocation;
- (id)userBirthday;
- (long long)userGender;
- (id)viewControllerForPresentingModalView;
- (id)networkExtrasForClass:(Class)arg1;
- (id)networkExtras;
- (_Bool)testMode;
- (id)credentials;
- (id)publisherId;
- (id)slot;
- (id)userRequestAgent;
- (id)currentAdapterName;
- (id)adapterNames;
- (id)extras;
- (id)inlineAd;
- (void)dealloc;
- (void)askAdapterToStopBeingDelegate;
- (void)getAdFromAdapterWithType:(id)arg1;
- (id)adapterVersion;
- (void)setUpAdapter;
- (id)initWithConfig:(id)arg1 networkConfig:(id)arg2;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADMAdNetworkConnectorBanner : GADMAdNetworkConnector <GADImpressionMonitorDelegate>
{
    GADImpressionMonitor *_impressionMonitor;
    _Bool _didNetworkReturn;
    NSMutableArray *_queuedAppEvents;
}

@property(nonatomic) _Bool didNetworkReturn; // @synthesize didNetworkReturn=_didNetworkReturn;
@property(readonly, nonatomic) NSMutableArray *queuedAppEvents; // @synthesize queuedAppEvents=_queuedAppEvents;
- (void).cxx_destruct;
- (void)impressionMonitorDidMonitorImpression:(id)arg1;
- (void)adapterDidDismissInterstitial:(id)arg1;
- (void)adapterWillDismissInterstitial:(id)arg1;
- (void)adapterWillPresentInterstitial:(id)arg1;
- (void)adapter:(id)arg1 didFailInterstitial:(id)arg2;
- (void)adapterDidReceiveInterstitial:(id)arg1;
- (void)adapter:(id)arg1 didReceiveAppEvent:(id)arg2 withInfo:(id)arg3;
- (void)adapterWillLeaveApplication:(id)arg1;
- (void)adapterDidDismissFullScreenModal:(id)arg1;
- (void)adapterWillDismissFullScreenModal:(id)arg1;
- (void)adapterWillPresentFullScreenModal:(id)arg1;
- (void)adapter:(id)arg1 didFailAd:(id)arg2;
- (void)adapter:(id)arg1 didReceiveAdView:(id)arg2;
- (void)getAdFromAdapterWithType:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADMAdNetworkConnectorInterstitial : GADMAdNetworkConnector
{
    _Bool _calledWillDismissInterstitial;
}

@property(nonatomic) _Bool calledWillDismissInterstitial; // @synthesize calledWillDismissInterstitial=_calledWillDismissInterstitial;
- (void)adapter:(id)arg1 didFailInterstitial:(id)arg2;
- (void)adapter:(id)arg1 didReceiveInterstitial:(id)arg2;
- (void)adapterDidDismissFullScreenModal:(id)arg1;
- (void)adapterWillDismissFullScreenModal:(id)arg1;
- (void)adapterWillPresentFullScreenModal:(id)arg1;
- (void)adapter:(id)arg1 clickDidOccurInBanner:(id)arg2;
- (void)adapter:(id)arg1 didReceiveAdView:(id)arg2;
- (void)adapterWillLeaveApplication:(id)arg1;
- (void)adapterDidDismissInterstitial:(id)arg1;
- (void)adapterWillDismissInterstitial:(id)arg1;
- (void)adapterWillPresentInterstitial:(id)arg1;
- (void)adapter:(id)arg1 didFailAd:(id)arg2;
- (void)adapterDidReceiveInterstitial:(id)arg1;
- (void)getAdFromAdapterWithType:(id)arg1;

@end

@interface GADMAdNetworkConnectorNativeAd : GADMAdNetworkConnector
{
}

- (void)logIncorrectAdapterNotificationImplementation;
- (void)adapterDidDismissInterstitial:(id)arg1;
- (void)adapterWillDismissInterstitial:(id)arg1;
- (void)adapterWillPresentInterstitial:(id)arg1;
- (void)adapterDidDismissFullScreenModal:(id)arg1;
- (void)adapterWillDismissFullScreenModal:(id)arg1;
- (void)adapterWillPresentFullScreenModal:(id)arg1;
- (void)adapterWillLeaveApplication:(id)arg1;
- (void)adapterDidGetAdClick:(id)arg1;
- (void)adapter:(id)arg1 didFailAd:(id)arg2;
- (void)adapter:(id)arg1 didReceiveMediatedUnifiedNativeAd:(id)arg2;
- (void)adapter:(id)arg1 didReceiveMediatedNativeAd:(id)arg2;
- (void)didReceiveNativeAd:(id)arg1 fromAdapter:(id)arg2;
- (void)getAdFromAdapterWithType:(id)arg1;

@end

@interface GADMAdNetworkConnectorNativeExpressAd : GADMAdNetworkConnector
{
    GADMAdNetworkConnectorNativeAd *_nativeAdConnector;
    GADAdType *_adType;
    GADAdLoaderConfiguration *_adLoaderConfiguration;
}

+ (id)JSONAssetsFromMediatedNativeAppInstallAd:(id)arg1;
+ (id)JSONAssetsFromMediatedNativeContentAd:(id)arg1;
- (id)adLoaderConfiguration;
- (void).cxx_destruct;
- (void)loadNativeExpressHTMLTemplateForMediatedNativeAd:(id)arg1;
- (id)assetsFromMediatedNativeAd:(id)arg1;
- (void)adapter:(id)arg1 didFailAd:(id)arg2;
- (void)adapter:(id)arg1 didReceiveMediatedNativeAd:(id)arg2;
- (void)getAdFromAdapterWithType:(id)arg1;
- (void)setUpAdapter;
- (void)setAdManager:(id)arg1;
- (void)setAdLoaderConfiguration:(id)arg1;
- (id)initWithConfig:(id)arg1 networkConfig:(id)arg2;

@end

@interface GADMAdURLAdapter : NSObject <GADSDKCoreControllerDelegate, GADBannerViewDelegate, GADInterstitialDelegate, GADInterstitialAdClickDelegate, GADMAdNetworkAdapter>
{
    _Bool _shouldRespondToSDKCore;
    GADBannerView *_banner;
    GADInterstitial *_interstitial;
    id <GADMInternalAdNetworkConnector> _connector;
    NSString *_requestID;
}

+ (Class)networkExtrasClass;
+ (id)adapterVersion;
@property(nonatomic) _Bool shouldRespondToSDKCore; // @synthesize shouldRespondToSDKCore=_shouldRespondToSDKCore;
@property(copy, nonatomic) NSString *requestID; // @synthesize requestID=_requestID;
@property(nonatomic) __weak id <GADMInternalAdNetworkConnector> connector; // @synthesize connector=_connector;
@property(retain, nonatomic) GADInterstitial *interstitial; // @synthesize interstitial=_interstitial;
@property(retain, nonatomic) GADBannerView *banner; // @synthesize banner=_banner;
- (void).cxx_destruct;
- (void)reportInterstitialLoadFailureWithCode:(long long)arg1 errorMessage:(id)arg2;
- (void)reportBannerLoadFailureWithCode:(long long)arg1 errorMessage:(id)arg2;
- (void)reportAdLoadFailureWithCode:(long long)arg1 errorMessage:(id)arg2;
- (void)interstitialDidReceiveAdClick:(id)arg1;
- (void)interstitialWillLeaveApplication:(id)arg1;
- (void)interstitialDidDismissScreen:(id)arg1;
- (void)interstitialWillDismissScreen:(id)arg1;
- (void)interstitialWillPresentScreen:(id)arg1;
- (void)interstitial:(id)arg1 didFailToReceiveAdWithError:(id)arg2;
- (void)interstitialDidReceiveAd:(id)arg1;
- (void)adViewWillLeaveApplication:(id)arg1;
- (void)adViewDidDismissScreen:(id)arg1;
- (void)adViewWillDismissScreen:(id)arg1;
- (void)adViewWillPresentScreen:(id)arg1;
- (void)adView:(id)arg1 didFailToReceiveAdWithError:(id)arg2;
- (void)adViewDidReceiveAd:(id)arg1;
- (void)failedJavaScriptFile;
- (void)invalidJavaScriptRequest;
- (void)loadAd:(id)arg1 headers:(id)arg2;
- (void)loadAdURLWithParameters:(id)arg1;
- (long long)requestedAdType;
- (id)requestParameters;
- (id)adLoadActionTimeRecorder;
- (void)loadRequest;
- (void)changeAdSizeTo:(struct GADAdSize)arg1;
- (void)presentInterstitialFromRootViewController:(id)arg1;
- (_Bool)isBannerAnimationOK:(long long)arg1;
- (void)stopBeingDelegate;
- (void)getInterstitial;
- (void)getBannerWithSize:(struct GADAdSize)arg1;
- (id)initWithGADMAdNetworkConnector:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADMAdapterCustomEvents : NSObject <GADMAdNetworkAdapter, GADCustomEventBannerDelegate, GADCustomEventInterstitialDelegate, GADCustomEventNativeAdDelegate>
{
    id <GADMAdNetworkConnector> _connector;
    id <GADCustomEventBanner> _customEventBanner;
    id <GADCustomEventInterstitial> _customEventInterstitial;
    id <GADCustomEventNativeAd> _customEventNativeAd;
}

+ (Class)networkExtrasClass;
+ (id)adapterVersion;
@property(retain, nonatomic) id <GADCustomEventNativeAd> customEventNativeAd; // @synthesize customEventNativeAd=_customEventNativeAd;
@property(retain, nonatomic) id <GADCustomEventInterstitial> customEventInterstitial; // @synthesize customEventInterstitial=_customEventInterstitial;
@property(retain, nonatomic) id <GADCustomEventBanner> customEventBanner; // @synthesize customEventBanner=_customEventBanner;
@property(nonatomic) __weak id <GADMAdNetworkConnector> connector; // @synthesize connector=_connector;
- (void).cxx_destruct;
- (void)customEventInterstitial:(id)arg1 didReceiveAd:(id)arg2;
- (void)customEventBanner:(id)arg1 clickDidOccurInAd:(id)arg2;
- (void)customEventNativeAd:(id)arg1 didReceiveMediatedUnifiedNativeAd:(id)arg2;
- (void)customEventNativeAd:(id)arg1 didFailToLoadWithError:(id)arg2;
- (void)customEventNativeAd:(id)arg1 didReceiveMediatedNativeAd:(id)arg2;
- (void)customEventInterstitialWillLeaveApplication:(id)arg1;
- (void)customEventInterstitialDidDismiss:(id)arg1;
- (void)customEventInterstitialWillDismiss:(id)arg1;
- (void)customEventInterstitialWillPresent:(id)arg1;
- (void)customEventInterstitialWasClicked:(id)arg1;
- (void)customEventInterstitial:(id)arg1 didFailAd:(id)arg2;
- (void)customEventInterstitialDidReceiveAd:(id)arg1;
- (void)customEventBannerWillLeaveApplication:(id)arg1;
- (void)customEventBannerDidDismissModal:(id)arg1;
- (void)customEventBannerWillDismissModal:(id)arg1;
- (void)customEventBannerWillPresentModal:(id)arg1;
@property(readonly, nonatomic) UIViewController *viewControllerForPresentingModalView;
- (void)customEventBannerWasClicked:(id)arg1;
- (void)customEventBanner:(id)arg1 didFailAd:(id)arg2;
- (void)customEventBanner:(id)arg1 didReceiveAd:(id)arg2;
- (void)callBackToConnectorWithError:(id)arg1 isInterstitial:(_Bool)arg2;
- (void)dealloc;
- (_Bool)handlesUserImpressions;
- (_Bool)handlesUserClicks;
- (void)presentInterstitialFromRootViewController:(id)arg1;
- (_Bool)isBannerAnimationOK:(long long)arg1;
- (void)stopBeingDelegate;
- (void)getNativeAdWithAdTypes:(id)arg1 options:(id)arg2;
- (void)getInterstitial;
- (void)getBannerWithSize:(struct GADAdSize)arg1;
- (id)customEventWithCredentials:(id)arg1 isInterstitial:(_Bool)arg2;
- (id)initWithGADMAdNetworkConnector:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADMAdapterGoogleAdMobAds : NSObject <GADMRewardBasedVideoAdNetworkAdapter, GADRewardBasedVideoAdClickDelegate, GADRewardBasedVideoAdDelegate, GADAppEventDelegate, GADMAdNetworkAdapter, GADBannerViewDelegate, GADInterstitialDelegate, GADInterstitialAdClickDelegate, GADNativeAppInstallAdLoaderDelegate, GADNativeContentAdLoaderDelegate, GADNativeCustomTemplateAdLoaderDelegate>
{
    GADBannerView *_bannerView;
    GADInterstitial *_interstitial;
    GADRewardBasedVideoAd *_rewardBasedVideoAd;
    GADAdLoader *_adLoader;
    GADMAdNetworkConnector<GADMAdNetworkConnector> *_connector;
    id <GADMRewardBasedVideoAdNetworkConnector> _rewardBasedVideoAdNetworkConnector;
    id <GADAppEventDelegate> _appEventDelegate;
    id _manualImpressionObserver;
}

+ (Class)networkExtrasClass;
+ (id)adapterVersion;
- (void).cxx_destruct;
- (void)adView:(id)arg1 didReceiveAppEvent:(id)arg2 withInfo:(id)arg3;
- (void)adLoader:(id)arg1 didFailToReceiveAdWithError:(id)arg2;
- (void)adLoader:(id)arg1 didReceiveNativeCustomTemplateAd:(id)arg2;
- (id)nativeCustomTemplateIDsForAdLoader:(id)arg1;
- (void)adLoader:(id)arg1 didReceiveNativeContentAd:(id)arg2;
- (void)adLoader:(id)arg1 didReceiveNativeAppInstallAd:(id)arg2;
- (void)adLoader:(id)arg1 didReceiveNativeAd:(id)arg2;
- (void)interstitialDidReceiveAdClick:(id)arg1;
- (void)interstitialWillLeaveApplication:(id)arg1;
- (void)interstitialDidDismissScreen:(id)arg1;
- (void)interstitialWillDismissScreen:(id)arg1;
- (void)interstitialWillPresentScreen:(id)arg1;
- (void)interstitial:(id)arg1 didFailToReceiveAdWithError:(id)arg2;
- (void)interstitialDidReceiveAd:(id)arg1;
- (void)adViewWillLeaveApplication:(id)arg1;
- (void)adViewDidDismissScreen:(id)arg1;
- (void)adViewWillDismissScreen:(id)arg1;
- (void)adViewWillPresentScreen:(id)arg1;
- (void)adView:(id)arg1 didFailToReceiveAdWithError:(id)arg2;
- (void)adViewDidReceiveAd:(id)arg1;
- (_Bool)handlesUserImpressions;
- (_Bool)handlesUserClicks;
- (void)changeAdSizeTo:(struct GADAdSize)arg1;
- (void)presentInterstitialFromRootViewController:(id)arg1;
- (_Bool)isBannerAnimationOK:(long long)arg1;
- (void)stopBeingDelegate;
- (void)getNativeAdWithAdTypes:(id)arg1 options:(id)arg2;
- (void)getInterstitial;
- (void)getBannerWithSize:(struct GADAdSize)arg1;
- (id)initWithGADMAdNetworkConnector:(id)arg1;
- (void)dealloc;
- (id)request;
- (void)rewardBasedVideoAdDidReceiveAdClick:(id)arg1;
- (void)rewardBasedVideoAd:(id)arg1 didFailToLoadWithError:(id)arg2;
- (void)rewardBasedVideoAd:(id)arg1 didRewardUserWithReward:(id)arg2;
- (void)rewardBasedVideoAdWillLeaveApplication:(id)arg1;
- (void)rewardBasedVideoAdDidClose:(id)arg1;
- (void)rewardBasedVideoAdDidCompletePlaying:(id)arg1;
- (void)rewardBasedVideoAdDidStartPlaying:(id)arg1;
- (void)rewardBasedVideoAdDidOpen:(id)arg1;
- (void)rewardBasedVideoAdDidReceiveAd:(id)arg1;
- (void)presentRewardBasedVideoAdWithRootViewController:(id)arg1;
- (void)stopLoadingRewardBasedVideoAd;
- (void)requestRewardBasedVideoAd;
- (void)setUp;
- (id)initWithRewardBasedVideoAdNetworkConnector:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADMConfig : NSObject
{
    NSMutableArray *_adNetworkConfigs;
    _Bool _allowPublisherRenderedAttribution;
    double _refreshInterval;
    long long _bannerAnimationType;
    double _adNetworkTimeout;
    double _finalAdNetworkTimeout;
    long long _impressionDefinition;
    NSArray *_impressionURLs;
    NSArray *_clickURLs;
    NSArray *_noFillURLs;
    NSString *_qdata;
    NSString *_appKey;
    NSArray *_rewards;
    NSString *_defaultSlotSize;
    NSString *_defaultAdSize;
}

@property(readonly, copy, nonatomic) NSString *defaultAdSize; // @synthesize defaultAdSize=_defaultAdSize;
@property(readonly, copy, nonatomic) NSString *defaultSlotSize; // @synthesize defaultSlotSize=_defaultSlotSize;
@property(copy, nonatomic) NSArray *rewards; // @synthesize rewards=_rewards;
@property(copy, nonatomic) NSString *appKey; // @synthesize appKey=_appKey;
@property(copy, nonatomic) NSString *qdata; // @synthesize qdata=_qdata;
@property(copy, nonatomic) NSArray *noFillURLs; // @synthesize noFillURLs=_noFillURLs;
@property(copy, nonatomic) NSArray *clickURLs; // @synthesize clickURLs=_clickURLs;
@property(copy, nonatomic) NSArray *impressionURLs; // @synthesize impressionURLs=_impressionURLs;
@property(readonly, nonatomic) _Bool allowPublisherRenderedAttribution; // @synthesize allowPublisherRenderedAttribution=_allowPublisherRenderedAttribution;
@property(readonly, nonatomic) long long impressionDefinition; // @synthesize impressionDefinition=_impressionDefinition;
@property(readonly, nonatomic) double finalAdNetworkTimeout; // @synthesize finalAdNetworkTimeout=_finalAdNetworkTimeout;
@property(readonly, nonatomic) double adNetworkTimeout; // @synthesize adNetworkTimeout=_adNetworkTimeout;
@property(nonatomic) long long bannerAnimationType; // @synthesize bannerAnimationType=_bannerAnimationType;
@property(nonatomic) double refreshInterval; // @synthesize refreshInterval=_refreshInterval;
@property(readonly, copy, nonatomic) NSArray *adNetworkConfigs; // @synthesize adNetworkConfigs=_adNetworkConfigs;
- (void).cxx_destruct;
- (_Bool)parseConfig:(id)arg1 error:(id *)arg2;
- (_Bool)parseSettingsConfig:(id)arg1 error:(id *)arg2;
- (id)description;
- (id)init;
- (id)initWithAppKey:(id)arg1 configDict:(id)arg2 error:(id *)arg3;

@end

@interface GADMRewardBasedVideoAdNetworkConnector : NSObject <GADMRewardBasedVideoAdNetworkConnector, GADMediationAdRequestInternal>
{
    id <GADMRewardBasedVideoAdNetworkAdapter> _adapter;
    NSDictionary *_networkData;
    _Bool _isLocationShared;
    GADMConfig *_mediationConfig;
    GADMAdNetworkConfig *_adNetworkConfig;
    NSArray *_adNetworkConfigsFromAppConfiguration;
    GADAd *_ad;
    id <GADMRewardBasedVideoAdConnectorDelegate> _delegate;
    GADRequest *_request;
}

@property(copy, nonatomic) GADRequest *request; // @synthesize request=_request;
@property(nonatomic) __weak id <GADMRewardBasedVideoAdConnectorDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) GADAd *ad; // @synthesize ad=_ad;
@property(retain, nonatomic) NSArray *adNetworkConfigsFromAppConfiguration; // @synthesize adNetworkConfigsFromAppConfiguration=_adNetworkConfigsFromAppConfiguration;
@property(retain, nonatomic) GADMAdNetworkConfig *adNetworkConfig; // @synthesize adNetworkConfig=_adNetworkConfig;
@property(retain, nonatomic) GADMConfig *mediationConfig; // @synthesize mediationConfig=_mediationConfig;
- (void).cxx_destruct;
- (id)userKeywords;
- (id)userLocationDescription;
- (double)userLocationAccuracyInMeters;
- (double)userLongitude;
- (double)userLatitude;
- (id)userLocation;
- (_Bool)userHasLocation;
- (id)userBirthday;
- (long long)userGender;
- (id)childDirectedTreatment;
- (id)networkExtras;
- (_Bool)testMode;
- (id)credentials;
- (id)publisherId;
- (void)adapterDidCompletePlayingRewardBasedVideoAd:(id)arg1;
- (void)adapterWillLeaveApplication:(id)arg1;
- (void)adapterDidCloseRewardBasedVideoAd:(id)arg1;
- (void)adapterDidStartPlayingRewardBasedVideoAd:(id)arg1;
- (void)adapterDidOpenRewardBasedVideoAd:(id)arg1;
- (void)adapter:(id)arg1 didRewardUserWithReward:(id)arg2;
- (void)adapterDidGetAdClick:(id)arg1;
- (void)adapter:(id)arg1 didFailToLoadRewardBasedVideoAdwithError:(id)arg2;
- (void)adapterDidReceiveRewardBasedVideoAd:(id)arg1;
- (void)adapter:(id)arg1 didFailToSetUpRewardBasedVideoAdWithError:(id)arg2;
- (void)adapterDidSetUpRewardBasedVideoAd:(id)arg1;
- (id)userRequestAgent;
- (id)currentAdapterName;
- (id)adapterNames;
- (id)extras;
- (id)inlineAd;
- (void)pingVideoCompleteURLs;
- (void)pingFillURLsWithFillStatus:(id)arg1;
- (void)pingRewardedUserURLsWithReward:(id)arg1 userIdentifier:(id)arg2;
- (void)pingVideoStartPlayingURLs;
- (void)pingImpressionURLs;
- (void)pingClickURLs;
- (void)pingURLs:(id)arg1 defaultTemplate:(id)arg2 fillStatus:(id)arg3 eventType:(id)arg4;
- (void)presentRewardBasedVideoAdFromRootViewController:(id)arg1;
- (void)stopLoadingRewardBasedVideoAd;
- (void)requestRewardBasedVideoAd;
- (void)setUpWithMultipleAdNetworkConfigs;
- (void)setUpWithAdNetworkConfig;
- (void)setUpAdapter;
- (void)askAdapterToStopBeingDelegate;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADMediatedAd : NSObject
{
    NSMutableArray *_clickHandlers;
    NSMutableArray *_impressionHandlers;
    NSString *_adNetworkClassName;
}

@property(copy, nonatomic) NSString *adNetworkClassName; // @synthesize adNetworkClassName=_adNetworkClassName;
- (void).cxx_destruct;
- (void)addImpressionHandler:(CDUnknownBlockType)arg1;
- (void)addClickHandler:(CDUnknownBlockType)arg1;
- (void)reportImpression;
- (void)reportClick;
- (id)loadableAdForAdLoader:(id)arg1;
- (id)init;

@end

@interface GADMediatedBannerAd : GADMediatedAd
{
    GADMAdNetworkConnectorBanner *_connector;
    UIView *_view;
}

@property(readonly, nonatomic) UIView *view; // @synthesize view=_view;
- (void).cxx_destruct;
- (id)loadableAdForAdLoader:(id)arg1;
- (id)initWithView:(id)arg1 bannerConnector:(id)arg2;

@end

@interface GADMediatedNativeAdNotificationSource : NSObject
{
}

+ (void)mediatedNativeAdDidEndVideoPlayback:(id)arg1;
+ (void)mediatedNativeAdDidPauseVideo:(id)arg1;
+ (void)mediatedNativeAdDidPlayVideo:(id)arg1;
+ (void)mediatedNativeAdWillLeaveApplication:(id)arg1;
+ (void)mediatedNativeAdDidDismissScreen:(id)arg1;
+ (void)mediatedNativeAdWillDismissScreen:(id)arg1;
+ (void)mediatedNativeAdWillPresentScreen:(id)arg1;
+ (void)mediatedNativeAdDidRecordClick:(id)arg1;
+ (void)mediatedNativeAdDidRecordImpression:(id)arg1;

@end

@interface GADMediatedNativeAd : GADMediatedAd
{
    UIView *_renderedView;
    _Bool _adapterHandlesUserClicks;
    _Bool _adapterHandlesUserImpressions;
    _Bool _allowPublisherRenderedAttribution;
    id _ad;
}

@property(nonatomic) _Bool allowPublisherRenderedAttribution; // @synthesize allowPublisherRenderedAttribution=_allowPublisherRenderedAttribution;
@property(nonatomic) _Bool adapterHandlesUserImpressions; // @synthesize adapterHandlesUserImpressions=_adapterHandlesUserImpressions;
@property(nonatomic) _Bool adapterHandlesUserClicks; // @synthesize adapterHandlesUserClicks=_adapterHandlesUserClicks;
@property(retain, nonatomic) id ad; // @synthesize ad=_ad;
- (void).cxx_destruct;
- (void)reportMediatedAdShouldUntrackView:(id)arg1;
- (void)reportMediatedAdRenderedInView:(id)arg1 clickableAssetViews:(id)arg2 nonclickableAssetViews:(id)arg3 viewController:(id)arg4;
- (void)reportClickOnAssetWithWithName:(id)arg1 view:(id)arg2 viewController:(id)arg3;
- (void)reportAdNetworkImpression;
- (void)reportAdNetworkClick;
- (void)reportImpression;
- (id)loadableAdForAdLoader:(id)arg1;
- (Class)nativeAdClass;
- (void)dealloc;

@end

@interface GADMediatedUnifiedNativeAdNotificationSource : NSObject
{
}

+ (void)mediatedNativeAdDidEndVideoPlayback:(id)arg1;
+ (void)mediatedNativeAdDidPauseVideo:(id)arg1;
+ (void)mediatedNativeAdDidPlayVideo:(id)arg1;
+ (void)mediatedNativeAdWillLeaveApplication:(id)arg1;
+ (void)mediatedNativeAdDidDismissScreen:(id)arg1;
+ (void)mediatedNativeAdWillDismissScreen:(id)arg1;
+ (void)mediatedNativeAdWillPresentScreen:(id)arg1;
+ (void)mediatedNativeAdDidRecordClick:(id)arg1;
+ (void)mediatedNativeAdDidRecordImpression:(id)arg1;

@end

@interface GADMediationNativeAdMediaContent : NSObject <GADMediaContentDisplaying>
{
    UIView *_mediaView;
    GADMediationNativeAdVideoController *_videoController;
}

@property(readonly, nonatomic) GADMediationNativeAdVideoController *videoController; // @synthesize videoController=_videoController;
@property(readonly, nonatomic) UIView *mediaView; // @synthesize mediaView=_mediaView;
- (void).cxx_destruct;
- (void)loadVideoWithCompletionHandler:(CDUnknownBlockType)arg1;
- (id)initWithMediatedUnifiedNativeAd:(id)arg1;
- (id)initWithMediatedNativeContentAd:(id)arg1;
- (id)initWithMediatedNativeAppInstallAd:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADMediationNativeAdVideoController : NSObject <GADVideoControlling>
{
    id <NSObject> _mediatedNativeAdDidPlayVideoObserver;
    id <NSObject> _mediatedNativeAdDidPauseVideoObserver;
    id <NSObject> _mediatedNativeAdDidEndVideoPlaybackObserver;
    _Bool _hasVideoContent;
    id <GADMediationNativeAdVideoControllerDelegate> _delegate;
    long long _videoPlaybackState;
}

@property(nonatomic) long long videoPlaybackState; // @synthesize videoPlaybackState=_videoPlaybackState;
@property(nonatomic) _Bool hasVideoContent; // @synthesize hasVideoContent=_hasVideoContent;
@property(retain, nonatomic) id <GADMediationNativeAdVideoControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)stopObservingMediatedNativeAd;
- (void)observeMediatedNativeAd:(id)arg1;
- (_Bool)clickToExpandEnabled;
- (_Bool)customControlsEnabled;
- (double)aspectRatio;
- (void)setInitialStateWithVideoOptions:(id)arg1;
- (void)pause;
- (void)play;
- (void)setMute:(_Bool)arg1;
- (void)dealloc;
- (id)initWithMediatedUnifiedNativeAd:(id)arg1;
- (id)initWithMediatedNativeContentAd:(id)arg1;
- (id)initWithMediatedNativeAppInstallAd:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADAdURLStash : NSObject
{
    NSObject<OS_dispatch_queue> *_lockQueue;
    NSMutableDictionary *_adViewResourceCollections;
    NSMutableDictionary *_mainDocumentURLAdViewKeys;
    NSMutableDictionary *_adViewLoadingFrameCount;
}

+ (id)sharedInstance;
- (void).cxx_destruct;
- (id)adViewForMainDocumentURL:(id)arg1;
- (id)adViewForURLRequest:(id)arg1;
- (_Bool)hasLoadingAd;
- (id)responseBodyForRequest:(id)arg1;
- (_Bool)shouldInterceptRequest:(id)arg1;
- (void)removeInformationForAdViewKey:(id)arg1 canonicalMainDocumentURL:(id)arg2;
- (void)adView:(id)arg1 didAttemptAutoClickRequest:(id)arg2;
- (void)adView:(id)arg1 didClickThroughToURL:(id)arg2;
- (void)adViewDidFinishLayout:(id)arg1;
- (void)adViewDidFinishLoad:(id)arg1;
- (void)adViewDidStartLoad:(id)arg1;
- (void)removeAdView:(id)arg1;
- (void)adView:(id)arg1 request:(id)arg2 didReceiveData:(id)arg3;
- (void)adView:(id)arg1 request:(id)arg2 willReceiveResponse:(id)arg3;
- (void)adView:(id)arg1 willLoadURLRequest:(id)arg2;
- (id)collectionForAdView:(id)arg1;
- (void)adViewWillLoadRootContent:(id)arg1;
- (id)init;

@end

@interface GADAdViewResourceCollection : NSObject
{
    NSMutableArray *_resources;
    NSMutableDictionary *_requestIndexForCanonicalURL;
    NSMutableDictionary *_requestIndicesForRedirectToURL;
    NSData *_imageData;
    NSObject<OS_dispatch_queue> *_lockQueue;
    NSURL *_mainDocumentURL;
    GADSafeBrowsingReporter *_safeBrowsingReporter;
    NSMutableArray *_clickthroughURLs;
    GADAdView *_adView;
}

+ (void)setGreedyCollectionEnabled:(_Bool)arg1;
@property(readonly, nonatomic) __weak GADAdView *adView; // @synthesize adView=_adView;
- (void).cxx_destruct;
- (id)resourceDataForRequest:(id)arg1;
- (id)dictionaryRepresentation;
@property(readonly, nonatomic, getter=isMalicious) _Bool malicious;
- (void)adViewDidFinishLayout;
- (void)addAutoClickRequest:(id)arg1;
- (void)addClickthroughURL:(id)arg1;
- (id)resourceForRequest:(id)arg1;
- (void)addResourceData:(id)arg1 forRequest:(id)arg2;
- (void)addURLResponse:(id)arg1 forRequest:(id)arg2;
- (void)addURLRequest:(id)arg1;
- (void)addResourceRequest:(id)arg1;
- (void)addParentForResource:(id)arg1;
- (id)referringResourceForRequest:(id)arg1;
- (id)redirectSourceForRequest:(id)arg1;
- (void)addRedirectDestinationForResource:(id)arg1;
- (void)updateSafeBrowsingReporter;
@property(copy) NSURL *mainDocumentURL;
- (id)init;
- (id)initWithAdView:(id)arg1;

@end

@interface GADCachedURLResponse : NSObject
{
    NSCachedURLResponse *_cachedURLResponse;
    NSDate *_expirationDate;
    NSURL *_destinationURL;
}

@property(copy, nonatomic) NSURL *destinationURL; // @synthesize destinationURL=_destinationURL;
@property(copy, nonatomic) NSDate *expirationDate; // @synthesize expirationDate=_expirationDate;
- (void).cxx_destruct;
@property(readonly, copy, nonatomic) NSData *data;
@property(readonly, copy, nonatomic) NSURLResponse *response;
- (id)initWithResponse:(id)arg1 data:(id)arg2 expirationDate:(id)arg3 destinationURL:(id)arg4;

@end

@interface GADClickTracker : NSObject
{
    unsigned long long _backgroundTaskID;
    _Bool _hasTracked;
    id <GADClickTrackerDelegate> _delegate;
}

@property(readonly, nonatomic) _Bool hasTracked; // @synthesize hasTracked=_hasTracked;
@property(nonatomic) __weak id <GADClickTrackerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)endBackgroundTask;
- (void)beginBackgroundTask;
- (void)URLTrackingDidEnd:(id)arg1 success:(_Bool)arg2;
- (void)trackURL:(id)arg1;
- (void)reset;
- (void)dealloc;
- (id)init;

@end

@interface GADClickTrackerCollection : NSObject <GADClickTrackerDelegate>
{
    NSMutableSet *_trackers;
}

+ (id)sharedInstance;
@property(retain, nonatomic) NSMutableSet *trackers; // @synthesize trackers=_trackers;
- (void).cxx_destruct;
- (void)trackerDidFinishTracking:(id)arg1;
- (void)cleanupTrackers;
- (void)trackURL:(id)arg1;
- (void)trackURLs:(id)arg1;
- (void)dealloc;
- (id)init;
- (void)trackMediationURLsFromTemplates:(id)arg1 defaultTemplate:(id)arg2 networkID:(id)arg3 allocationID:(id)arg4 qData:(id)arg5 appKey:(id)arg6 refresh:(_Bool)arg7 durations:(id)arg8 exitCodes:(id)arg9 fillStatus:(id)arg10 eventType:(id)arg11;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADMRAIDInterceptor : NSObject
{
    NSObject<OS_dispatch_queue> *_lockQueue;
    NSString *_bannerImplementationURLString;
    NSString *_expandedBannerImplementationURLString;
    NSString *_interstitialImplementationURLString;
    NSSet *_implementationURLStrings;
    _Bool _enabled;
}

+ (id)sharedInstance;
- (void).cxx_destruct;
@property(copy) NSString *interstitialImplementationURLString;
@property(copy) NSString *expandedBannerImplementationURLString;
@property(copy) NSString *bannerImplementationURLString;
- (_Bool)shouldRedirectRequest:(id)arg1;
- (_Bool)canRedirect;
- (void)updateImplementationURLStrings;
- (_Bool)URLisImplementationURL:(id)arg1;
- (void)setEnabled:(_Bool)arg1;
- (id)init;
- (id)MRAIDURLStringForAdView:(id)arg1;

@end

@interface GADNetworkLogger : NSObject
{
    NSObject<OS_dispatch_queue> *_logQueue;
}

+ (id)sharedInstance;
- (void).cxx_destruct;
- (void)logNetworkError:(id)arg1 components:(id)arg2;
- (void)logResponseBody:(id)arg1 withContent:(_Bool)arg2 components:(id)arg3;
- (void)logResponseHeader:(id)arg1 components:(id)arg2;
- (void)logRequest:(id)arg1 components:(id)arg2 requestOnly:(_Bool)arg3;
- (void)logEvent:(id)arg1 timestamp:(id)arg2 components:(id)arg3 userInfo:(id)arg4;
- (void)logMessage:(id)arg1;
@property(readonly, getter=isEnabled) _Bool enabled;
- (id)init;

@end

@interface GADPinger : NSObject
{
    NSObject<OS_dispatch_queue> *_lockQueue;
    GADScheduler *_scheduler;
    long long _maximumRetryURLCount;
    long long _URLRetryCount;
    NSMutableArray *_retryGroupKeys;
    NSMutableSet *_pingedURLs;
    GADWebViewPinger *_webViewPinger;
    _Bool _reloadRequired;
}

+ (id)sharedInstance;
- (void).cxx_destruct;
- (void)removeRetryURLString:(id)arg1 retryGroupKey:(id)arg2;
- (void)storeRetryURLString:(id)arg1 retryGroupKey:(id)arg2;
- (void)start;
- (void)pingWithRetryGroupKey:(id)arg1 URL:(id)arg2 retryURLString:(id)arg3;
- (void)pingRetryURLs;
- (void)sendPing:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)pingURLString:(id)arg1 queue:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (id)init;

@end

@interface GADURLConnectionRedirect : NSObject
{
    NSURLResponse *_response;
    NSURLRequest *_request;
}

@property(readonly, copy, nonatomic) NSURLRequest *request; // @synthesize request=_request;
@property(readonly, copy, nonatomic) NSURLResponse *response; // @synthesize response=_response;
- (void).cxx_destruct;
- (id)initWithResponse:(id)arg1 request:(id)arg2;

@end

@interface GADURLConnection : NSObject <NSURLConnectionDataDelegate>
{
    _Bool _isInProgress;
    _Bool _allowCache;
    NSURL *_sourceURL;
    NSURL *_destinationURL;
    id <GADURLConnectionDelegate> _delegate;
    NSURLConnection *_connection;
    NSURLResponse *_response;
    NSMutableData *_receivedData;
}

+ (void)clearCache;
+ (id)cacheKeyForURL:(id)arg1;
+ (id)defaultCachePath;
+ (id)memoryCache;
@property(retain, nonatomic) NSMutableData *receivedData; // @synthesize receivedData=_receivedData;
@property(retain, nonatomic) NSURLResponse *response; // @synthesize response=_response;
@property(retain, nonatomic) NSURLConnection *connection; // @synthesize connection=_connection;
@property(nonatomic) __weak id <GADURLConnectionDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) _Bool allowCache; // @synthesize allowCache=_allowCache;
@property(copy, nonatomic) NSURL *destinationURL; // @synthesize destinationURL=_destinationURL;
@property(copy, nonatomic) NSURL *sourceURL; // @synthesize sourceURL=_sourceURL;
@property(nonatomic) _Bool isInProgress; // @synthesize isInProgress=_isInProgress;
- (void).cxx_destruct;
- (void)connection:(id)arg1 didFailWithError:(id)arg2;
- (void)connectionDidFinishLoading:(id)arg1;
- (void)connection:(id)arg1 didReceiveData:(id)arg2;
- (id)connection:(id)arg1 willCacheResponse:(id)arg2;
- (void)connection:(id)arg1 didReceiveResponse:(id)arg2;
- (id)connection:(id)arg1 willSendRequest:(id)arg2 redirectResponse:(id)arg3;
- (_Bool)tryToStoreResponseAndData;
- (id)cachedResponseForURL:(id)arg1;
- (void)dealloc;
- (void)cancel;
- (void)stop;
- (_Bool)startWithRequestURL:(id)arg1 delegate:(id)arg2 error:(id *)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADURLProtocol : NSURLProtocol <NSURLConnectionDelegate>
{
    NSURL *_substituteURL;
    NSURLConnection *_connection;
    NSThread *_clientThread;
    NSString *_adRequestIdentifier;
    NSArray *_requestIdentifiers;
}

+ (id)canonicalRequestForRequest:(id)arg1;
+ (_Bool)canInitWithRequest:(id)arg1;
- (void).cxx_destruct;
- (id)connection:(id)arg1 willSendRequest:(id)arg2 redirectResponse:(id)arg3;
- (void)connection:(id)arg1 didReceiveResponse:(id)arg2;
- (void)connectionDidFinishLoading:(id)arg1;
- (void)connection:(id)arg1 didReceiveData:(id)arg2;
- (void)connection:(id)arg1 didFailWithError:(id)arg2;
- (void)stopLoading;
- (void)startLoading;
- (void)configureMRAIDLocationWithRequest:(id)arg1;
- (id)initWithRequest:(id)arg1 cachedResponse:(id)arg2 client:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADURLPingData : NSObject
{
    NSArray *_logComponents;
    NSString *_URLString;
    CDUnknownBlockType _completionBlock;
}

@property(readonly, copy, nonatomic) CDUnknownBlockType completionBlock; // @synthesize completionBlock=_completionBlock;
@property(readonly, copy, nonatomic) NSString *URLString; // @synthesize URLString=_URLString;
@property(readonly, nonatomic) NSArray *logComponents; // @synthesize logComponents=_logComponents;
- (void).cxx_destruct;
- (id)initWithURLString:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;

@end

@interface GADWebViewPinger : NSObject <WKNavigationDelegate>
{
    WKWebView *_webView;
    _Bool _receivedValidResponse;
    NSMutableArray *_webViewPingQueue;
}

+ (void)initialize;
+ (_Bool)isAvailable;
- (void).cxx_destruct;
- (void)webView:(id)arg1 didFailNavigation:(id)arg2 withError:(id)arg3;
- (void)webView:(id)arg1 didFailProvisionalNavigation:(id)arg2 withError:(id)arg3;
- (void)webView:(id)arg1 decidePolicyForNavigationResponse:(id)arg2 decisionHandler:(CDUnknownBlockType)arg3;
- (void)webView:(id)arg1 decidePolicyForNavigationAction:(id)arg2 decisionHandler:(CDUnknownBlockType)arg3;
- (void)loadFinishedWithError:(id)arg1;
- (void)sendNextPing;
- (void)pingURLString:(id)arg1 queue:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADBlockTimerTarget : NSObject
{
    CDUnknownBlockType _block;
}

@property(copy, nonatomic) CDUnknownBlockType block; // @synthesize block=_block;
- (void).cxx_destruct;
- (void)timerFired:(id)arg1;

@end

@interface GADNetwork : NSObject
{
    unsigned long long _networkType;
    unsigned long long _lastKnownNetworkType;
    NSObject<OS_dispatch_queue> *_lockQueue;
    NSObject<OS_dispatch_queue> *_enableCheckingQueue;
    struct __SCNetworkReachability *_networkReachabilityRef;
    id <NSObject> _radioAccessTechnologyChangeObserver;
    CTTelephonyNetworkInfo *_telephonyNetworkInfo;
    NSString *_radioAccessTechnology;
    NSString *_lastKnownRadioAccessTechnology;
    NSString *_userAgentString;
}

+ (id)sharedInstance;
- (void).cxx_destruct;
@property(copy) NSString *userAgentString;
- (void)setRadioAccessTechnology:(id)arg1;
- (void)setNetworkTypeFromFlags:(unsigned int)arg1;
- (void)setNetworkType:(unsigned long long)arg1;
- (id)requestDictionary;
- (void)enableRadioAccessTechnologyChecking;
- (void)dealloc;
- (id)init;

@end

@interface GADSchedulerTask : NSObject
{
    CDUnknownBlockType _block;
    NSObject<OS_dispatch_queue> *_queue;
}

@property(retain, nonatomic) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
@property(copy, nonatomic) CDUnknownBlockType block; // @synthesize block=_block;
- (void).cxx_destruct;

@end

@interface GADScheduler : NSObject
{
    long long _taskID;
    NSMutableDictionary *_blocks;
    double _interval;
    NSTimer *_timer;
}

- (void).cxx_destruct;
- (void)stop;
- (void)start;
- (void)executeBlocks;
- (void)unscheduleTaskWithID:(long long)arg1;
- (long long)taskIDScheduledOnQueue:(id)arg1 block:(CDUnknownBlockType)arg2;
- (id)description;
- (void)dealloc;
- (id)initWithInterval:(double)arg1;
- (id)init;

@end

@interface GADLocation : NSObject <NSCopying>
{
    double _timestamp;
    NSDictionary *_dictionaryRepresentation;
    NSString *_locationDescription;
    double _latitude;
    double _longitude;
    double _accuracy;
}

@property(readonly, nonatomic) double accuracy; // @synthesize accuracy=_accuracy;
@property(readonly, nonatomic) double longitude; // @synthesize longitude=_longitude;
@property(readonly, nonatomic) double latitude; // @synthesize latitude=_latitude;
- (void).cxx_destruct;
@property(readonly, copy, nonatomic) GADLocation *coarseLocation;
@property(readonly, copy, nonatomic) NSDictionary *dictionaryRepresentation;
@property(readonly, nonatomic) _Bool isPreciseLocation;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
@property(readonly, copy, nonatomic) NSString *locationDescription;
- (id)description;
- (id)initWithDictionary:(id)arg1;
- (id)initWithLocationDescription:(id)arg1;
- (id)initWithLatitude:(double)arg1 longitude:(double)arg2 accuracy:(double)arg3;

@end

@interface GADLocationService : NSObject <CLLocationManagerDelegate>
{
    CLLocationManager *_locationManager;
    GADLocation *_location;
    NSObject<OS_dispatch_queue> *_locationDataQueue;
    _Bool _featureEnabled;
    _Bool _publisherAuthorized;
}

+ (id)sharedInstance;
- (void).cxx_destruct;
- (void)locationManager:(id)arg1 didFailWithError:(id)arg2;
- (void)locationManager:(id)arg1 didUpdateLocations:(id)arg2;
- (void)locationManager:(id)arg1 didChangeAuthorizationStatus:(int)arg2;
- (void)setPublisherAuthorized:(_Bool)arg1;
- (void)setFeatureEnabled:(_Bool)arg1;
- (void)updateLocation;
- (void)disable;
- (void)startUpdatingLocation;
@property(readonly, copy, nonatomic) GADLocation *location;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADWiggleGestureRecognizer : UIGestureRecognizer
{
    double _distanceMoved;
    long long _gestureState;
}

- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (_Bool)isMovementInYAxisWithCurrentPoint:(struct CGPoint)arg1 previousPoint:(struct CGPoint)arg2;
- (void)reset;

@end

@interface GADInAppPurchaseProductCache : NSObject
{
    NSMutableDictionary *_validProductIDs;
    NSObject<OS_dispatch_queue> *_lockQueue;
}

+ (id)sharedInstance;
- (void).cxx_destruct;
- (void)requestProductsWithProductIdentifiers:(id)arg1 queue:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (id)cachedProductForProductID:(id)arg1;
- (id)init;

@end

@interface GADProductsRequest : NSObject <SKProductsRequestDelegate>
{
    SKProductsRequest *_productsRequest;
    CDUnknownBlockType _completionHandler;
    NSObject<OS_dispatch_queue> *_queue;
}

+ (void)requestProductsWithProductIdentifiers:(id)arg1 queue:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void).cxx_destruct;
- (void)request:(id)arg1 didFailWithError:(id)arg2;
- (void)productsRequest:(id)arg1 didReceiveResponse:(id)arg2;
- (void)requestWithQueue:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (id)initWithProductIdentifiers:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DFPBannerViewOptions : GADAdLoaderOptions
{
    _Bool _enableManualImpressions;
    id <GADAppEventDelegate> _appEventDelegate;
    id <GADAdSizeDelegate> _adSizeDelegate;
}

@property(nonatomic) _Bool enableManualImpressions; // @synthesize enableManualImpressions=_enableManualImpressions;
@property(nonatomic) __weak id <GADAdSizeDelegate> adSizeDelegate; // @synthesize adSizeDelegate=_adSizeDelegate;
@property(nonatomic) __weak id <GADAppEventDelegate> appEventDelegate; // @synthesize appEventDelegate=_appEventDelegate;
- (void).cxx_destruct;
- (id)requestParameters;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface GADAdLoaderOptions : NSObject <NSCopying>
{
}

- (id)requestParameters;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface GADCorrelatorAdLoaderOptions : GADAdLoaderOptions
{
    GADCorrelator *_correlator;
}

@property(retain, nonatomic) GADCorrelator *correlator; // @synthesize correlator=_correlator;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface GADMultipleAdsAdLoaderOptions : GADAdLoaderOptions
{
    long long _numberOfAds;
}

@property(nonatomic) long long numberOfAds; // @synthesize numberOfAds=_numberOfAds;
- (id)requestParameters;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)init;

@end

@interface GADNativeAdImageAdLoaderOptions : GADAdLoaderOptions
{
    _Bool _disableImageLoading;
    _Bool _shouldRequestMultipleImages;
    long long _preferredImageOrientation;
}

@property(nonatomic) long long preferredImageOrientation; // @synthesize preferredImageOrientation=_preferredImageOrientation;
@property(nonatomic) _Bool shouldRequestMultipleImages; // @synthesize shouldRequestMultipleImages=_shouldRequestMultipleImages;
@property(nonatomic) _Bool disableImageLoading; // @synthesize disableImageLoading=_disableImageLoading;
- (id)requestParameters;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface GADNativeAdViewAdOptions : GADAdLoaderOptions
{
    long long _preferredAdChoicesPosition;
}

@property(nonatomic) long long preferredAdChoicesPosition; // @synthesize preferredAdChoicesPosition=_preferredAdChoicesPosition;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)init;

@end

@interface GADMRAIDResizeProperties : NSObject
{
    _Bool _allowOffscreen;
    long long _customClosePosition;
    struct CGSize _size;
    struct CGVector _offset;
}

+ (_Bool)isContentFrameValid:(struct CGRect)arg1 forBounds:(struct CGRect)arg2 allowOffscreen:(_Bool)arg3 closeButtonPosition:(long long)arg4;
+ (unsigned long long)autoresizingMaskForClosePosition:(long long)arg1;
+ (struct CGRect)closeButtonRectForPosition:(long long)arg1 contentFrame:(struct CGRect)arg2;
@property(nonatomic) _Bool allowOffscreen; // @synthesize allowOffscreen=_allowOffscreen;
@property(nonatomic) long long customClosePosition; // @synthesize customClosePosition=_customClosePosition;
@property(nonatomic) struct CGVector offset; // @synthesize offset=_offset;
@property(nonatomic) struct CGSize size; // @synthesize size=_size;
- (id)initWithDictionary:(id)arg1;

@end

@interface GADBlockInvocation : NSObject
{
    CDUnknownBlockType _block;
}

- (void).cxx_destruct;
- (void)invokeBlockWithObject:(id)arg1;
- (id)initWithBlock:(CDUnknownBlockType)arg1;

@end

@interface GADAdViewResourceRequest : NSObject
{
    NSArray *_equalityHints;
    NSURL *_URL;
    NSURL *_mainDocumentURL;
    NSString *_method;
    NSDictionary *_headers;
    NSData *_body;
}

@property(readonly, copy, nonatomic) NSData *body; // @synthesize body=_body;
@property(readonly, copy, nonatomic) NSDictionary *headers; // @synthesize headers=_headers;
@property(readonly, copy, nonatomic) NSString *method; // @synthesize method=_method;
@property(readonly, copy, nonatomic) NSURL *mainDocumentURL; // @synthesize mainDocumentURL=_mainDocumentURL;
@property(readonly, copy, nonatomic) NSURL *URL; // @synthesize URL=_URL;
- (void).cxx_destruct;
- (id)dictionaryRepresentationExcludingHeaders:(id)arg1;
- (id)resourceRequestWithHeaders:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)description;
- (id)initWithRequest:(id)arg1;
- (id)initWithResourceRequest:(id)arg1;

@end

@interface GADAdViewResource : NSObject
{
    NSMutableArray *_children;
    NSMutableData *_content;
    NSObject<OS_dispatch_queue> *_networkAddressQueue;
    NSString *_networkAddress;
    GADAdViewResourceRequest *_request;
    long long _sequenceNumber;
    GADAdViewResource *_parent;
    long long _type;
    NSHTTPURLResponse *_response;
}

@property(readonly, copy, nonatomic) NSData *content; // @synthesize content=_content;
@property(copy, nonatomic) NSHTTPURLResponse *response; // @synthesize response=_response;
@property(nonatomic) long long type; // @synthesize type=_type;
@property(readonly, nonatomic) NSArray *children; // @synthesize children=_children;
@property(readonly, nonatomic) __weak GADAdViewResource *parent; // @synthesize parent=_parent;
@property(readonly, nonatomic) long long sequenceNumber; // @synthesize sequenceNumber=_sequenceNumber;
@property(readonly, copy, nonatomic) GADAdViewResourceRequest *request; // @synthesize request=_request;
- (void).cxx_destruct;
- (id)dictionaryRepresentationExcludingHeaders:(id)arg1;
- (id)description;
- (void)addRequestHeaders:(id)arg1;
- (void)appendContent:(id)arg1;
- (void)addChild:(id)arg1;
- (id)initWithRequest:(id)arg1 sequenceNumber:(long long)arg2;

@end

@interface GADThreadStop : NSObject
{
}

- (void)stopCurrentRunLoop;

@end

@interface GADAudioSession : NSObject
{
    NSObject<OS_dispatch_queue> *_lockQueue;
    _Bool _audioSessionStateSaved;
    NSString *_savedAudioSessionCategory;
    NSString *_savedAudioSessionMode;
    unsigned long long _savedAudioSessionCategoryOption;
    _Bool _enabled;
    _Bool _wasOtherAppAudioInterrupted;
}

+ (id)sharedInstance;
- (void).cxx_destruct;
- (void)resumeBackgroundAppAudioIfInterrupted;
- (void)setMixable:(_Bool)arg1 userInitiated:(_Bool)arg2;
- (void)restoreState;
- (void)disable;
- (void)enable;
- (id)init;

@end

@interface GADNotification : NSObject
{
    NSString *_name;
    NSDictionary *_parameters;
}

+ (_Bool)isNotificationURL:(id)arg1;
@property(readonly, copy, nonatomic) NSDictionary *parameters; // @synthesize parameters=_parameters;
@property(readonly, copy, nonatomic) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;
- (id)description;
- (id)initWithNotificationURL:(id)arg1;
- (id)initWithName:(id)arg1 parameters:(id)arg2;
- (id)init;

@end

@interface GADAdFetcher : NSObject <GADURLConnectionDelegate>
{
    _Bool _hasStartedFetch;
    _Bool _hasNotifiedDelegate;
    NSString *_signedInAdsToken;
    NSUUID *_currentNetworkRequestIdentifier;
    _Bool _adConnectionHasCompleted;
    NSRecursiveLock *_recursiveLock;
    GADAd *_ad;
    GADRequest *_request;
    id <GADAdFetcherDelegate> _delegate;
    GADTiming *_timer;
    GADURLConnection *_adConnection;
}

@property(nonatomic) _Bool adConnectionHasCompleted; // @synthesize adConnectionHasCompleted=_adConnectionHasCompleted;
@property(retain, nonatomic) GADURLConnection *adConnection; // @synthesize adConnection=_adConnection;
@property(retain, nonatomic) GADTiming *timer; // @synthesize timer=_timer;
@property(nonatomic) __weak id <GADAdFetcherDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) GADRequest *request; // @synthesize request=_request;
@property(retain, nonatomic) GADAd *ad; // @synthesize ad=_ad;
@property(retain, nonatomic) NSRecursiveLock *recursiveLock; // @synthesize recursiveLock=_recursiveLock;
- (void).cxx_destruct;
- (void)connection:(id)arg1 loadDidFail:(id)arg2 httpStatusCode:(long long)arg3;
- (void)connection:(id)arg1 loadDidFinish:(id)arg2 baseURL:(id)arg3;
- (void)connection:(id)arg1 loadDidReceiveCachedResponse:(id)arg2;
- (_Bool)connection:(id)arg1 loadShouldUseCacheForResponse:(id)arg2;
- (void)connection:(id)arg1 willPerformRedirect:(id)arg2;
- (id)connection:(id)arg1 shouldRedirectToURL:(id)arg2;
- (unsigned long long)adResponseTypeFromHeaders:(id)arg1 requestError:(id *)arg2;
- (void)processHTTPHeaders:(id)arg1;
- (void)resourceFailedToLoadWithError:(id)arg1 responseCode:(unsigned long long)arg2;
- (void)markFetchComplete;
- (void)markFetchStart;
- (void)completedURLConnection;
- (_Bool)startFetchWithRequestURL:(id)arg1 responseHeaders:(id)arg2 error:(id *)arg3;
- (id)logComponents;
- (_Bool)fetchRequestURL:(id)arg1 delegate:(id)arg2 responseHeaders:(id)arg3 responseAd:(id)arg4 error:(id *)arg5;
- (_Bool)fetchRequestURL:(id)arg1 delegate:(id)arg2 error:(id *)arg3;
- (_Bool)fetchRemainingContentForAd:(id)arg1 headers:(id)arg2 delegate:(id)arg3 error:(id *)arg4;
- (void)cancel;
- (void)dealloc;
- (id)init;

@end

@interface GADAdType : NSObject
{
    _Bool _isRewardBasedVideoAd;
    _Bool _isInterstitial;
    struct GADAdSize _adSize;
}

+ (id)interstitialAdType;
+ (id)bannerAdTypeForSize:(struct GADAdSize)arg1;
@property(nonatomic) struct GADAdSize adSize; // @synthesize adSize=_adSize;
@property(readonly, nonatomic) _Bool isInterstitial; // @synthesize isInterstitial=_isInterstitial;
- (id)description;
- (_Bool)isValid;
- (_Bool)isRewardBasedVideoAd;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)initForRewardBasedVideoAd;
- (id)initForInterstitial;
- (id)initWithAdSize:(struct GADAdSize)arg1;
- (id)init;

@end

@interface GADExtras : NSObject <GADAdNetworkExtras>
{
    NSDictionary *_additionalParameters;
}

@property(copy, nonatomic) NSDictionary *additionalParameters; // @synthesize additionalParameters=_additionalParameters;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADSlot : NSObject <GADActiveViewMonitorDelegate, GADAdViewActiveViewMonitoring, GADImpressionMonitorDelegate, GADMRAIDEventHandling, GADSDKCoreControllerDelegate, GADAdFetcherDelegate>
{
    long long _state;
    unsigned long long _activeViewID;
    GADImpressionMonitor *_impressionMonitor;
    GADMAdManager *_mediationManager;
    _Bool _slotHasAttemptedAnAdRequestAtLeastOnce;
    GADClearcutLogger *_logger;
    _Bool _isListeningToDeviceOrientationChangeEvent;
    struct CGRect _usableInterfaceFrame;
    struct CGRect _creativeWebViewFrame;
    struct CGRect _creativeAdFrame;
    GADAd *_pendingCustomRenderingAd;
    GADCSITimeRecorder *_adLoadActionTimeRecorder;
    GADActiveViewMonitor *_activeViewMonitor;
    unsigned long long _measurementReceivers;
    _Bool _viewHasMadeImpression;
    _Bool _monitoredViewVisible;
    GADCSI *_CSI;
    _Bool _hasAutoRefreshed;
    _Bool _reloadable;
    _Bool _manualImpressionsEnabled;
    id <GADSlotDelegate> _slotDelegate;
    id <GADSlotAdLoadDelegate> _adLoadDelegate;
    id <GADSlotAdEventDelegate> _adEventDelegate;
    id <GADSlotAdResponseDelegate> _adResponseDelegate;
    id <GADSlotAdKeyDelegate> _adKeyDelegate;
    NSString *_adUnitID;
    GADAd *_ad;
    GADAdType *_adType;
    GADRequest *_loadingRequest;
    GADCorrelator *_correlator;
    NSNumber *_timeLastLoaded;
    GADAdView *_adView;
    GADSlotStatistics *_slotStats;
    GADIntermission *_intermission;
    id _placement;
    OMIDAdSession *_adSession;
    GADBannerAdViewDelegate *_adViewDelegate;
    GADAd *_loadingAd;
    GADAdFetcher *_adFetcher;
    NSDictionary *_applicationStatistics;
    NSSet *_pendingAdStatistics;
    NSTimer *_reloadTimer;
    double _reloadInterval;
    NSString *_requestID;
    GADRequest *_nextRequest;
    GADSDKCoreWebView *_SDKCoreWebView;
    UIView *_activeViewMonitoredView;
    struct CGSize _newAdSize;
}

+ (void)initialize;
@property(retain, nonatomic) UIView *activeViewMonitoredView; // @synthesize activeViewMonitoredView=_activeViewMonitoredView;
@property(retain, nonatomic) GADSDKCoreWebView *SDKCoreWebView; // @synthesize SDKCoreWebView=_SDKCoreWebView;
@property(nonatomic) struct CGSize newAdSize; // @synthesize newAdSize=_newAdSize;
@property(copy, nonatomic) GADRequest *nextRequest; // @synthesize nextRequest=_nextRequest;
@property(copy, nonatomic) NSString *requestID; // @synthesize requestID=_requestID;
@property(nonatomic) double reloadInterval; // @synthesize reloadInterval=_reloadInterval;
@property(retain, nonatomic) NSTimer *reloadTimer; // @synthesize reloadTimer=_reloadTimer;
@property(copy, nonatomic) NSSet *pendingAdStatistics; // @synthesize pendingAdStatistics=_pendingAdStatistics;
@property(copy, nonatomic) NSDictionary *applicationStatistics; // @synthesize applicationStatistics=_applicationStatistics;
@property(retain, nonatomic) GADAdFetcher *adFetcher; // @synthesize adFetcher=_adFetcher;
@property(retain, nonatomic) GADAd *loadingAd; // @synthesize loadingAd=_loadingAd;
@property(retain, nonatomic) GADBannerAdViewDelegate *adViewDelegate; // @synthesize adViewDelegate=_adViewDelegate;
@property(retain, nonatomic) OMIDAdSession *adSession; // @synthesize adSession=_adSession;
@property(readonly, nonatomic) GADCSI *CSI; // @synthesize CSI=_CSI;
@property(nonatomic) __weak id placement; // @synthesize placement=_placement;
@property(nonatomic) __weak GADIntermission *intermission; // @synthesize intermission=_intermission;
@property(readonly, nonatomic) GADSlotStatistics *slotStats; // @synthesize slotStats=_slotStats;
@property(readonly, nonatomic) GADAdView *adView; // @synthesize adView=_adView;
@property(retain, nonatomic) NSNumber *timeLastLoaded; // @synthesize timeLastLoaded=_timeLastLoaded;
@property(retain, nonatomic) GADCorrelator *correlator; // @synthesize correlator=_correlator;
@property(copy, nonatomic) GADRequest *loadingRequest; // @synthesize loadingRequest=_loadingRequest;
@property(retain, nonatomic) GADAdType *adType; // @synthesize adType=_adType;
@property(readonly, nonatomic) GADAd *ad; // @synthesize ad=_ad;
@property(nonatomic) _Bool manualImpressionsEnabled; // @synthesize manualImpressionsEnabled=_manualImpressionsEnabled;
@property(nonatomic) _Bool reloadable; // @synthesize reloadable=_reloadable;
@property(nonatomic) _Bool hasAutoRefreshed; // @synthesize hasAutoRefreshed=_hasAutoRefreshed;
@property(copy, nonatomic) NSString *adUnitID; // @synthesize adUnitID=_adUnitID;
@property(nonatomic) __weak id <GADSlotAdKeyDelegate> adKeyDelegate; // @synthesize adKeyDelegate=_adKeyDelegate;
@property(nonatomic) __weak id <GADSlotAdResponseDelegate> adResponseDelegate; // @synthesize adResponseDelegate=_adResponseDelegate;
@property(nonatomic) __weak id <GADSlotAdEventDelegate> adEventDelegate; // @synthesize adEventDelegate=_adEventDelegate;
@property(nonatomic) __weak id <GADSlotAdLoadDelegate> adLoadDelegate; // @synthesize adLoadDelegate=_adLoadDelegate;
@property(nonatomic) __weak id <GADSlotDelegate> slotDelegate; // @synthesize slotDelegate=_slotDelegate;
- (void).cxx_destruct;
- (void)adFetcher:(id)arg1 didFailToFetchAd:(id)arg2 withError:(id)arg3 responseCode:(unsigned long long)arg4;
- (void)adFetcher:(id)arg1 didFetchAd:(id)arg2;
- (void)resetLogger;
- (void)makeRootLoggingObject;
- (struct GADAdSize)adSizeForMultiSizeAd;
- (void)setViewForAdUsingView:(id)arg1;
- (_Bool)validateAdResponseWithAdSize:(struct GADAdSize)arg1 andValidAdSizes:(id)arg2;
- (void)processCustomRenderingAdResponse:(id)arg1;
- (void)renderPendingCustomRenderingAd;
- (_Bool)isMRAIDEnabled;
- (void)sendCSIAdLoadTimings;
- (void)pingManualTrackingURLs;
- (void)pingDelayedImpressionURLs;
- (void)pingImpressionURLs;
- (void)pingClickURLs;
- (void)startImpressionMonitoring;
- (void)processStandardAdResponse:(id)arg1;
- (void)finishedLoadingAdResponse:(id)arg1;
- (id)gestureClickURLWithURL:(id)arg1;
- (_Bool)isGoogleAdURL:(id)arg1;
- (void)cancelPendingAndFutureActions;
- (void)cancelPendingActions;
- (void)cancelLoad;
- (void)invalidate;
@property(readonly, copy) NSString *description;
- (void)dealloc;
- (id)init;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithFrame:(struct CGRect)arg1 webViewClassKey:(id)arg2;
- (void)loadAd:(id)arg1 headers:(id)arg2;
- (void)resetRequestState;
- (void)interstitialViewWillDisappear;
- (void)interstitialViewWillAppear;
- (void)ownerViewDidMoveToWindow:(id)arg1;
- (void)mediatedAdNetworkAutoRefreshed;
- (void)logRequestTestAdInstructions;
- (void)loadNextRequestWithAutoRefresh:(_Bool)arg1;
- (void)loadRequest:(id)arg1;
- (_Bool)shouldMakeRequest:(id)arg1;
- (_Bool)isMakingRequest;
- (void)adDidRelinquishFullScreen:(id)arg1;
- (void)adWillPresentFullScreen:(id)arg1;
- (void)appDidBecomeActive:(id)arg1;
- (void)appWillBecomeInactive:(id)arg1;
- (void)scheduleAdReloadTimer;
- (void)deactivateReloadTimer;
- (void)reloadCurrentRequest;
- (void)setAdType:(id)arg1 andReloadRequest:(_Bool)arg2;
- (_Bool)canEnableActiveViewMonitoring;
- (id)adFormat;
- (id)activeViewJSCommandWithParams:(id)arg1;
- (void)activeViewMonitorDidRefresh:(id)arg1;
- (void)activeViewMonitorWillUnload;
- (void)unloadActiveViewMonitor;
- (void)finishActiveViewReporting;
- (void)startActiveViewReporting;
- (void)startActiveViewReportingIfEnabled;
- (void)createActiveViewMonitor;
- (_Bool)monitoredViewIsSubviewOfDeviceScreen;
- (void)activeViewMonitoringDidStop:(unsigned long long)arg1;
- (_Bool)activeViewMonitoringStarted:(unsigned long long)arg1;
- (void)activeViewVisibilityChanged:(_Bool)arg1;
@property(nonatomic) _Bool viewHasMadeImpression;
@property(readonly, nonatomic) _Bool monitoredViewVisible;
- (void)adDidLoadVideoWithSize:(struct CGSize)arg1;
- (void)adWillLeaveApplication;
- (void)adDidDismissScreen;
- (void)adWillDismissScreen;
- (void)adWillPresentScreen;
- (void)adWasClicked;
- (void)adFinishedLoadingContent;
- (void)adFailedToReceiveContentWithError:(id)arg1;
- (void)startedProcessingAd:(id)arg1;
- (void)adFetchingFailedWithResponseCode:(long long)arg1 error:(id)arg2;
- (void)adFetchingSucceeded;
- (void)adFetchingStartedWithURL:(id)arg1;
- (void)adURLBuildRequestCompleted;
- (void)adURLBuildRequestStarted;
- (void)adLoadingFromSecretAdURL:(id)arg1;
- (void)adLoadingFromInlineAd:(id)arg1;
- (void)adLoadingStarted;
- (void)createdAdView:(id)arg1;
- (void)loadAdNetworkJavaScriptRequest:(id)arg1;
- (void)processAdResponse:(id)arg1;
- (void)applicationVolumeDidChange:(id)arg1;
- (void)postVolumeNotification;
- (void)didChangeDeviceOrientation;
- (void)addCreativeOrientationChangeObserver:(id)arg1 selector:(SEL)arg2;
- (void)endListeningToDeviceOrientationChangeEvent;
- (void)beginListeningToDeviceOrientationChangeEvent;
- (void)impressionMonitorDidMonitorImpression:(id)arg1;
- (void)unloadAdView:(id)arg1;
- (void)handleError:(id)arg1 action:(id)arg2;
- (id)forcedAdOrientation;
- (void)updatePositionFromView:(id)arg1;
- (void)updateVisibility:(_Bool)arg1;
- (void)MRAIDAdDidUnload;
- (void)MRAIDAdDidLoad;
- (void)SDKDidBecomeReady;
- (void)notifyDeviceFeatures;
- (void)notifyOrientationToMRAIDCreative;
- (id)creativePositionDictionaryForActiveViewBounds:(struct CGRect)arg1;
- (id)viewControllerForPresentingModalView;
- (void)processMediationAdResponse:(id)arg1;
- (void)presentMediatedInterstitialFromRootViewController:(id)arg1;
- (_Bool)isBeingMediated;
- (_Bool)isMediating;
- (_Bool)changeAdTypeTo:(id)arg1;
- (id)adNetworkClassName;
@property(retain, nonatomic) GADMAdNetworkConnector *mediationConnector;
- (void)updateContentSize:(struct CGSize)arg1;
- (void)loadAdURLWithParameters:(id)arg1;
- (id)requestParameters;
- (id)requestParametersForRequest:(id)arg1;
- (void)invalidJavaScriptRequest;
- (void)failedJavaScriptFile;
- (long long)requestedAdType;
- (id)adLoadActionTimeRecorder;
- (void)invalidateState;
- (void)resetState;
- (void)willLeaveAppDueToClick;
- (void)didLoadAd;
- (void)didMakeAdImpression;
- (void)didLoadAdHTMLInWebView;
- (void)willLoadAdHTMLInWebView;
- (void)willStartAdRendering;
- (void)didReceiveValidAd;
- (void)didFailToReceiveAdWithError:(id)arg1 shouldCancelPendingActions:(_Bool)arg2;
- (void)willProcessMediationResponse;
- (void)didFetchAdContent;
- (void)willFetchAdContent;
- (void)didReceiveAdURL;
- (void)didFailToRetrieveSDKCoreWithError:(id)arg1;
- (void)willRequestAdURL;
- (void)setState:(long long)arg1;
@property(readonly, nonatomic) long long state;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADGLSphericalShader : NSObject
{
    unsigned int _glProgram;
    int _uniformColorConversionMatrix;
    int _uniformFOVx;
    int _uniformFOVy;
    int _uniformVMat;
    struct __CVOpenGLESTextureCache *_videoTextureCache;
    struct __CVBuffer *_lumaTexture;
    struct __CVBuffer *_chromaTexture;
    CMMotionManager *_motionManager;
    union _GLKMatrix4 _externalPitchRotation;
    union _GLKMatrix4 _externalRollRotation;
    double _externalRollMultiplier;
    double _externalPitchMultiplier;
    long long _lastApplicationOrientation;
    union _GLKMatrix4 _orientationOffsetRotationY;
    _Bool _firstRenderingOrientationHandled;
    NSObject<OS_dispatch_queue> *_lockQueue;
}

- (void).cxx_destruct;
@property long long lastApplicationOrientation;
- (void)updateApplicationOrientation;
- (union _GLKMatrix4)deviceRotationMatrix;
- (void)destroyOpenGLProgram;
- (struct __CVBuffer *)createTextureWithPixelBuffer:(struct __CVBuffer *)arg1 index:(int)arg2 format:(int)arg3 width:(int)arg4 height:(int)arg5;
- (_Bool)setUpOpenGL;
- (void)cleanupTextures;
- (void)displayPixelBuffer:(struct __CVBuffer *)arg1 inViewPortRect:(struct CGRect)arg2;
- (void)handleUserTouchMovedByVector:(struct CGVector)arg1;
- (void)stopMotionTracking;
- (void)startMotionTracking;
- (void)dealloc;
- (id)init;
- (id)initWithTouchPitchMultiplier:(double)arg1 touchRollMultiplier:(double)arg2;

@end

@interface GADMailComposeDelegateProxy : NSObject <MFMailComposeViewControllerDelegate>
{
    GADMailComposeDelegateProxy *_strongSelf;
    id <MFMailComposeViewControllerDelegate> _mailComposeDelegate;
    MFMailComposeViewController *_mailComposeViewController;
}

+ (id)associatedDelegateProxyForController:(id)arg1;
@property(retain, nonatomic) MFMailComposeViewController *mailComposeViewController; // @synthesize mailComposeViewController=_mailComposeViewController;
@property(nonatomic) __weak id <MFMailComposeViewControllerDelegate> mailComposeDelegate; // @synthesize mailComposeDelegate=_mailComposeDelegate;
- (void).cxx_destruct;
- (void)stopProxying;
- (void)mailComposeController:(id)arg1 didFinishWithResult:(long long)arg2 error:(id)arg3;
- (id)initInternal;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADMessageComposeDelegateProxy : NSObject <MFMessageComposeViewControllerDelegate>
{
    GADMessageComposeDelegateProxy *_strongSelf;
    id <MFMessageComposeViewControllerDelegate> _messageComposeDelegate;
    MFMessageComposeViewController *_messageComposeViewController;
}

+ (id)associatedDelegateProxyForController:(id)arg1;
@property(retain, nonatomic) MFMessageComposeViewController *messageComposeViewController; // @synthesize messageComposeViewController=_messageComposeViewController;
@property(nonatomic) __weak id <MFMessageComposeViewControllerDelegate> messageComposeDelegate; // @synthesize messageComposeDelegate=_messageComposeDelegate;
- (void).cxx_destruct;
- (void)stopProxying;
- (void)messageComposeViewController:(id)arg1 didFinishWithResult:(long long)arg2;
- (id)initInternal;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADOpener : NSObject <MFMailComposeViewControllerDelegate, MFMessageComposeViewControllerDelegate, UIAlertViewDelegate>
{
    NSMapTable *_confirmationAlertURLs;
    NSMutableSet *_allowedAppURLs;
    GADStoreKitProduct *_storeKitProduct;
    GADStoreKitProductOpener *_storeKitProductOpener;
    _Bool _didOpenAnotherApplication;
    UIViewController *_viewController;
    NSURL *_referringURL;
    GADAdView *_adView;
    GADSlot *_slot;
    NSURLRequest *_navigationRequest;
    GADAutoClickProtection *_autoClickProtection;
}

@property(retain, nonatomic) GADAutoClickProtection *autoClickProtection; // @synthesize autoClickProtection=_autoClickProtection;
@property(copy, nonatomic) NSURLRequest *navigationRequest; // @synthesize navigationRequest=_navigationRequest;
@property(nonatomic) _Bool didOpenAnotherApplication; // @synthesize didOpenAnotherApplication=_didOpenAnotherApplication;
@property(nonatomic) __weak GADSlot *slot; // @synthesize slot=_slot;
@property(nonatomic) __weak GADAdView *adView; // @synthesize adView=_adView;
@property(copy, nonatomic) NSURL *referringURL; // @synthesize referringURL=_referringURL;
@property(nonatomic) __weak UIViewController *viewController; // @synthesize viewController=_viewController;
- (void).cxx_destruct;
- (void)alertView:(id)arg1 clickedButtonAtIndex:(long long)arg2;
- (void)messageComposeViewController:(id)arg1 didFinishWithResult:(long long)arg2;
- (void)mailComposeController:(id)arg1 didFinishWithResult:(long long)arg2 error:(id)arg3;
@property(readonly, nonatomic) __weak UIViewController *topViewController;
- (void)openCalendarWithDictionary:(id)arg1;
- (void)openSmsComposer:(id)arg1;
- (void)openEmailComposer:(id)arg1;
- (void)presentComposerController:(id)arg1 forURL:(id)arg2;
- (void)openAppLink:(id)arg1 withEventID:(id)arg2;
- (void)willLeaveApplication;
- (_Bool)shouldOpenURL:(id)arg1;
- (void)openApp:(id)arg1;
- (void)openPromptToStorePictureAtURL:(id)arg1;
- (void)openWebAppWithResizeProperties:(id)arg1;
- (void)expandToWebAppWithSupportedOrientations:(unsigned long long)arg1 usingCustomClose:(_Bool)arg2;
- (void)openWebAppWithHTML:(id)arg1 baseURL:(id)arg2 supportedOrientations:(unsigned long long)arg3 usingCustomClose:(_Bool)arg4;
- (void)openWebApp:(id)arg1 supportedOrientations:(unsigned long long)arg2 usingCustomClose:(_Bool)arg3;
- (id)overlayWithOrientations:(unsigned long long)arg1 useCustomClose:(_Bool)arg2;
- (void)configureOverlay:(id)arg1 orientations:(unsigned long long)arg2 usingCustomClose:(_Bool)arg3;
- (void)openSafariViewControllerToURL:(id)arg1 supportedOrientations:(unsigned long long)arg2;
- (void)openWebViewBrowserToURL:(id)arg1 supportedOrientations:(unsigned long long)arg2;
- (void)openBrowserToURL:(id)arg1 supportedOrientations:(unsigned long long)arg2;
- (void)fetchInAppStoreWithProductID:(id)arg1 requestID:(id)arg2;
- (void)openInAppStoreWithProductID:(id)arg1 fallbackURL:(id)arg2 shouldWaitForFetch:(_Bool)arg3;
- (void)confirmClickToURL:(id)arg1 message:(id)arg2;
- (id)confirmationMessageForURL:(id)arg1;
- (_Bool)shouldPerformOpenAction;
- (_Bool)shouldPerformOpenActionWithOrientations:(unsigned long long)arg1;
- (void)didClickURL:(id)arg1;
- (void)disableAutoCollapseForResize;
- (_Bool)canOpenContent:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADDefaultInAppPurchase : NSObject
{
    NSString *_productID;
    long long _quantity;
    SKPaymentTransaction *_paymentTransaction;
}

+ (void)disableDefaultPurchaseFlow;
+ (void)enableDefaultPurchaseFlowWithDelegate:(id)arg1;
@property(readonly, nonatomic) SKPaymentTransaction *paymentTransaction; // @synthesize paymentTransaction=_paymentTransaction;
@property(readonly, nonatomic) long long quantity; // @synthesize quantity=_quantity;
@property(readonly, copy, nonatomic) NSString *productID; // @synthesize productID=_productID;
- (void).cxx_destruct;
- (void)finishTransaction;

@end

@interface GADInAppPurchase : NSObject
{
    NSString *_productID;
    long long _quantity;
}

@property(readonly, nonatomic) long long quantity; // @synthesize quantity=_quantity;
@property(readonly, copy, nonatomic) NSString *productID; // @synthesize productID=_productID;
- (void).cxx_destruct;
- (void)reportPurchaseStatus:(long long)arg1;
- (id)init;

@end

@interface GADInAppPurchaseTransactionReporter : NSObject <SKPaymentTransactionObserver>
{
    _Bool _reportingEnabled;
    _Bool _wasDisabled;
}

+ (id)sharedInstance;
- (void)paymentQueue:(id)arg1 updatedTransactions:(id)arg2;
- (void)reportTransactionsFromArray:(id)arg1 sharedParameters:(id)arg2;
- (void)reportTransactionsFromArray:(id)arg1;
- (_Bool)wasDisabled;
@property(readonly, nonatomic) _Bool shouldBeEnabled;
- (void)disableReporting;
- (void)enableReporting;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DFPRequest : GADRequest
{
    NSString *_publisherProvidedID;
    NSArray *_categoryExclusions;
}

+ (void)updateCorrelator;
@property(copy, nonatomic) NSArray *categoryExclusions; // @synthesize categoryExclusions=_categoryExclusions;
@property(copy, nonatomic) NSString *publisherProvidedID; // @synthesize publisherProvidedID=_publisherProvidedID;
- (void).cxx_destruct;
- (id)threadSafeParameters;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithParameters:(id)arg1;

// Remaining properties
@property(copy, nonatomic) NSDictionary *customTargeting; // @dynamic customTargeting;

@end

@interface GADCorrelator : NSObject
{
    NSObject<OS_dispatch_queue> *_lockQueue;
    unsigned int _correlationID;
}

- (void).cxx_destruct;
@property(readonly) unsigned int correlationID;
- (void)reset;
- (id)init;

@end

@interface GADDynamicHeightSearchRequest : GADRequest
{
    NSMutableDictionary *_requestParameters;
    _Bool _adTestEnabled;
    _Bool _clickToCallExtensionEnabled;
    _Bool _locationExtensionEnabled;
    _Bool _plusOnesExtensionEnabled;
    _Bool _sellerRatingsExtensionEnabled;
    _Bool _siteLinksExtensionEnabled;
    _Bool _titleUnderlineHidden;
    _Bool _boldTitleEnabled;
    _Bool _detailedAttributionExtensionEnabled;
    _Bool _longerHeadlinesExtensionEnabled;
    NSString *_query;
    long long _adPage;
    NSString *_channel;
    NSString *_hostLanguage;
    NSString *_locationExtensionTextColor;
    double _locationExtensionFontSize;
    NSString *_CSSWidth;
    long long _numberOfAds;
    NSString *_fontFamily;
    NSString *_attributionFontFamily;
    double _annotationFontSize;
    double _attributionFontSize;
    double _descriptionFontSize;
    double _domainLinkFontSize;
    double _titleFontSize;
    NSString *_adBorderColor;
    NSString *_adSeparatorColor;
    NSString *_annotationTextColor;
    NSString *_attributionTextColor;
    NSString *_backgroundColor;
    NSString *_borderColor;
    NSString *_domainLinkColor;
    NSString *_textColor;
    NSString *_titleLinkColor;
    NSString *_adBorderCSSSelections;
    double _adjustableLineHeight;
    double _attributionBottomSpacing;
    NSString *_borderCSSSelections;
    double _verticalSpacing;
}

@property(nonatomic) _Bool longerHeadlinesExtensionEnabled; // @synthesize longerHeadlinesExtensionEnabled=_longerHeadlinesExtensionEnabled;
@property(nonatomic) _Bool detailedAttributionExtensionEnabled; // @synthesize detailedAttributionExtensionEnabled=_detailedAttributionExtensionEnabled;
@property(nonatomic) double verticalSpacing; // @synthesize verticalSpacing=_verticalSpacing;
@property(nonatomic) _Bool boldTitleEnabled; // @synthesize boldTitleEnabled=_boldTitleEnabled;
@property(nonatomic) _Bool titleUnderlineHidden; // @synthesize titleUnderlineHidden=_titleUnderlineHidden;
@property(copy, nonatomic) NSString *borderCSSSelections; // @synthesize borderCSSSelections=_borderCSSSelections;
@property(nonatomic) double attributionBottomSpacing; // @synthesize attributionBottomSpacing=_attributionBottomSpacing;
@property(nonatomic) double adjustableLineHeight; // @synthesize adjustableLineHeight=_adjustableLineHeight;
@property(copy, nonatomic) NSString *adBorderCSSSelections; // @synthesize adBorderCSSSelections=_adBorderCSSSelections;
@property(copy, nonatomic) NSString *titleLinkColor; // @synthesize titleLinkColor=_titleLinkColor;
@property(copy, nonatomic) NSString *textColor; // @synthesize textColor=_textColor;
@property(copy, nonatomic) NSString *domainLinkColor; // @synthesize domainLinkColor=_domainLinkColor;
@property(copy, nonatomic) NSString *borderColor; // @synthesize borderColor=_borderColor;
@property(copy, nonatomic) NSString *backgroundColor; // @synthesize backgroundColor=_backgroundColor;
@property(copy, nonatomic) NSString *attributionTextColor; // @synthesize attributionTextColor=_attributionTextColor;
@property(copy, nonatomic) NSString *annotationTextColor; // @synthesize annotationTextColor=_annotationTextColor;
@property(copy, nonatomic) NSString *adSeparatorColor; // @synthesize adSeparatorColor=_adSeparatorColor;
@property(copy, nonatomic) NSString *adBorderColor; // @synthesize adBorderColor=_adBorderColor;
@property(nonatomic) double titleFontSize; // @synthesize titleFontSize=_titleFontSize;
@property(nonatomic) double domainLinkFontSize; // @synthesize domainLinkFontSize=_domainLinkFontSize;
@property(nonatomic) double descriptionFontSize; // @synthesize descriptionFontSize=_descriptionFontSize;
@property(nonatomic) double attributionFontSize; // @synthesize attributionFontSize=_attributionFontSize;
@property(nonatomic) double annotationFontSize; // @synthesize annotationFontSize=_annotationFontSize;
@property(copy, nonatomic) NSString *attributionFontFamily; // @synthesize attributionFontFamily=_attributionFontFamily;
@property(copy, nonatomic) NSString *fontFamily; // @synthesize fontFamily=_fontFamily;
@property(nonatomic) long long numberOfAds; // @synthesize numberOfAds=_numberOfAds;
@property(copy, nonatomic) NSString *CSSWidth; // @synthesize CSSWidth=_CSSWidth;
@property(nonatomic) _Bool siteLinksExtensionEnabled; // @synthesize siteLinksExtensionEnabled=_siteLinksExtensionEnabled;
@property(nonatomic) _Bool sellerRatingsExtensionEnabled; // @synthesize sellerRatingsExtensionEnabled=_sellerRatingsExtensionEnabled;
@property(nonatomic) _Bool plusOnesExtensionEnabled; // @synthesize plusOnesExtensionEnabled=_plusOnesExtensionEnabled;
@property(nonatomic) _Bool locationExtensionEnabled; // @synthesize locationExtensionEnabled=_locationExtensionEnabled;
@property(nonatomic) _Bool clickToCallExtensionEnabled; // @synthesize clickToCallExtensionEnabled=_clickToCallExtensionEnabled;
@property(nonatomic) double locationExtensionFontSize; // @synthesize locationExtensionFontSize=_locationExtensionFontSize;
@property(copy, nonatomic) NSString *locationExtensionTextColor; // @synthesize locationExtensionTextColor=_locationExtensionTextColor;
@property(copy, nonatomic) NSString *hostLanguage; // @synthesize hostLanguage=_hostLanguage;
@property(copy, nonatomic) NSString *channel; // @synthesize channel=_channel;
@property(nonatomic) _Bool adTestEnabled; // @synthesize adTestEnabled=_adTestEnabled;
@property(nonatomic) long long adPage; // @synthesize adPage=_adPage;
@property(copy, nonatomic) NSString *query; // @synthesize query=_query;
- (void).cxx_destruct;
- (id)CSADynamicHeightSearchRequestURLWithAdUnitID:(id)arg1;
- (id)dynamicHeightAdURLFragmentsWithAdUnitID:(id)arg1;
- (void)parameterHelperSetValue:(id)arg1 forKey:(id)arg2;
- (void)setAdvancedOptionValue:(id)arg1 forKey:(id)arg2;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)init;

@end

@interface GADRequest : NSObject <NSCopying>
{
    NSMutableDictionary *_networkExtrasMap;
    _Bool _nativeExpressEnabled;
    NSArray *_testDevices;
    long long _gender;
    NSDate *_birthday;
    NSArray *_keywords;
    NSString *_contentURL;
    NSString *_requestAgent;
    GADLocation *_location;
    NSNumber *_childDirectedTreatment;
    NSDictionary *_customTargeting;
    NSDictionary *_privateMediationExtras;
    NSArray *_formatParameters;
    long long _responseType;
    NSDictionary *_adConfigurationParameters;
    NSString *_origin;
}

+ (id)sdkVersion;
+ (id)extendedSDKVersionNumber;
+ (long long)requestTypeFromString:(id)arg1;
+ (void)initialize;
+ (id)request;
+ (id)requestWithMediationAdRequest:(id)arg1;
@property(nonatomic, getter=isNativeExpressEnabled) _Bool nativeExpressEnabled; // @synthesize nativeExpressEnabled=_nativeExpressEnabled;
@property(copy, nonatomic) NSString *origin; // @synthesize origin=_origin;
@property(copy, nonatomic) NSDictionary *adConfigurationParameters; // @synthesize adConfigurationParameters=_adConfigurationParameters;
@property(nonatomic) long long responseType; // @synthesize responseType=_responseType;
@property(copy, nonatomic) NSArray *formatParameters; // @synthesize formatParameters=_formatParameters;
@property(copy, nonatomic) NSDictionary *privateMediationExtras; // @synthesize privateMediationExtras=_privateMediationExtras;
@property(copy, nonatomic) NSDictionary *customTargeting; // @synthesize customTargeting=_customTargeting;
@property(copy, nonatomic) NSNumber *childDirectedTreatment; // @synthesize childDirectedTreatment=_childDirectedTreatment;
@property(copy, nonatomic) GADLocation *location; // @synthesize location=_location;
@property(copy, nonatomic) NSString *requestAgent; // @synthesize requestAgent=_requestAgent;
@property(copy, nonatomic) NSString *contentURL; // @synthesize contentURL=_contentURL;
@property(copy, nonatomic) NSArray *keywords; // @synthesize keywords=_keywords;
@property(copy, nonatomic) NSDate *birthday; // @synthesize birthday=_birthday;
@property(nonatomic) long long gender; // @synthesize gender=_gender;
@property(copy, nonatomic) NSArray *testDevices; // @synthesize testDevices=_testDevices;
- (void).cxx_destruct;
- (void)setLocationWithDescription:(id)arg1;
- (void)setBirthdayWithMonth:(long long)arg1 day:(long long)arg2 year:(long long)arg3;
@property(readonly, nonatomic) _Bool cacheable;
- (id)parameters;
- (id)threadSafeParameters;
- (_Bool)isATestDevice;
- (void)tagForChildDirectedTreatment:(_Bool)arg1;
- (void)setLocationWithLatitude:(double)arg1 longitude:(double)arg2 accuracy:(double)arg3;
- (id)contentURLString;
- (id)birthdayString;
- (id)genderString;
- (id)networkExtrasAdditionalParameters;
- (void)removeAdNetworkExtrasFor:(Class)arg1;
- (id)adNetworkExtrasFor:(Class)arg1;
- (void)registerAdNetworkExtras:(id)arg1;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithParameters:(id)arg1;
- (id)init;
- (void)configureNetworkExtrasWithMediationAdRequest:(id)arg1;
- (void)addAdapterListWithMediationAdRequest:(id)arg1;

@end

@interface GADRequestError : NSError
{
}

@end

@interface GADSearchRequest : GADRequest
{
    NSString *_query;
    UIColor *_backgroundColor;
    UIColor *_gradientFrom;
    UIColor *_gradientTo;
    UIColor *_headerColor;
    UIColor *_descriptionTextColor;
    UIColor *_anchorTextColor;
    NSString *_fontFamily;
    unsigned long long _headerTextSize;
    UIColor *_borderColor;
    unsigned long long _borderType;
    unsigned long long _borderThickness;
    NSString *_customChannels;
    unsigned long long _callButtonColor;
}

@property(nonatomic) unsigned long long callButtonColor; // @synthesize callButtonColor=_callButtonColor;
@property(copy, nonatomic) NSString *customChannels; // @synthesize customChannels=_customChannels;
@property(nonatomic) unsigned long long borderThickness; // @synthesize borderThickness=_borderThickness;
@property(nonatomic) unsigned long long borderType; // @synthesize borderType=_borderType;
@property(copy, nonatomic) UIColor *borderColor; // @synthesize borderColor=_borderColor;
@property(nonatomic) unsigned long long headerTextSize; // @synthesize headerTextSize=_headerTextSize;
@property(copy, nonatomic) NSString *fontFamily; // @synthesize fontFamily=_fontFamily;
@property(copy, nonatomic) UIColor *anchorTextColor; // @synthesize anchorTextColor=_anchorTextColor;
@property(copy, nonatomic) UIColor *descriptionTextColor; // @synthesize descriptionTextColor=_descriptionTextColor;
@property(copy, nonatomic) UIColor *headerColor; // @synthesize headerColor=_headerColor;
@property(copy, nonatomic) UIColor *gradientTo; // @synthesize gradientTo=_gradientTo;
@property(copy, nonatomic) UIColor *gradientFrom; // @synthesize gradientFrom=_gradientFrom;
@property(copy, nonatomic) UIColor *backgroundColor; // @synthesize backgroundColor=_backgroundColor;
@property(copy, nonatomic) NSString *query; // @synthesize query=_query;
- (void).cxx_destruct;
- (_Bool)cacheable;
- (void)setBackgroundGradientFrom:(id)arg1 toColor:(id)arg2;
- (void)setBackgroundSolid:(id)arg1;
- (id)threadSafeParameters;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithParameters:(id)arg1;

@end

@interface GADAdReward : NSObject
{
    NSString *_type;
    NSDecimalNumber *_amount;
}

@property(readonly, copy, nonatomic) NSDecimalNumber *amount; // @synthesize amount=_amount;
@property(readonly, copy, nonatomic) NSString *type; // @synthesize type=_type;
- (void).cxx_destruct;
- (id)initWithRewardType:(id)arg1 rewardAmount:(id)arg2;
- (id)initWithRewardDictionary:(id)arg1;
- (id)init;

@end

@interface GADRewardBasedVideoAd : NSObject <GADMRewardBasedVideoAdConnectorDelegate, GADSDKCoreControllerDelegate, GADAdFetcherDelegate, GADInterstitialDelegate, GADInterstitialAdClickDelegate, GADInterstitialRewardBasedVideoAdDelegate>
{
    GADInterstitial *_interstitial;
    id _configurationObserver;
    long long _adRequestID;
    NSDictionary *_adMetadata;
    NSObject<OS_dispatch_queue> *_lockQueue;
    _Bool _ready;
    _Bool _requestInProgress;
    _Bool _adUnitExposureBegan;
    id <GADRewardBasedVideoAdDelegate> _delegate;
    NSString *_adNetworkClassName;
    NSString *_userIdentifier;
    GADRequest *_request;
    NSString *_adUnitID;
    NSString *_requestID;
    GADAdFetcher *_adFetcher;
    GADMConfig *_mediationConfig;
    NSMutableArray *_pendingAdNetworkConfigurations;
    NSMutableArray *_allocationIDs;
    GADMAdNetworkConfig *_requestingConfiguration;
    GADMRewardBasedVideoAdNetworkConnector *_receivedConnector;
    NSMutableDictionary *_pendingSetUpConnectorsTimestamp;
    NSMutableDictionary *_connectors;
    GADAd *_ad;
    GADSlotStatistics *_adStatistics;
}

+ (id)sharedInstance;
@property(nonatomic) _Bool adUnitExposureBegan; // @synthesize adUnitExposureBegan=_adUnitExposureBegan;
@property(readonly, nonatomic) GADSlotStatistics *adStatistics; // @synthesize adStatistics=_adStatistics;
@property(retain, nonatomic) GADAd *ad; // @synthesize ad=_ad;
@property(retain, nonatomic) NSMutableDictionary *connectors; // @synthesize connectors=_connectors;
@property(retain, nonatomic) NSMutableDictionary *pendingSetUpConnectorsTimestamp; // @synthesize pendingSetUpConnectorsTimestamp=_pendingSetUpConnectorsTimestamp;
@property(retain, nonatomic) GADMRewardBasedVideoAdNetworkConnector *receivedConnector; // @synthesize receivedConnector=_receivedConnector;
@property(retain, nonatomic) GADMAdNetworkConfig *requestingConfiguration; // @synthesize requestingConfiguration=_requestingConfiguration;
@property(retain, nonatomic) NSMutableArray *allocationIDs; // @synthesize allocationIDs=_allocationIDs;
@property(readonly, nonatomic) NSMutableArray *pendingAdNetworkConfigurations; // @synthesize pendingAdNetworkConfigurations=_pendingAdNetworkConfigurations;
@property(retain, nonatomic) GADMConfig *mediationConfig; // @synthesize mediationConfig=_mediationConfig;
@property(nonatomic) _Bool requestInProgress; // @synthesize requestInProgress=_requestInProgress;
@property(retain, nonatomic) GADAdFetcher *adFetcher; // @synthesize adFetcher=_adFetcher;
@property(copy, nonatomic) NSString *requestID; // @synthesize requestID=_requestID;
@property(copy, nonatomic) NSString *adUnitID; // @synthesize adUnitID=_adUnitID;
@property(retain, nonatomic) GADRequest *request; // @synthesize request=_request;
@property(copy, nonatomic) NSString *userIdentifier; // @synthesize userIdentifier=_userIdentifier;
@property(copy, nonatomic) NSString *adNetworkClassName; // @synthesize adNetworkClassName=_adNetworkClassName;
@property(readonly, nonatomic, getter=isReady) _Bool ready; // @synthesize ready=_ready;
@property(nonatomic) __weak id <GADRewardBasedVideoAdDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)setAdMetadata:(id)arg1;
- (id)adMetadata;
- (void)failedToLoadAdWithError:(id)arg1;
- (void)adLoadedSuccessfully;
- (void)loadAd:(id)arg1;
- (void)presentFromRootViewController:(id)arg1;
- (void)loadRequest:(id)arg1 withAdUnitID:(id)arg2;
- (void)dealloc;
- (id)init;
- (void)resetFillStatus;
- (void)mediation_connectorDidFailToReceiveAd:(id)arg1 withError:(id)arg2;
- (void)mediation_connectorDidReceiveAd:(id)arg1;
- (void)mediation_connectorWillStartRequestingAd;
- (void)mediation_adapterDidFailToSetUpWithNetworkConfig:(id)arg1;
- (void)connectorDidCompletePlayingRewardBasedVideoAd:(id)arg1;
- (void)connectorWillLeaveApplication:(id)arg1;
- (void)connectorDidCloseRewardBasedVideoAd:(id)arg1;
- (void)connectorDidStartPlayingRewardBasedVideoAd:(id)arg1;
- (void)connectorDidOpenRewardBasedVideoAd:(id)arg1;
- (void)connector:(id)arg1 didRewardUserWithReward:(id)arg2;
- (void)connector:(id)arg1 didFailToReceiveRewardBasedVideoAdWithError:(id)arg2;
- (void)connectorDidReceiveClick:(id)arg1;
- (void)connectorDidReceiveRewardBasedVideoAd:(id)arg1;
- (void)connector:(id)arg1 didFailToSetUpRewardBasedVideoAdWithError:(id)arg2;
- (void)connectorDidSetUpRewardBasedVideoAd:(id)arg1;
- (void)pingNoFillURLs;
- (id)decodedJSONResponseFromAd:(id)arg1 error:(id *)arg2;
- (void)requestAdFromConnector:(id)arg1 configuration:(id)arg2;
- (void)removeStaleConnectors;
- (void)buildPendingAdRequestConnectorsList;
- (void)setUpAdaptersForAdNetworkConfigs;
- (void)setUpAdaptersForAdNetworkConfigsFromAppConfiguration:(id)arg1;
- (void)makeNextAdRequest;
- (void)presentMediatedRewardBasedVideoAdFromViewController:(id)arg1;
- (void)processMediationAd:(id)arg1;
@property(readonly, nonatomic) GADMRewardBasedVideoAdNetworkConnector *requestingConnector;
- (void)adFetcher:(id)arg1 didFailToFetchAd:(id)arg2 withError:(id)arg3 responseCode:(unsigned long long)arg4;
- (void)adFetcher:(id)arg1 didFetchAd:(id)arg2;
- (void)failedJavaScriptFile;
- (void)invalidJavaScriptRequest;
- (void)loadAd:(id)arg1 headers:(id)arg2;
- (void)loadAdURLWithParameters:(id)arg1;
- (long long)requestedAdType;
- (id)requestParameters;
- (id)adLoadActionTimeRecorder;
- (void)fetchAdForRequest:(id)arg1 withAdUnitID:(id)arg2;
- (void)setUpAdaptersFromApplicationConfiguration;
- (void)stopObservingApplicationConfiguration;
- (void)startObservingApplicationConfiguration;
- (void)interstitial:(id)arg1 didChangeAdMetadata:(id)arg2 withInfo:(id)arg3;
- (void)interstitialDidCompletePlayingRewardBasedVideoAd:(id)arg1;
- (void)interstitial:(id)arg1 didRewardUserWithReward:(id)arg2;
- (void)interstitialDidStartPlayingRewardBasedVideoAd:(id)arg1;
- (void)interstitialDidReceiveAdClick:(id)arg1;
- (void)interstitialWillLeaveApplication:(id)arg1;
- (void)interstitialDidDismissScreen:(id)arg1;
- (void)interstitialWillDismissScreen:(id)arg1;
- (void)interstitialWillPresentScreen:(id)arg1;
- (void)interstitial:(id)arg1 didFailToReceiveAdWithError:(id)arg2;
- (void)interstitialDidReceiveAd:(id)arg1;
- (void)loadInterstitialWithAdRequest:(id)arg1;
- (void)loadInterstitialWithAd:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADSDKCoreController : NSObject <GADSDKCoreWebViewNotification, GADSDKCoreGMSGHandlerDelegate>
{
    NSObject<OS_dispatch_queue> *_lockQueue;
    NSMutableArray *_pendingActiveWebViewLoadDelegates;
    NSMutableArray *_activeViewSDKCoreWebViews;
    unsigned long long _lastWebViewRefreshTimestamp;
    unsigned long long _requestID;
    unsigned long long _activeViewUnloadCacheMaxSize;
    _Bool _activeViewRequestedSDKCoreReload;
    GADSDKCoreWebView *_activeViewSDKCoreWebView;
    _Bool _useNewWebViewsForActiveViewProcessing;
    double _activeViewSamplingInterval;
    _Bool _SDKCoreUpdateHandled;
    NSMutableDictionary *_pendingJavaScriptBlocks;
    NSMutableDictionary *_pendingJavaScriptBlockExecutionCompletionHandlers;
    NSMutableDictionary *_pendingJavaScriptCompletionHandlers;
    NSMutableDictionary *_pendingBuildAdURLDelegates;
    double _SDKCoreJavaScriptCompletionBlockTimeoutInterval;
    _Bool _hasReportedSDKCoreStateAtLeastOnce;
    _Bool _refreshPaused;
    NSString *_SDKCoreWebViewExperimentID;
    GADWebViewConfiguration *_webViewConfiguration;
    NSArray *_activeViewMonitorRefreshIntervals;
    GADSDKCoreWebView *_activeSDKCoreWebView;
}

+ (id)sharedInstance;
@property(retain, nonatomic) GADSDKCoreWebView *activeSDKCoreWebView; // @synthesize activeSDKCoreWebView=_activeSDKCoreWebView;
@property(copy) NSArray *activeViewMonitorRefreshIntervals; // @synthesize activeViewMonitorRefreshIntervals=_activeViewMonitorRefreshIntervals;
- (void).cxx_destruct;
- (void)SDKCoreGMSGHandlerDidReceiveResumeSDKCoreRefreshAction:(id)arg1;
- (void)SDKCoreGMSGHandlerDidReceivePauseSDKCoreRefreshAction:(id)arg1;
- (void)SDKCoreGMSGHandler:(id)arg1 didReceiveResultActionWithRequestID:(id)arg2 arguments:(id)arg3;
- (void)SDKCoreGMSGHandlerDidReceiveSDKCoreUpdateNotification:(id)arg1;
- (void)SDKCoreGMSGHandler:(id)arg1 didReceiveInvalidAdWithRequestID:(id)arg2 parameters:(id)arg3;
- (void)SDKCoreGMSGHandler:(id)arg1 loadAdWithRequestID:(id)arg2 parameters:(id)arg3;
- (void)SDKCoreGMSGHandler:(id)arg1 loadAdURLWithRequestID:(id)arg2 parameters:(id)arg3;
- (void)SDKCoreGMSGHandler:(id)arg1 didLoadSDKConstants:(id)arg2;
- (void)handleSDKCoreUpdate;
- (void)executePendingJavaScriptBlocks;
- (id)nextRequestID;
@property double SDKCoreJavaScriptCompletionBlockTimeoutInterval;
@property double activeViewSamplingInterval;
- (void)observeSDKCoreWebViewForSDKCoreLoadRequestCompleted;
- (void)didFinishLoadingSDKCoreInSDKCoreWebView:(id)arg1;
- (void)asynchronouslyRequestURLForDelegate:(id)arg1;
- (id)adRequestParameterJSONFromParameters:(id)arg1;
- (void)refreshActiveWebViewSDKCore;
- (void)attemptToRefreshActiveWebViewSDKCore;
- (void)postJavaScriptNotification:(id)arg1 userInfo:(id)arg2;
- (void)executeExportedJavaScriptCommand:(id)arg1 parameters:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)executeJavaScriptFromBlockWhenReady:(CDUnknownBlockType)arg1 withCompletionBlock:(CDUnknownBlockType)arg2;
- (void)buildAdURL:(id)arg1;
- (void)finishedUsingSDKCoreWebViewForActiveViewProcessing:(id)arg1;
- (id)SDKCoreWebViewForActiveViewProcessing;
- (void)dealloc;
- (id)init;
- (void)setSDKCoreWebViewExperiment;
- (void)removeFinishedActiveViewWebViews;
- (void)cacheRunningActiveViewWebView:(id)arg1;

@end

@interface GADSDKCoreWebView : NSObject <GADActiveViewGMSGHandlerDelegate, GADAdViewDelegate>
{
    long long _state;
    _Bool _hasSDKCoreLoadedAtLeastOnce;
    NSMutableArray *_pendingJSCommands;
    NSObject<OS_dispatch_queue> *_lockQueue;
    NSObject<OS_dispatch_queue> *_commandQueue;
    NSMutableSet *_SDKCoreObservers;
    GADAdViewDelegate *_adViewDelegate;
    GADAdView *_adView;
    GADActiveViewGMSGHandler *_activeViewGMSGHandler;
    NSMapTable *_activeViewObservers;
    NSMutableSet *_runningActiveViewObserverIdentifiers;
    GADCSI *_CSI;
    GADSDKCoreGMSGHandler *_SDKCoreGMSGHandler;
}

@property(retain, nonatomic) GADSDKCoreGMSGHandler *SDKCoreGMSGHandler; // @synthesize SDKCoreGMSGHandler=_SDKCoreGMSGHandler;
- (void).cxx_destruct;
- (_Bool)isActiveViewRunning;
- (void)clearAllActiveViewInstances;
- (void)removeActiveViewObserverForActiveViewID:(unsigned long long)arg1;
- (void)setActiveViewObserver:(id)arg1 forActiveViewID:(unsigned long long)arg2;
- (void)adViewWebProcessDidTerminate:(id)arg1;
- (void)adViewDidFinishLoad:(id)arg1;
- (void)adView:(id)arg1 didFailLoadWithError:(id)arg2;
- (_Bool)adView:(id)arg1 shouldStartLoadWithRequest:(id)arg2 navigationType:(long long)arg3;
- (id)CSIForGMSGHandler:(id)arg1;
- (void)willRefreshSDKCore;
- (void)dispatchPendingJavaScriptCommands;
- (void)enqueueJavaScriptCommand:(id)arg1;
@property _Bool hasSDKCoreLoadedAtLeastOnce;
@property long long state;
- (void)notifyAllObserversOnlyOnceThatSDKCoreRequestIsFinished;
- (void)refreshSDKCoreAndNotifyObserver:(id)arg1;
- (void)removeObserver:(id)arg1;
- (void)addObserverForOneTimeNotification:(id)arg1;
- (void)dealloc;
- (id)initWithConfiguration:(id)arg1;
- (void)activeViewGMSGHandler:(id)arg1 didReceiveVisibilityNotification:(_Bool)arg2 forActiveViewID:(unsigned long long)arg3;
- (void)activeViewGMSGHandler:(id)arg1 didReceiveUntrackNotificationForActiveViewID:(unsigned long long)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADSafeBrowsingReporter : NSObject
{
    NSURL *_reportURL;
    _Bool _shouldReportMaliciousAds;
    _Bool _shouldReportBenignAds;
    _Bool _shouldSendRenderedAd;
    GADAutoClickProtection *_autoClickProtection;
    NSString *_clickString;
    NSSet *_excludedHeaders;
}

@property(readonly, nonatomic) NSSet *excludedHeaders; // @synthesize excludedHeaders=_excludedHeaders;
@property(readonly, copy, nonatomic) NSString *clickString; // @synthesize clickString=_clickString;
@property(readonly, nonatomic) GADAutoClickProtection *autoClickProtection; // @synthesize autoClickProtection=_autoClickProtection;
@property(readonly, nonatomic) _Bool shouldSendRenderedAd; // @synthesize shouldSendRenderedAd=_shouldSendRenderedAd;
@property(readonly, nonatomic) _Bool shouldReportBenignAds; // @synthesize shouldReportBenignAds=_shouldReportBenignAds;
@property(readonly, nonatomic) _Bool shouldReportMaliciousAds; // @synthesize shouldReportMaliciousAds=_shouldReportMaliciousAds;
- (void).cxx_destruct;
- (void)reportResourceCollection:(id)arg1;
- (id)init;
- (id)initWithDictionary:(id)arg1;

@end

@interface GADConfiguration : NSObject <NSCoding, NSCopying>
{
    NSMutableDictionary *_parameters;
    NSMutableDictionary *_priorities;
    NSObject<OS_dispatch_queue> *_lockQueue;
    id <GADConfigurationDelegate> _delegate;
}

- (void).cxx_destruct;
- (void)addEntriesFromDictionary:(id)arg1 priorities:(id)arg2;
- (void)addEntriesFromDictionary:(id)arg1 priority:(long long)arg2;
- (void)setObject:(id)arg1 forKey:(id)arg2 priority:(long long)arg3;
- (void)didUpdate;
- (_Bool)updatedBySettingValue:(id)arg1 withPriority:(long long)arg2 forKey:(id)arg3;
- (id)objectForKeyedSubscript:(id)arg1;
@property __weak id <GADConfigurationDelegate> delegate;
- (void)encodeWithCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCoder:(id)arg1;
- (id)init;

@end

@interface GADInjectedSettings : NSObject
{
    NSMutableDictionary *_settings;
    NSObject<OS_dispatch_queue> *_lockQueue;
    id _foregroundObserver;
}

+ (id)sharedInstance;
- (void).cxx_destruct;
- (id)objectForKeyedSubscript:(id)arg1;
- (void)refresh;
- (void)addEntriesFromDictionary:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface GADMobileAds : NSObject
{
    _Bool _applicationMuted;
    float _applicationVolume;
    GADAudioVideoManager *_audioVideoManager;
}

+ (void)enableBackgroundAdLoading;
+ (void)disableSDKCrashReporting;
+ (void)disableAutomatedInAppPurchaseReporting;
+ (void)configureWithApplicationID:(id)arg1;
+ (id)sharedInstance;
@property(retain, nonatomic) GADAudioVideoManager *audioVideoManager; // @synthesize audioVideoManager=_audioVideoManager;
@property(nonatomic) _Bool applicationMuted; // @synthesize applicationMuted=_applicationMuted;
@property(nonatomic) float applicationVolume; // @synthesize applicationVolume=_applicationVolume;
- (void).cxx_destruct;
- (_Bool)isSDKVersionAtLeastMajor:(long long)arg1 minor:(long long)arg2 patch:(long long)arg3;
@property(readonly, nonatomic) float clampedApplicationVolume;
- (id)init;

@end

@interface GADSlotStatistics : NSObject
{
    GADStatisticsCore *_statisticsCore;
    GADTimingManager *_timingManager;
    NSString *_identifier;
}

- (void).cxx_destruct;
- (id)fillStatusStringFromArray:(id)arg1;
- (id)adapterFillStatusParameterOrderedByAllocationIDs:(id)arg1;
- (id)adapterFillStatusParameter;
- (id)adapterDurationsParameter;
- (id)adapterExitCodesParameter;
- (void)resetFillStatus;
- (void)resetTimingAdapters;
- (void)endTimingAdapterWithFillStatus:(long long)arg1 allocationID:(id)arg2;
- (void)endTimingAdapterWithExitCode:(long long)arg1;
- (void)startTimingAdapter;
- (void)endTimingNamed:(id)arg1;
- (void)startTimingNamed:(id)arg1 withExplicitEnd:(_Bool)arg2;
- (id)timingNamed:(id)arg1;
@property(readonly, copy, nonatomic) NSDictionary *statistics;
- (void)setIdentifier:(id)arg1;
- (id)init;

@end

@interface GADStatisticDictionary : NSObject
{
    NSMutableDictionary *_statistics;
    _Bool _allowDictionaryModification;
    _Bool _hasEnqueuedNotificationBlock;
    id <GADStatisticDictionaryDelegate> _delegate;
    NSLock *_delegateLock;
    NSObject<OS_dispatch_queue> *_serialQueue;
    NSMutableDictionary *_arrayMaxSize;
}

@property(retain, nonatomic) NSMutableDictionary *arrayMaxSize; // @synthesize arrayMaxSize=_arrayMaxSize;
@property(nonatomic) _Bool hasEnqueuedNotificationBlock; // @synthesize hasEnqueuedNotificationBlock=_hasEnqueuedNotificationBlock;
@property(nonatomic) _Bool allowDictionaryModification; // @synthesize allowDictionaryModification=_allowDictionaryModification;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *serialQueue; // @synthesize serialQueue=_serialQueue;
@property(retain, nonatomic) NSLock *delegateLock; // @synthesize delegateLock=_delegateLock;
@property(nonatomic) __weak id <GADStatisticDictionaryDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)removeAllObjects;
- (void)resizeArray:(id)arg1 toMaxSize:(long long)arg2;
- (id)dictionary;
- (void)setMaxSize:(long long)arg1 forArrayWithKey:(id)arg2;
- (void)addObject:(id)arg1 toArrayWithKey:(id)arg2 shouldNotifyDelegate:(_Bool)arg3;
- (void)decrementNumberForKey:(id)arg1 shouldNotifyDelegate:(_Bool)arg2;
- (void)incrementNumberForKey:(id)arg1 shouldNotifyDelegate:(_Bool)arg2;
- (void)addNumber:(id)arg1 toNumberForKey:(id)arg2 shouldNotifyDelegate:(_Bool)arg3;
- (void)addEntriesFromDictionary:(id)arg1 shouldNotifyDelegate:(_Bool)arg2;
- (id)objectForKeyedSubscript:(id)arg1;
- (void)setObject:(id)arg1 forKeyedSubscript:(id)arg2;
- (void)setObject:(id)arg1 forKey:(id)arg2 shouldNotifyDelegate:(_Bool)arg3;
- (void)dispatchAsyncShouldNotifyDelegate:(_Bool)arg1 block:(CDUnknownBlockType)arg2;
- (void)enqueueNotificationBlock;
- (void)didFinishModifying;
- (id)description;
- (id)init;
- (id)initWithDelegate:(id)arg1;
- (id)initWithQueueLabel:(const char *)arg1 delegate:(id)arg2;

@end

@interface GADStatisticsCore : NSObject
{
    NSMutableDictionary *_statistics;
    NSString *_userDefaultsKey;
    NSObject<OS_dispatch_queue> *_lockQueue;
}

- (void).cxx_destruct;
- (void)removeObjectForKey:(id)arg1;
- (void)appendDictionary:(id)arg1 toArrayForKey:(id)arg2;
- (void)appendString:(id)arg1 toArrayForKey:(id)arg2;
- (id)arrayForKey:(id)arg1;
- (void)setIdentifier:(id)arg1;
- (void)savePersistentStatistics;
- (void)applicationWillTerminate:(id)arg1;
@property(readonly, copy, nonatomic) NSDictionary *statistics;
- (void)dealloc;
- (id)init;

@end

@interface GADTiming : NSObject
{
    NSObject<OS_dispatch_queue> *_lockQueue;
    unsigned long long _startTimestamp;
    unsigned long long _endTimestamp;
    _Bool _explicitEnd;
    NSString *_category;
}

@property(nonatomic) _Bool explicitEnd; // @synthesize explicitEnd=_explicitEnd;
@property(readonly, copy, nonatomic) NSString *category; // @synthesize category=_category;
- (void).cxx_destruct;
- (id)elapsedMillisecondsString;
- (unsigned long long)elapsedMilliseconds;
- (unsigned long long)endTimestamp;
- (unsigned long long)startTimestamp;
- (void)end;
- (void)start;
- (id)dictionaryRepresentation;
- (id)init;
- (id)initWithDictionaryRepresentation:(id)arg1;
- (id)initWithCategory:(id)arg1;

@end

@interface GADTimingManager : NSObject
{
    NSString *_identifier;
    NSString *_userDefaultsKey;
    NSMutableDictionary *_timings;
    NSObject<OS_dispatch_queue> *_savingQueue;
}

- (void).cxx_destruct;
- (void)removeTimingForCategory:(id)arg1;
- (id)timingForCategory:(id)arg1;
- (id)addTimingWithCategory:(id)arg1;
- (void)addTiming:(id)arg1;
- (void)setIdentifier:(id)arg1;
- (void)savePersistentTimings;
- (void)loadPersistentTimings;
- (void)applicationWillTerminate:(id)arg1;
@property(readonly, copy, nonatomic) NSArray *categories;
@property(readonly, copy, nonatomic) NSArray *timings;
- (void)dealloc;
- (id)init;

@end

@interface GADBinaryHeap : NSObject
{
    struct __CFBinaryHeap *_heap;
}

- (id)sortedObjects;
- (id)removedMinimum;
- (id)minimum;
@property(readonly, nonatomic) unsigned long long count; // @dynamic count;
- (_Bool)containsObject:(id)arg1;
- (void)addObject:(id)arg1;
- (void)dealloc;
- (id)initWithComparator:(CDUnknownFunctionPointerType)arg1;
- (id)init;

@end

@interface GADDevice : NSObject
{
    NSObject<OS_dispatch_queue> *_lockQueue;
    long long _statusBarOrientation;
    unsigned long long _mainWindowSupportedInterfaceOrientations;
    unsigned long long _supportedInterfaceOrientationsForKeyWindow;
    struct CGRect _standardizedMainScreenPortraitBounds;
    struct CGRect _standardizedMainScreenLandscapeBounds;
    _Bool _userInterfaceIdiomIsPhone;
    unsigned long long _bookstores;
    float _audioVolume;
    NSArray *_audioRoutePortNames;
    // Error parsing type: AB, name: _canMakePayments
    NSDictionary *_infoPlist;
    _Bool _hasCachedStaticParameters;
    _Bool _hasCachedAdditionalStaticParameters;
    struct CGSize _standardizedOrientedKeyWindowSize;
    MPVolumeView *_volumeView;
    UISlider *_volumeSliderView;
    NSString *_pseudonymousIdentifier;
    id <NSObject> _orientationChangeObserver;
    NSString *_deviceModel;
    NSString *_systemVersion;
    double _mainScreenDensity;
    _Bool _isOtherAudioPlaying;
    NSNumber *_shouldSilenceAudioValue;
    _Bool _canText;
    _Bool _canMakePhoneCalls;
    CDStruct_f6aba300 _operatingSystemVersion;
}

+ (id)sharedInstance;
@property(readonly, nonatomic) NSNumber *shouldSilenceAudioValue; // @synthesize shouldSilenceAudioValue=_shouldSilenceAudioValue;
@property(readonly, nonatomic) _Bool isOtherAudioPlaying; // @synthesize isOtherAudioPlaying=_isOtherAudioPlaying;
@property(readonly, nonatomic) _Bool canMakePhoneCalls; // @synthesize canMakePhoneCalls=_canMakePhoneCalls;
@property(readonly, nonatomic) _Bool canText; // @synthesize canText=_canText;
@property(readonly, nonatomic) CDStruct_f6aba300 operatingSystemVersion; // @synthesize operatingSystemVersion=_operatingSystemVersion;
- (void).cxx_destruct;
- (_Bool)isSimulator;
@property(readonly, copy, nonatomic) NSArray *audioRoutePortNames;
@property(readonly, nonatomic) float audioVolume;
@property(readonly, nonatomic) struct CGSize standardizedPortraitKeyWindowSize;
@property(readonly, nonatomic) struct CGSize standardizedOrientedKeyWindowSize;
@property(readonly, nonatomic) struct CGRect standardizedOrientedApplicationFrame;
@property(readonly, nonatomic) struct CGRect standardizedOrientedScreenBounds;
@property(readonly, nonatomic) struct CGRect standardizedLandscapeScreenBounds;
@property(readonly, nonatomic) struct CGRect standardizedPortraitScreenBounds;
@property(readonly, nonatomic) _Bool orientationLandscape;
@property(readonly, nonatomic) NSString *locale;
@property(readonly, nonatomic) double mainScreenDensity;
@property(readonly, nonatomic) NSString *deviceSubmodel;
@property(readonly, nonatomic) NSString *deviceModel;
- (id)deviceIdentifier;
- (id)rawDeviceIdentifier;
- (id)pseudonymousIdentifier;
- (void)clearPseudonymousIdentifier;
@property(readonly, nonatomic) NSString *systemVersion;
@property(readonly, nonatomic) _Bool jailbroken;
@property(readonly, copy, nonatomic) NSString *limitAdTrackingString;
@property(readonly, nonatomic) _Bool limitAdTracking;
- (id)canOpenURLs:(id)arg1;
- (_Bool)OSIsSupported;
- (_Bool)isOSAtLeastMajor:(long long)arg1 minor:(long long)arg2 patch:(long long)arg3;
- (void)updateOperatingSystemVersionProperties;
- (void)updateCanMakePayments;
- (id)baseSDKVersion;
- (id)parameters;
- (void)updateAudioPortNames;
- (void)updateAudioVolume;
- (void)updateAudio;
- (void)updateOrientedKeyWindowSize;
- (void)updateBookstores;
- (void)updateOrientation;
- (void)updateDynamicParameters;
- (void)cacheAdditionalStaticParameters;
- (void)cacheStaticParameters;
- (void)dealloc;
- (id)init;

@end

@interface GADLogger : NSObject
{
}

+ (id)sharedInstance;
- (void)logPublicMessage:(id)arg1;
- (void)waitForLogging;
- (void)setLogLevelThreshold:(long long)arg1;

@end

@interface GADMUtilities : NSObject
{
}

+ (id)mediationURLFrom:(id)arg1 adLocationID:(id)arg2 adNetworkRefresh:(_Bool)arg3 allocationID:(id)arg4 adNetworkID:(id)arg5 qData:(id)arg6 sessionID:(id)arg7 sequenceNumber:(id)arg8 exitCodes:(id)arg9 durations:(id)arg10 fillStatus:(id)arg11;

@end

@interface GADTestLabel : UILabel
{
}

- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (struct CGSize)intrinsicContentSize;
- (void)drawTextInRect:(struct CGRect)arg1;

@end

@interface GADViewUtilities : NSObject
{
}

+ (id)positionOfView:(id)arg1 inScreen:(id)arg2;

@end

@interface GADAdViewVideoController : NSObject <GADVideoControlling>
{
    GADAdView *_adView;
    _Bool _videoOptionsCustomControlsRequested;
    _Bool _videoOptionsClickToExpandRequested;
    _Bool _videoMuted;
    _Bool _hasVideoContent;
    _Bool _customControlsEnabled;
    _Bool _clickToExpandEnabled;
    id <GADAdViewVideoControllerDelegate> _delegate;
    long long _videoPlaybackState;
    double _videoDuration;
    double _currentPlaybackTime;
    double _aspectRatio;
}

@property(nonatomic) _Bool clickToExpandEnabled; // @synthesize clickToExpandEnabled=_clickToExpandEnabled;
@property(nonatomic) _Bool customControlsEnabled; // @synthesize customControlsEnabled=_customControlsEnabled;
@property(nonatomic) double aspectRatio; // @synthesize aspectRatio=_aspectRatio;
@property(nonatomic) _Bool hasVideoContent; // @synthesize hasVideoContent=_hasVideoContent;
@property(nonatomic) _Bool videoMuted; // @synthesize videoMuted=_videoMuted;
@property(nonatomic) double currentPlaybackTime; // @synthesize currentPlaybackTime=_currentPlaybackTime;
@property(nonatomic) double videoDuration; // @synthesize videoDuration=_videoDuration;
@property(nonatomic) long long videoPlaybackState; // @synthesize videoPlaybackState=_videoPlaybackState;
@property(nonatomic) __weak id <GADAdViewVideoControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)setInitialStateWithVideoOptions:(id)arg1;
- (void)pause;
- (void)play;
- (void)setMute:(_Bool)arg1;
- (id)initWithAdView:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADVideoAnimationData : GADAnimationData
{
    struct CGRect _initialVideoFrame;
    struct CGRect _finalVideoFrame;
}

@property(nonatomic) struct CGRect finalVideoFrame; // @synthesize finalVideoFrame=_finalVideoFrame;
@property(nonatomic) struct CGRect initialVideoFrame; // @synthesize initialVideoFrame=_initialVideoFrame;
- (id)initWithAnimation:(id)arg1;

@end

@interface GADStoreKitProductAnimationData : GADAnimationData
{
    NSString *_productIdentifier;
    NSString *_dismissalNotificationRequestIdentifier;
    struct CGRect _initialStoreKitFrame;
    struct CGRect _finalStoreKitFrame;
}

@property(nonatomic) struct CGRect finalStoreKitFrame; // @synthesize finalStoreKitFrame=_finalStoreKitFrame;
@property(nonatomic) struct CGRect initialStoreKitFrame; // @synthesize initialStoreKitFrame=_initialStoreKitFrame;
@property(copy, nonatomic) NSString *dismissalNotificationRequestIdentifier; // @synthesize dismissalNotificationRequestIdentifier=_dismissalNotificationRequestIdentifier;
@property(copy, nonatomic) NSString *productIdentifier; // @synthesize productIdentifier=_productIdentifier;
- (void).cxx_destruct;
- (id)initWithAnimation:(id)arg1;

@end

@interface GADAnimationData : NSObject
{
}

+ (id)animationsDataFromAnimations:(id)arg1;

@end

@interface GADAssetLoadingVideoPlayerItem : NSObject <AVAssetResourceLoaderDelegate>
{
    NSURL *_videoURL;
    GADVideoAssetLoader *_assetLoader;
    GADVideoConfiguration *_videoConfiguration;
    AVPlayerItem *_playerItem;
    NSTimer *_playerItemCheckSourceTimer;
    _Bool _loadingEnabled;
    AVAssetResourceLoadingRequest *_loadingRequest;
    GADResourceCache *_resourceCache;
    long long _resourceCacheStartingByteOffset;
    GADVideoPlayer *_player;
    id _playbackProgressObserver;
    float _videoBitRateInBitsPerSecond;
    double _playerItemCachingStartTimeInterval;
    double _playerItemCurrentTimeInterval;
    long long _loadedContentSizeWithNoBufferUpdate;
    long long _numberOfFailedResourceCache;
    NSObject<OS_dispatch_queue> *_lockQueue;
}

- (void).cxx_destruct;
- (void)resourceLoader:(id)arg1 didCancelLoadingRequest:(id)arg2;
- (_Bool)resourceLoader:(id)arg1 shouldWaitForLoadingOfRequestedResource:(id)arg2;
- (_Bool)loadDataRequest:(id)arg1 withError:(id *)arg2;
- (_Bool)loadContentRequest:(id)arg1 withError:(id *)arg2;
- (_Bool)prepareForLoadingByteOffset:(long long)arg1;
- (void)processLoadingRequest;
- (void)handlePlayerItemUpdates;
- (void)loadPlayerItemData;
- (void)stopPlayerItemCheckSourceTimer;
- (void)startPlayerItemCheckSourceTimer;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (id)playerItem;
- (id)videoURL;
- (void)setPlayer:(id)arg1;
- (void)dealloc;
- (id)initWithVideoURL:(id)arg1 assetLoader:(id)arg2 videoConfiguration:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADAudioVideoManager : NSObject
{
    NSMutableSet *_playingVideos;
    NSMutableSet *_soundVideos;
    NSMutableSet *_userInitiatedSoundVideos;
    long long _numLoadedPlayer;
    _Bool _audioSessionIsApplicationManaged;
    id <GADAudioVideoManagerDelegate> _delegate;
}

@property(nonatomic) _Bool audioSessionIsApplicationManaged; // @synthesize audioSessionIsApplicationManaged=_audioSessionIsApplicationManaged;
@property(nonatomic) __weak id <GADAudioVideoManagerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)updateAudioSessionAfterAllVideoStopPlayingSound;
- (void)playerDidStopPlayingSound:(id)arg1;
- (void)playerWillStartPlayingSound:(id)arg1 userInitiated:(_Bool)arg2;
- (void)playerDidPauseVideo:(id)arg1;
- (void)playerWillStartPlayingVideo:(id)arg1 userInitiated:(_Bool)arg2;
- (void)playerDidUnload:(id)arg1;
- (void)playerWillLoad:(id)arg1;
- (long long)numLoadedPlayer;
- (id)init;

@end

@interface GADVideoAssetLoader : NSObject
{
    NSURL *_sourceURL;
    GADResourceCache *_mainResourceCache;
    GADVideoConfiguration *_videoConfiguration;
    GADResourceCache *_resourceCache;
    long long _resourceCacheStartingByteOffset;
    unsigned long long _downloadedBytes;
    unsigned long long _videoSizeInBytes;
    NSString *_contentType;
    GADClearcutLogger *_logger;
}

+ (void)initialize;
- (void).cxx_destruct;
- (void)finishedUsingResourceCache:(id)arg1;
- (_Bool)getResourceCache:(id *)arg1 startingByteOffset:(long long *)arg2 loadingByteOffset:(long long)arg3 error:(id *)arg4;
- (void)resetEventLogger;
- (void)dealloc;
- (id)initWithVideoURL:(id)arg1 resourceCache:(id)arg2 videoConfiguration:(id)arg3;

@end

@interface GADVideoConfiguration : NSObject
{
    NSObject<OS_dispatch_queue> *_lockQueue;
    double _minBufferTimeInterval;
    double _maxBufferTimeInterval;
    double _bufferForPlaybackTimeInterval;
    double _bufferForPlaybackAfterRebufferTimeInterval;
    _Bool _enableAVPlayerPlaybackBuffering;
    _Bool _enableAdvanceBufferingControl;
    _Bool _enableInMemoryVideoBuffer;
    _Bool _videoBufferShouldIgnoreCanPlayThrough;
    long long _precacheMaxBufferBytes;
    double _videoAssetLoaderMaxDownloadWaitTimeInterval;
    long long _videoAssetLoaderMaxContentSizeInBytes;
    long long _videoAssetMaxLoadableChunkSizeInBytes;
    long long _assetLoadingPlayerItemMaxContentLoadingFailedAttempts;
    long long _assetLoadingPlayerItemMaxDataLoadingFailedAttempts;
    double _assetLoadingPlayerItemRefreshInterval;
    long long _assetLoadingPlayerItemNoBufferUpdateMaxContentSize;
    double _precacheUpdateCheckIntervals;
}

@property(readonly, nonatomic) double precacheUpdateCheckIntervals; // @synthesize precacheUpdateCheckIntervals=_precacheUpdateCheckIntervals;
@property(readonly, nonatomic) _Bool videoBufferShouldIgnoreCanPlayThrough; // @synthesize videoBufferShouldIgnoreCanPlayThrough=_videoBufferShouldIgnoreCanPlayThrough;
@property(readonly, nonatomic) long long assetLoadingPlayerItemNoBufferUpdateMaxContentSize; // @synthesize assetLoadingPlayerItemNoBufferUpdateMaxContentSize=_assetLoadingPlayerItemNoBufferUpdateMaxContentSize;
@property(readonly, nonatomic) double assetLoadingPlayerItemRefreshInterval; // @synthesize assetLoadingPlayerItemRefreshInterval=_assetLoadingPlayerItemRefreshInterval;
@property(readonly, nonatomic) long long assetLoadingPlayerItemMaxDataLoadingFailedAttempts; // @synthesize assetLoadingPlayerItemMaxDataLoadingFailedAttempts=_assetLoadingPlayerItemMaxDataLoadingFailedAttempts;
@property(readonly, nonatomic) long long assetLoadingPlayerItemMaxContentLoadingFailedAttempts; // @synthesize assetLoadingPlayerItemMaxContentLoadingFailedAttempts=_assetLoadingPlayerItemMaxContentLoadingFailedAttempts;
@property(readonly, nonatomic) long long videoAssetMaxLoadableChunkSizeInBytes; // @synthesize videoAssetMaxLoadableChunkSizeInBytes=_videoAssetMaxLoadableChunkSizeInBytes;
@property(readonly, nonatomic) long long videoAssetLoaderMaxContentSizeInBytes; // @synthesize videoAssetLoaderMaxContentSizeInBytes=_videoAssetLoaderMaxContentSizeInBytes;
@property(readonly, nonatomic) double videoAssetLoaderMaxDownloadWaitTimeInterval; // @synthesize videoAssetLoaderMaxDownloadWaitTimeInterval=_videoAssetLoaderMaxDownloadWaitTimeInterval;
@property(readonly, nonatomic) long long precacheMaxBufferBytes; // @synthesize precacheMaxBufferBytes=_precacheMaxBufferBytes;
@property(readonly, nonatomic) _Bool enableInMemoryVideoBuffer; // @synthesize enableInMemoryVideoBuffer=_enableInMemoryVideoBuffer;
@property(readonly, nonatomic) _Bool enableAdvanceBufferingControl; // @synthesize enableAdvanceBufferingControl=_enableAdvanceBufferingControl;
@property(readonly, nonatomic) _Bool enableAVPlayerPlaybackBuffering; // @synthesize enableAVPlayerPlaybackBuffering=_enableAVPlayerPlaybackBuffering;
- (void).cxx_destruct;
@property(readonly) double bufferForPlaybackAfterRebufferTimeInterval;
@property(readonly) double bufferForPlaybackTimeInterval;
@property(readonly) double maxBufferTimeInterval;
@property(readonly) double minBufferTimeInterval;
- (void)loadDynamicSettingsWithDictionary:(id)arg1;
- (void)loadStaticSettingsWithDictionary:(id)arg1;
- (void)updateDynamicConfigurationWithDictionary:(id)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)init;

@end

@interface GADVideoController : NSObject <GADAdViewVideoControllerDelegate, GADMediationNativeAdVideoControllerDelegate, GADVideoControllerDelegate, GADVideoControlling>
{
    id <GADVideoControllerDelegate> _delegate;
    id <GADVideoControlling> _internalVideoController;
}

@property(retain, nonatomic) id <GADVideoControlling> internalVideoController; // @synthesize internalVideoController=_internalVideoController;
@property(nonatomic) __weak id <GADVideoControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)videoControllerDidUnmuteVideo:(id)arg1;
- (void)videoControllerDidMuteVideo:(id)arg1;
- (void)videoControllerDidEndVideoPlayback:(id)arg1;
;
- (void)videoControllerDidPlayVideo:(id)arg1;
- (void)mediationNativeAdVideoControllerDidEndVideoPlayback:(id)arg1;
- (void)mediationNativeAdVideoControllerDidPauseVideo:(id)arg1;
- (void)mediationNativeAdVideoControllerDidPlayVideo:(id)arg1;
- (void)adViewVideoControllerDidUnmuteVideo:(id)arg1;
- (void)adViewVideoControllerDidMuteVideo:(id)arg1;
- (void)adViewVideoControllerDidEndVideoPlayback:(id)arg1;
- (void)adViewVideoControllerDidPauseVideo:(id)arg1;
- (void)adViewVideoControllerDidPlayVideo:(id)arg1;
- (void)setInternalVideoControllerDelegate:(id)arg1;
- (_Bool)clickToExpandEnabled;
- (long long)videoPlaybackState;
- (_Bool)customControlsEnabled;
- (void)setInitialStateWithVideoOptions:(id)arg1;
- (double)aspectRatio;
- (_Bool)hasVideoContent;
- (void)setMute:(_Bool)arg1;
- (void)pause;
- (void)play;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADVideoLoader : NSObject <AVAssetResourceLoaderDelegate>
{
    NSURL *_sourceURL;
    GADGCacheURLLoader *_gcacheURLLoader;
    _Bool _hasNotifiedVideoLoadingStarted;
    _Bool _hasNotifiedVideoLoadingFailed;
    NSMutableArray *_pendingRequests;
    AVURLAsset *_cachedResourceAsset;
    _Bool _isObservingResourceCache;
    GADResourceCache *_resourceCache;
    GADVideoPlayer *_player;
    GADVideoConfiguration *_configuration;
    GADAssetLoadingVideoPlayerItem *_assetLoadingPlayerItem;
    _Bool _hasBeenUsed;
    AVPlayerItem *_playerItem;
    id <GADVideoLoaderDelegate> _delegate;
}

@property(readonly, nonatomic) _Bool hasBeenUsed; // @synthesize hasBeenUsed=_hasBeenUsed;
@property(nonatomic) __weak id <GADVideoLoaderDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) AVPlayerItem *playerItem; // @synthesize playerItem=_playerItem;
- (void).cxx_destruct;
- (void)resourceCacheDidUpdateCacheNotification:(id)arg1;
- (void)stopObservingResourceCacheUpdates;
- (void)observeResourceCacheUpdates;
- (void)resourceLoader:(id)arg1 didCancelLoadingRequest:(id)arg2;
- (_Bool)processAssetResourceLoadingRequest:(id)arg1 withError:(id *)arg2;
- (_Bool)resourceLoader:(id)arg1 shouldWaitForLoadingOfRequestedResource:(id)arg2;
- (void)notifyVideoLoaderFailedToLoadURL:(id)arg1 withError:(id)arg2;
- (void)notifyVideoLoaderDidStartLoadingURL:(id)arg1;
- (void)loadWithResourceCache:(id)arg1;
- (void)loadAdvanceControlVideoURL:(id)arg1 resourceCache:(id)arg2;
- (void)loadGCacheURL:(id)arg1;
- (void)loadStandardURL:(id)arg1;
- (void)cancel;
- (void)dealloc;
- (void)loadURL:(id)arg1 resourceCache:(id)arg2 configuration:(id)arg3;
- (id)initWithPlayer:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADVideoOptions : GADAdLoaderOptions
{
    _Bool _startMuted;
    _Bool _customControlsRequested;
    _Bool _clickToExpandRequested;
}

@property(nonatomic) _Bool clickToExpandRequested; // @synthesize clickToExpandRequested=_clickToExpandRequested;
@property(nonatomic) _Bool customControlsRequested; // @synthesize customControlsRequested=_customControlsRequested;
@property(nonatomic) _Bool startMuted; // @synthesize startMuted=_startMuted;
- (id)requestParameters;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)init;

@end

@interface GADVideoPlayer : NSObject <GADVideoLoaderDelegate>
{
    _Bool _isBuffering;
    _Bool _hasPostedCanPlayThrough;
    _Bool _isObserving;
    _Bool _isObservingPlayerItem;
    _Bool _isObservingPlayerItemLoadedTimeRanges;
    id _timeObserver;
    AVPlayer *_player;
    AVPlayerItem *_playerItem;
    GADAdView *_adView;
    GADVideoLoader *_videoLoader;
    GADVideoConfiguration *_configuration;
    NSMutableArray *_periodicTimeObservers;
    NSURL *_sourceURL;
    _Bool _playerToAudioVideoManagerReportingDisabled;
    _Bool _playing;
    _Bool _playbackStalled;
    _Bool _hasPlaybackStalledAtLeastOnce;
    float _volume;
    _Bool _muted;
    id _applicationForegroundObserver;
    id <GADVideoPlayerDelegate> _delegate;
    GADClearcutLogger *_logger;
}

@property(retain, nonatomic) GADClearcutLogger *logger; // @synthesize logger=_logger;
@property(readonly, nonatomic) _Bool hasPostedCanPlayThrough; // @synthesize hasPostedCanPlayThrough=_hasPostedCanPlayThrough;
@property(nonatomic) __weak id <GADVideoPlayerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)videoLoader:(id)arg1 didFailToLoadURL:(id)arg2 withError:(id)arg3;
- (void)videoLoader:(id)arg1 didStartedLoadingURL:(id)arg2;
- (void)notifyVideoRateChanged;
- (void)notifyVideoPlayerWithNewStatus:(long long)arg1;
- (void)notifyVideoReadyToPlay;
- (void)notifyVideoPlayerWithTime:(CDStruct_198678f7)arg1;
- (void)itemDidPlayToEnd:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)stopObservingPlayerItemLoadedTimeRanges;
- (void)stopObservingPlayerItem;
- (void)stopObservingPlayer;
- (void)observePlayerItemLoadedTimeRanges;
- (void)observePlayerItem;
- (void)observePlayer;
- (void)resetLogger;
- (void)videoIsReadyToPlay;
- (void)removeTimeObserver:(id)arg1;
- (void)addPeriodicTimeObserverForInterval:(CDStruct_198678f7)arg1 queue:(id)arg2 usingBlock:(CDUnknownBlockType)arg3 completionBlock:(CDUnknownBlockType)arg4;
- (void)handlePlayerItemDurationLoadUpdate;
- (struct CGSize)videoSize;
- (void)setVolume:(float)arg1 userInitiated:(_Bool)arg2;
- (void)seekToTime:(double)arg1;
- (void)setMuted:(_Bool)arg1 userInitiated:(_Bool)arg2;
- (void)setAudioMixVolume:(float)arg1;
- (void)pause;
- (void)pauseNativePlayerUserInitiated:(_Bool)arg1;
- (void)play;
- (void)playNativePlayerUserInitiated:(_Bool)arg1;
- (void)load;
- (void)setSourceURL:(id)arg1 resourceCache:(id)arg2 videoConfiguration:(id)arg3;
@property(readonly, copy, nonatomic) NSURL *sourceURL;
- (void)didStopBuffering;
- (void)willStartBuffering;
- (void)dealloc;
- (id)initWithAdView:(id)arg1;
- (id)init;
- (void)videoStatusUpdated:(long long)arg1;
- (void)videoLoadingFailedWithURL:(id)arg1 error:(id)arg2;
- (void)videoPlayedToTime:(CDStruct_198678f7)arg1 duration:(CDStruct_198678f7)arg2;
- (void)videoStartedPlaying;
- (void)videoReadyToPlayWithURL:(id)arg1;
- (void)videoLoadingStartedWithURL:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADVideoPlayerGLView : UIView <GLKViewDelegate, GADVideoRendering>
{
    GLKView *_glView;
    NSThread *_renderThread;
    CADisplayLink *_displayLink;
    AVPlayerItemVideoOutput *_videoOutput;
    AVPlayer *_currentPlayer;
    double _nextDisplayTime;
    _Bool _hasDisplayedAtLeastOnePixelBuffer;
    double _displayStartTimeIntervalSince1970;
    double _videoOutputEmptyTimeIntervalThreshold;
    EAGLContext *_context;
    GADGLSphericalShader *_sphericalShader;
    _Bool _applicationActive;
    _Bool _isSubViewOfVisibleWindow;
    GADBlockInvocation *_renderThreadBlockInvocation;
    id <GADVideoPlayerGLViewDelegate> _delegate;
}

@property(nonatomic) __weak id <GADVideoPlayerGLViewDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)renderThreadApplicationDidEnterBackground;
- (void)renderThreadApplicationWillEnterForeground;
- (void)applicationDidEnterBackground:(id)arg1;
- (void)applicationWillEnterForeground:(id)arg1;
- (void)renderThreadWillMoveToWindow:(id)arg1;
- (void)willMoveToWindow:(id)arg1;
- (void)renderThreadSetUpFailedWithErrorMessage:(id)arg1;
- (void)renderThreadSetUpSucceeded;
- (void)glkView:(id)arg1 drawInRect:(struct CGRect)arg2;
- (void)resumeDisplayLink;
- (void)pauseDisplayLink;
- (void)unscheduleDisplayLink;
- (void)displayLinkCallback:(id)arg1;
- (void)layoutSubviews;
- (void)renderThreadResetVideoOutput;
- (void)renderThreadSetUp;
- (id)displayLinkCallbackBlockInvocation;
- (id)renderThreadBlockInvocationWithDisplayLink:(id)arg1;
- (void)stopRenderThread;
- (void)startRenderThread;
- (void)renderThreadUserTouchMovedByVector:(id)arg1;
- (void)handleUserTouchMovedByVector:(struct CGVector)arg1;
- (void)optimizeVideoForAdVisibility:(_Bool)arg1;
- (void)disableVideoPlaybackOptimization;
- (void)resetVideoPlaybackOptimization;
- (void)enableVideoPlaybackOptimization;
- (void)setUpWithPlayer:(id)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADVideoPlayerView : UIView <GADVideoRendering>
{
    AVPlayer *_player;
    AVPlayerItem *_playerItem;
    AVPlayerLayer *_playerLayer;
    _Bool _playbackOptimizationEnabled;
}

- (void).cxx_destruct;
- (void)disableVideoPlaybackOptimization;
- (void)resetVideoPlaybackOptimization;
- (void)enableVideoPlaybackOptimization;
- (void)optimizeVideoForAdVisibility:(_Bool)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (void)setUpWithPlayer:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DFPBannerView : GADBannerView <GADLoadable, DFPCustomRenderedAdEventHandler>
{
    unsigned int _previousCorrelationID;
    id <GADAppEventDelegate> _appEventDelegate;
    NSArray *_validAdSizes;
    id <DFPCustomRenderedBannerViewDelegate> _customRenderedBannerViewDelegate;
}

+ (id)mediationConnectorForConfiguration:(id)arg1 networkConfiguration:(id)arg2;
+ (_Bool)canInitWithAdLoader:(id)arg1 error:(id *)arg2;
+ (id)requestParametersForAdLoader:(id)arg1;
+ (id)requiredDelegateProtocol;
@property(nonatomic) __weak id <DFPCustomRenderedBannerViewDelegate> customRenderedBannerViewDelegate; // @synthesize customRenderedBannerViewDelegate=_customRenderedBannerViewDelegate;
@property(copy, nonatomic) NSArray *validAdSizes; // @synthesize validAdSizes=_validAdSizes;
@property(nonatomic) __weak id <GADAppEventDelegate> appEventDelegate; // @synthesize appEventDelegate=_appEventDelegate;
- (void).cxx_destruct;
- (void)slot:(id)arg1 willLoadAdWithRequest:(id)arg2;
- (_Bool)slotShouldPreemptInProgressRequest:(id)arg1;
- (_Bool)slot:(id)arg1 notifyPublisherToRenderCustomRenderingAd:(id)arg2 error:(id *)arg3;
- (void)slot:(id)arg1 didReceiveAppEvent:(id)arg2 withInfo:(id)arg3;
- (void)slot:(id)arg1 willResizeToAdSize:(struct GADAdSize)arg2;
- (void)setAdOptions:(id)arg1;
- (void)setValidAdSizesWithSizes:(struct GADAdSize *)arg1;
- (void)recordImpression;
- (void)resize:(struct GADAdSize)arg1;
@property(nonatomic) _Bool enableManualImpressions;
@property(retain, nonatomic) GADCorrelator *correlator;
- (void)adLoaderDidReceiveAd:(id)arg1;
- (void)loadAssetsWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)finishedRenderingAdView:(id)arg1;
- (void)recordCustomAdImpression;
- (void)recordClick;

// Remaining properties
@property(nonatomic) __weak id <GADAdSizeDelegate> adSizeDelegate; // @dynamic adSizeDelegate;
@property(copy, nonatomic) NSString *adUnitID; // @dynamic adUnitID;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@property(readonly, nonatomic) GADVideoController *videoController; // @dynamic videoController;

@end

@interface GADAdViewState : NSObject
{
    UIView *_superview;
    id <GADAdViewDelegate> _delegate;
    UIViewController *_viewController;
    unsigned long long _autoresizingMask;
    struct CGRect _frame;
}

@property(nonatomic) unsigned long long autoresizingMask; // @synthesize autoresizingMask=_autoresizingMask;
@property(nonatomic) __weak UIViewController *viewController; // @synthesize viewController=_viewController;
@property(nonatomic) __weak id <GADAdViewDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) UIView *superview; // @synthesize superview=_superview;
@property(nonatomic) struct CGRect frame; // @synthesize frame=_frame;
- (void).cxx_destruct;

@end

@interface GADAdView : UIView <GADVideoPlayerDelegate, GADVideoPlayerGLViewDelegate, UIGestureRecognizerDelegate, GADWebViewDelegate, GADWebViewContentSizeDelegate, GADWebKitWebViewMRAIDDelegate, UIAlertViewDelegate>
{
    GADWebView *_webView;
    NSURL *_URL;
    GADAdViewState *_savedState;
    NSOperationQueue *_eventQueue;
    UIGestureRecognizer *_touchGestureRecognizer;
    UIGestureRecognizer *_debugGestureRecognizer;
    _Bool _reportedStartLoadEarly;
    _Bool _isInterstitialAdView;
    _Bool _isFluidAdView;
    _Bool _touched;
    _Bool _showDebug;
    _Bool _hasLoadedAtLeastOnce;
    _Bool _attachedToPlacement;
    _Bool _visible;
    _Bool _spherical;
    UIViewController *_viewController;
    NSString *_adDebugDialogString;
    long long _orientation;
    GADAdViewActiveViewReporter *_activeViewReporter;
    id <GADAdViewDelegate> _delegate;
    GADAd *_ad;
    GADClearcutLogger *_logger;
    UIView *_testAdLabel;
    NSMutableDictionary *_cachedStoreKitProducts;
    GADAdViewVideoController *_videoController;
    GADVideoPlayer *_videoPlayer;
    UIView<GADVideoRendering> *_videoPlayerView;
    id <GADRewardBasedVideoAdGMSGHandlerDelegate> _rewardBasedVideoAdGMSGHandlerDelegate;
    struct CGSize _adResponseSize;
    struct CGRect _cachedVideoPlayerFrame;
}

@property(nonatomic) __weak id <GADRewardBasedVideoAdGMSGHandlerDelegate> rewardBasedVideoAdGMSGHandlerDelegate; // @synthesize rewardBasedVideoAdGMSGHandlerDelegate=_rewardBasedVideoAdGMSGHandlerDelegate;
@property(nonatomic) struct CGRect cachedVideoPlayerFrame; // @synthesize cachedVideoPlayerFrame=_cachedVideoPlayerFrame;
@property(nonatomic, getter=isSpherical) _Bool spherical; // @synthesize spherical=_spherical;
@property(retain, nonatomic) UIView<GADVideoRendering> *videoPlayerView; // @synthesize videoPlayerView=_videoPlayerView;
@property(retain, nonatomic) GADVideoPlayer *videoPlayer; // @synthesize videoPlayer=_videoPlayer;
@property(retain, nonatomic) GADAdViewVideoController *videoController; // @synthesize videoController=_videoController;
@property(retain, nonatomic) NSMutableDictionary *cachedStoreKitProducts; // @synthesize cachedStoreKitProducts=_cachedStoreKitProducts;
@property(retain, nonatomic) UIView *testAdLabel; // @synthesize testAdLabel=_testAdLabel;
@property(nonatomic) _Bool visible; // @synthesize visible=_visible;
@property(retain, nonatomic) GADClearcutLogger *logger; // @synthesize logger=_logger;
@property(retain, nonatomic) GADAd *ad; // @synthesize ad=_ad;
@property(readonly, nonatomic) _Bool attachedToPlacement; // @synthesize attachedToPlacement=_attachedToPlacement;
@property(readonly, nonatomic) _Bool hasLoadedAtLeastOnce; // @synthesize hasLoadedAtLeastOnce=_hasLoadedAtLeastOnce;
@property(nonatomic) __weak id <GADAdViewDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) GADAdViewActiveViewReporter *activeViewReporter; // @synthesize activeViewReporter=_activeViewReporter;
@property(nonatomic) long long orientation; // @synthesize orientation=_orientation;
@property(nonatomic) struct CGSize adResponseSize; // @synthesize adResponseSize=_adResponseSize;
@property(nonatomic) _Bool showDebug; // @synthesize showDebug=_showDebug;
@property(copy, nonatomic) NSString *adDebugDialogString; // @synthesize adDebugDialogString=_adDebugDialogString;
@property(nonatomic) _Bool touched; // @synthesize touched=_touched;
@property(nonatomic) __weak UIViewController *viewController; // @synthesize viewController=_viewController;
- (void).cxx_destruct;
- (void)postJSNotification:(id)arg1 userInfo:(id)arg2;
- (void)layoutSubviews;
@property(readonly, copy, nonatomic) NSURL *URL;
@property(readonly, nonatomic, getter=isLoading) _Bool loading;
@property(readonly, nonatomic, getter=canGoForward) _Bool canGoForward;
@property(readonly, nonatomic, getter=canGoBack) _Bool canGoBack;
- (id)backgroundColor;
- (void)setBackgroundColor:(id)arg1;
- (_Bool)isOpaque;
- (void)setOpaque:(_Bool)arg1;
@property(readonly, retain, nonatomic) UIScrollView *scrollView;
- (void)webView:(id)arg1 didChangeScrollViewContentSize:(struct CGSize)arg2;
- (void)webViewProcessDidTerminate:(id)arg1;
- (void)webView:(id)arg1 runJavaScriptTextInputPanelWithTitle:(id)arg2 defaultText:(id)arg3 prompt:(id)arg4 completionHandler:(CDUnknownBlockType)arg5;
- (void)webView:(id)arg1 runJavaScriptConfirmPanelWithTitle:(id)arg2 message:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)webView:(id)arg1 runJavaScriptAlertPanelWithTitle:(id)arg2 message:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (_Bool)canOpenWebViewAlertPanelWithViewController:(id)arg1 opener:(id)arg2;
- (void)webView:(id)arg1 didFailLoadWithError:(id)arg2;
- (void)webViewDidFinishLoad:(id)arg1;
- (void)updateWebViewFrame;
- (double)contentSizeDelay;
- (void)webViewDidStartLoad:(id)arg1;
- (_Bool)webView:(id)arg1 shouldStartLoadWithRequest:(id)arg2 navigationType:(long long)arg3;
- (id)MRAIDJavaScriptURLStringForWebView:(id)arg1;
- (_Bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (_Bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (void)reload;
- (void)stopLoading;
- (void)goForward;
- (void)goBack;
- (void)loadRequest:(id)arg1;
- (void)didMoveToPlacement:(id)arg1;
- (void)didRotateToOrientation:(long long)arg1;
- (void)forceRotateHTMLToOrientation:(long long)arg1;
- (void)setHTMLWindowOrientation:(long long)arg1 shouldDispatchOrientationChangeEvent:(_Bool)arg2;
- (void)dispatchSDKEvent:(id)arg1 parameters:(id)arg2;
- (void)willLoadHTML;
- (void)restoreState;
- (void)saveState;
- (id)webView;
- (void)executeJavaScriptAsynchronouslyFromString:(id)arg1;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (struct CGSize)intrinsicContentSize;
- (struct CGSize)contentSize;
- (void)handleGesture:(id)arg1;
- (void)reset;
- (void)addGestureRecognizers;
- (void)loadHTMLString:(id)arg1 baseURL:(id)arg2;
- (void)setIsFluidAdView:(_Bool)arg1;
- (void)reportRequestsForAd:(id)arg1;
- (void)configureAsBannerAdView;
- (void)configureAsInterstitialAdView;
- (id)opener;
- (void)willMoveToWindow:(id)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithFrame:(struct CGRect)arg1 configuration:(id)arg2;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (void)videoPlayerGLView:(id)arg1 didFailToSetupVideoPlayer:(id)arg2 withError:(id)arg3;
- (void)videoPlayerGLView:(id)arg1 didSetUpVideoPlayer:(id)arg2;
- (void)player:(id)arg1 didLoadURL:(id)arg2 withAVPlayer:(id)arg3;
- (void)rotateVideoToDegrees:(double)arg1;
- (void)notifySphericalVideoRenderingFailedWithError:(id)arg1;
- (void)createNonSphericalViewForPlayer:(id)arg1;
- (void)createSphericalViewForPlayer:(id)arg1;
- (void)removeVideoPlayerView;
- (void)createViewForPlayer:(id)arg1;
- (void)optimizeVideoPlayback;
- (void)pauseVideo;
- (void)showVideo;
- (void)hideVideo;
- (void)setVideoPlayerFrame:(struct CGRect)arg1;
- (void)setUpVideoPlayerWithURL:(id)arg1 resourceCache:(id)arg2 configuration:(id)arg3;
- (void)videoRenderingSucceeded;
- (void)videoRenderingStarted;
- (void)openGLVideoRenderingSucceeded;
- (void)openGLVideoRenderingFailedWithError:(id)arg1;
- (void)openGLVideoRenderingStarted;
- (void)videoLoadSucceededWithURL:(id)arg1;
- (void)videoLoadStartedWithURL:(id)arg1;
- (void)adRenderingStarted;
- (void)createdVideoPlayer:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADAdViewActiveViewReporter : NSObject
{
    _Bool _reporting;
    id <GADAdViewActiveViewMonitoring> _observer;
}

@property(readonly, nonatomic) _Bool reporting; // @synthesize reporting=_reporting;
@property(nonatomic) __weak id <GADAdViewActiveViewMonitoring> observer; // @synthesize observer=_observer;
- (void).cxx_destruct;
- (void)dealloc;
- (void)stop;
- (void)start;

@end

@interface GADAdViewDelegate : NSObject <GADAdViewDelegate>
{
    NSMutableArray *_GMSGHandlers;
    _Bool _hasLoadedAtLeastOnce;
    GADOpener *_opener;
}

@property(readonly, nonatomic) _Bool hasLoadedAtLeastOnce; // @synthesize hasLoadedAtLeastOnce=_hasLoadedAtLeastOnce;
@property(readonly, nonatomic) GADOpener *opener; // @synthesize opener=_opener;
- (void).cxx_destruct;
- (id)CSIForGMSGHandler:(id)arg1;
- (void)adViewWebProcessDidTerminate:(id)arg1;
- (void)adView:(id)arg1 didMoveToPlacement:(id)arg2;
- (void)adView:(id)arg1 didFailLoadWithError:(id)arg2;
- (_Bool)handlesClicks;
- (void)addGMSGHandler:(id)arg1;
- (void)adViewDidFinishLoad:(id)arg1;
- (void)adViewDidStartLoad:(id)arg1;
- (_Bool)adView:(id)arg1 shouldStartLoadWithRequest:(id)arg2 navigationType:(long long)arg3;
- (_Bool)adViewDelegateAdView:(id)arg1 shouldStartLoadWithRequest:(id)arg2 navigationType:(long long)arg3;
- (_Bool)shouldTreatNavigationTypeAsClick:(long long)arg1;
- (void)handleDeeplinkPlusURL:(id)arg1;
- (void)handleGMSGURL:(id)arg1 adView:(id)arg2;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADAlert : NSObject <UIAlertViewDelegate, GADIntermitting>
{
    GADAlert *_retainCycle;
    NSMutableDictionary *_completionHandlersByButtonIndex;
    UIAlertView *_alertView;
    _Bool _alertShown;
    _Bool _alertTappedOrCancelled;
    GADSlot *_slot;
    CDUnknownBlockType _presentationCompletionHandler;
    CDUnknownBlockType _dismissalCompletionHandler;
    GADIntermission *_intermission;
    NSString *_cancelButtonTitle;
    CDUnknownBlockType _cancelHandler;
}

@property(copy, nonatomic) CDUnknownBlockType cancelHandler; // @synthesize cancelHandler=_cancelHandler;
@property(copy, nonatomic) NSString *cancelButtonTitle; // @synthesize cancelButtonTitle=_cancelButtonTitle;
@property(readonly, nonatomic) GADIntermission *intermission; // @synthesize intermission=_intermission;
- (void).cxx_destruct;
- (void)alertView:(id)arg1 clickedButtonAtIndex:(long long)arg2;
- (void)alertViewCancel:(id)arg1;
- (void)alertView:(id)arg1 didDismissWithButtonIndex:(long long)arg2;
- (void)alertView:(id)arg1 willDismissWithButtonIndex:(long long)arg2;
- (void)didPresentAlertView:(id)arg1;
- (_Bool)shouldDismissOnApplicationEnteringForeground;
- (void)relinquishScreenWithCompletion:(CDUnknownBlockType)arg1;
- (void)presentFromViewController:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)addButtonWithTitle:(id)arg1 handler:(CDUnknownBlockType)arg2;
- (id)initWithTitle:(id)arg1 message:(id)arg2 slot:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADBannerAdViewDelegate : GADAdViewDelegate <GADDelayLoadDelegate>
{
    _Bool _loadDelayed;
    _Bool _loadFinished;
    GADSlot *_slot;
}

@property(readonly, nonatomic, getter=isLoadFinished) _Bool loadFinished; // @synthesize loadFinished=_loadFinished;
@property(readonly, nonatomic, getter=isLoadDelayed) _Bool loadDelayed; // @synthesize loadDelayed=_loadDelayed;
@property(readonly, nonatomic) __weak GADSlot *slot; // @synthesize slot=_slot;
- (void).cxx_destruct;
- (id)CSIForGMSGHandler:(id)arg1;
- (void)loadHandlerDidCancel:(id)arg1;
- (void)loadHandlerDidChangeDelay:(id)arg1 from:(long long)arg2 to:(long long)arg3;
- (void)adView:(id)arg1 didReceiveUnconfirmedClickWithClickInfo:(id)arg2;
- (void)adViewDidRecordClick:(id)arg1;
- (void)adViewDidRecordImpression:(id)arg1;
- (void)adView:(id)arg1 didLoadVideoWithSize:(struct CGSize)arg2;
- (void)adView:(id)arg1 contentSizeDidChange:(struct CGSize)arg2;
- (void)adView:(id)arg1 didFailLoadWithError:(id)arg2;
- (void)adViewDidFinishLoad:(id)arg1;
- (_Bool)adView:(id)arg1 shouldStartLoadWithRequest:(id)arg2 navigationType:(long long)arg3;
- (id)init;
- (id)initWithSlot:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADBannerView : UIView <GADAdMediationDelegate, GADSlotAdEventDelegate, GADSlotAdLoadDelegate, GADSlotDelegate, GADSlotAdKeyDelegate, GADSlotAdResponseDelegate>
{
    _Bool _hasLoadedAd;
    _Bool _hasInitialized;
    _Bool _isMediated;
    NSDictionary *_viewHierarchy;
    NSObject<OS_dispatch_queue> *_lockQueue;
    _Bool _setAdSizeAndReloadWasCalled;
    GADClearcutLogger *_logger;
    GADBufferedClearcutLogger *_bufferedLogger;
    GADAdExposureMonitor *_adExposureMonitor;
    GADAdConfiguration *_adConfiguration;
    NSString *_adUnitID;
    NSDictionary *_bannerKey;
    _Bool _autoloadEnabled;
    UIViewController *_rootViewController;
    id <GADBannerViewDelegate> _delegate;
    id <GADAdSizeDelegate> _adSizeDelegate;
    id <GADInAppPurchaseDelegate> _inAppPurchaseDelegate;
    GADVideoController *_videoController;
    UIView *_rootAdView;
    GADSlot *_slot;
}

@property(retain, nonatomic) GADSlot *slot; // @synthesize slot=_slot;
@property(retain, nonatomic) UIView *rootAdView; // @synthesize rootAdView=_rootAdView;
@property(readonly, nonatomic) GADVideoController *videoController; // @synthesize videoController=_videoController;
@property(nonatomic) __weak id <GADInAppPurchaseDelegate> inAppPurchaseDelegate; // @synthesize inAppPurchaseDelegate=_inAppPurchaseDelegate;
@property(nonatomic, getter=isAutoloadEnabled) _Bool autoloadEnabled; // @synthesize autoloadEnabled=_autoloadEnabled;
@property(nonatomic) __weak id <GADAdSizeDelegate> adSizeDelegate; // @synthesize adSizeDelegate=_adSizeDelegate;
@property(nonatomic) __weak id <GADBannerViewDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) __weak UIViewController *rootViewController; // @synthesize rootViewController=_rootViewController;
- (void).cxx_destruct;
- (id)videoOptions;
- (void)processAdOptions;
- (void)resetVideoController;
- (id)mediationConnectorForConfiguration:(id)arg1 networkConfiguration:(id)arg2;
- (void)slot:(id)arg1 willProcessMediatedAdResponse:(id)arg2;
- (_Bool)slot:(id)arg1 shouldProcessAdResponse:(id)arg2 error:(id *)arg3;
- (void)didMoveToWindow;
- (void)loadRequest:(id)arg1;
- (id)viewHierarchyInformationForSlot:(id)arg1;
- (void)cacheViewHierarchyInformationForSlot:(id)arg1;
- (void)slotWillLeaveApplication:(id)arg1;
- (void)slotDidDismissScreen:(id)arg1;
- (void)slotWillDismissScreen:(id)arg1;
- (void)slotWillPresentScreen:(id)arg1;
- (void)slot:(id)arg1 didFailToLoadAdContentWithError:(id)arg2;
- (void)slotFinishedLoadingAdContent:(id)arg1;
- (_Bool)slot:(id)arg1 shouldLoadRequest:(id)arg2 error:(id *)arg3;
- (void)layoutSubviewsIfNeeded;
- (void)slot:(id)arg1 contentSizeDidChange:(struct CGSize)arg2;
- (struct CGRect)frameInInterface;
- (void)slot:(id)arg1 didReceiveAdView:(id)arg2;
- (_Bool)slotShouldReloadCurrentRequest:(id)arg1;
- (id)requestParametersForRequest:(id)arg1;
- (void)setAdOptions:(id)arg1;
- (void)setAlpha:(double)arg1;
@property(readonly, copy, nonatomic) NSString *adNetworkClassName;
@property(readonly, nonatomic) __weak UIView *mediatedAdView;
@property(readonly, nonatomic) _Bool hasAutoRefreshed;
@property(readonly, nonatomic) __weak GADAdView *adView;
@property(nonatomic) struct GADAdSize adSize;
- (void)setAdSizeFromExternalCGSize:(struct CGSize)arg1;
- (void)setMediated;
@property(copy, nonatomic) NSDictionary *bannerKey;
@property(copy, nonatomic) NSString *adUnitID;
- (void)commonLayoutSubviews;
- (void)layoutSubviews;
- (struct CGSize)intrinsicContentSize;
- (void)setBounds:(struct CGRect)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (void)setAdSize:(struct GADAdSize)arg1 andReload:(_Bool)arg2;
- (void)dealloc;
- (id)initWithAdSize:(struct GADAdSize)arg1 origin:(struct CGPoint)arg2;
- (id)initWithAdSize:(struct GADAdSize)arg1;
- (id)init;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1 adSize:(struct GADAdSize)arg2;
- (void)commonInitWithAdSize:(struct GADAdSize)arg1;
- (void)rootObjectLoggerChanged;
- (void)bannerAdLoadFailedWithError:(id)arg1;
- (void)bannerAdLoadSucceeded;
- (void)bannerAdLoadStarted;
- (void)bannerCreatedSlot:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADBrowserAdView : GADAdView
{
}

- (id)browserViewController;
- (void)setViewController:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface GADDynamicHeightSearchBannerView : UIView <GADWebViewDelegate, UIGestureRecognizerDelegate>
{
    GADWebView *_adWebView;
    long long _adState;
    NSString *_adUnitID;
    id <GADDynamicHeightSearchBannerViewDelegate> _delegate;
}

@property(readonly, nonatomic) long long adState; // @synthesize adState=_adState;
@property(nonatomic) __weak id <GADDynamicHeightSearchBannerViewDelegate> delegate; // @synthesize delegate=_delegate;
@property(copy, nonatomic) NSString *adUnitID; // @synthesize adUnitID=_adUnitID;
- (void).cxx_destruct;
- (void)handleUserDidTapAdDestinationURL:(id)arg1;
- (void)handleBannerViewDidReceiveAd;
- (void)updateInternalAdViewHeightAndNotifyDelegateWithHeight:(double)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (void)webViewProcessDidTerminate:(id)arg1;
- (void)webView:(id)arg1 runJavaScriptTextInputPanelWithTitle:(id)arg2 defaultText:(id)arg3 prompt:(id)arg4 completionHandler:(CDUnknownBlockType)arg5;
- (void)webView:(id)arg1 runJavaScriptConfirmPanelWithTitle:(id)arg2 message:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)webView:(id)arg1 runJavaScriptAlertPanelWithTitle:(id)arg2 message:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)webView:(id)arg1 didFailLoadWithError:(id)arg2;
- (void)webViewDidFinishLoad:(id)arg1;
- (void)webViewDidStartLoad:(id)arg1;
- (_Bool)webView:(id)arg1 shouldStartLoadWithRequest:(id)arg2 navigationType:(long long)arg3;
- (_Bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (struct CGSize)currentAdSize;
- (void)loadRequest:(id)arg1;
- (void)configureBannerView;
- (void)dealloc;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADNativeExpressAdView : UIView <GADBannerViewDelegate, GADAdMediationDelegate, GADSlotAdResponseDelegate>
{
    GADBannerView *_bannerView;
    id <GADNativeExpressAdViewDelegate> _delegate;
}

@property(nonatomic) __weak id <GADNativeExpressAdViewDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)slot:(id)arg1 willProcessMediatedAdResponse:(id)arg2;
- (_Bool)slot:(id)arg1 shouldProcessAdResponse:(id)arg2 error:(id *)arg3;
- (id)adLoaderConfigurationForAd:(id)arg1 networkConfiguration:(id)arg2;
- (id)mediationConnectorForConfiguration:(id)arg1 networkConfiguration:(id)arg2;
- (void)adViewWillLeaveApplication:(id)arg1;
- (void)adViewDidDismissScreen:(id)arg1;
- (void)adViewWillDismissScreen:(id)arg1;
- (void)adViewWillPresentScreen:(id)arg1;
- (void)adView:(id)arg1 didFailToReceiveAdWithError:(id)arg2;
- (void)adViewDidReceiveAd:(id)arg1;
- (void)setAdOptions:(id)arg1;
- (struct CGSize)intrinsicContentSize;
@property(readonly, nonatomic) GADVideoController *videoController;
@property(readonly, nonatomic) __weak NSString *adNetworkClassName;
@property(nonatomic, getter=isAutoloadEnabled) _Bool autoloadEnabled;
@property(nonatomic) struct GADAdSize adSize;
@property(nonatomic) __weak UIViewController *rootViewController;
@property(copy, nonatomic) NSString *adUnitID;
- (void)loadRequest:(id)arg1;
- (void)dealloc;
- (id)initWithAdSize:(struct GADAdSize)arg1 origin:(struct CGPoint)arg2;
- (id)initWithAdSize:(struct GADAdSize)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1 adSize:(struct GADAdSize)arg2;
- (void)commonInitWithBannerView:(id)arg1;
- (void)rootObjectLoggerChanged;
- (void)createdBannerView:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADSearchBannerView : GADBannerView <GADDynamicHeightSearchBannerViewDelegate>
{
    GADDynamicHeightSearchBannerView *_dynamicHeightAdView;
}

@property(retain, nonatomic) GADDynamicHeightSearchBannerView *dynamicHeightAdView; // @synthesize dynamicHeightAdView=_dynamicHeightAdView;
- (void).cxx_destruct;
- (void)bannerView:(id)arg1 didFailToReceiveAdWithError:(id)arg2;
- (void)bannerView:(id)arg1 didUpdateDesiredContentSize:(struct CGSize)arg2;
- (void)bannerView:(id)arg1 didReceiveLandingPageURL:(id)arg2;
- (void)bannerViewDidReceiveAd:(id)arg1;
- (void)setAdUnitID:(id)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (void)loadRequest:(id)arg1;
- (void)commonInitWithAdSize:(struct GADAdSize)arg1;

// Remaining properties
@property(nonatomic) __weak id <GADAdSizeDelegate> adSizeDelegate; // @dynamic adSizeDelegate;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADUIKitWebView : GADWebView <UIWebViewDelegate>
{
}

- (void)webView:(id)arg1 didFailLoadWithError:(id)arg2;
- (void)webViewDidFinishLoad:(id)arg1;
- (void)webViewDidStartLoad:(id)arg1;
- (_Bool)webView:(id)arg1 shouldStartLoadWithRequest:(id)arg2 navigationType:(long long)arg3;
- (void)loadHTMLString:(id)arg1 baseURL:(id)arg2;
- (id)URL;
- (_Bool)contentSizeUpdatesSynchronously;
- (void)evaluateJavaScriptFromString:(id)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1 configuration:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADWKScriptMessageHandler : NSObject <WKScriptMessageHandler>
{
    GADWebKitWebView *_webView;
}

- (void).cxx_destruct;
- (void)userContentController:(id)arg1 didReceiveScriptMessage:(id)arg2;
- (id)initWithWebView:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADWebKitWebView : GADWebView <WKNavigationDelegate, WKUIDelegate>
{
    _Bool _isMRAIDLoaded;
    _Bool _isViewportLoaded;
    _Bool _scalesPageToFit;
    id <GADWebKitWebViewMRAIDDelegate> _MRAIDDelegate;
}

+ (_Bool)isAvailable;
+ (void)initialize;
@property(nonatomic) __weak id <GADWebKitWebViewMRAIDDelegate> MRAIDDelegate; // @synthesize MRAIDDelegate=_MRAIDDelegate;
- (void).cxx_destruct;
- (void)webView:(id)arg1 runJavaScriptTextInputPanelWithPrompt:(id)arg2 defaultText:(id)arg3 initiatedByFrame:(id)arg4 completionHandler:(CDUnknownBlockType)arg5;
- (void)webView:(id)arg1 runJavaScriptConfirmPanelWithMessage:(id)arg2 initiatedByFrame:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)webView:(id)arg1 runJavaScriptAlertPanelWithMessage:(id)arg2 initiatedByFrame:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (id)webView:(id)arg1 createWebViewWithConfiguration:(id)arg2 forNavigationAction:(id)arg3 windowFeatures:(id)arg4;
- (void)webViewWebContentProcessDidTerminate:(id)arg1;
- (void)webView:(id)arg1 didFailProvisionalNavigation:(id)arg2 withError:(id)arg3;
- (void)webView:(id)arg1 didFailNavigation:(id)arg2 withError:(id)arg3;
- (void)webView:(id)arg1 didFinishNavigation:(id)arg2;
- (void)webView:(id)arg1 didCommitNavigation:(id)arg2;
- (void)webView:(id)arg1 decidePolicyForNavigationAction:(id)arg2 decisionHandler:(CDUnknownBlockType)arg3;
- (_Bool)contentSizeUpdatesSynchronously;
- (void)loadRequest:(id)arg1;
- (void)loadHTMLString:(id)arg1 baseURL:(id)arg2;
- (void)loadUserScripts;
- (void)loadViewport;
- (void)loadMRAID;
- (void)addUserScript:(id)arg1 injectionTime:(long long)arg2;
- (void)evaluateJavaScriptFromString:(id)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1 configuration:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADWebView : UIView <GADWebView>
{
    struct CGSize _lastContentSize;
    id <GADWebViewDelegate> _delegate;
    id <GADWebViewContentSizeDelegate> _contentSizeDelegate;
    UIView<GADWebView> *_webView;
}

@property(retain, nonatomic) UIView<GADWebView> *webView; // @synthesize webView=_webView;
@property(nonatomic) __weak id <GADWebViewContentSizeDelegate> contentSizeDelegate; // @synthesize contentSizeDelegate=_contentSizeDelegate;
@property(nonatomic) __weak id <GADWebViewDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)didFailLoadWithError:(id)arg1;
- (void)didFinishLoad;
- (void)didStartLoad;
- (void)loadRequest:(id)arg1;
- (void)loadHTMLString:(id)arg1 baseURL:(id)arg2;
- (void)evaluateJavaScriptFromString:(id)arg1;
- (_Bool)contentSizeUpdatesSynchronously;
@property(readonly, nonatomic) UIScrollView *scrollView;
@property(readonly, copy, nonatomic) NSURL *URL;
- (_Bool)isLoading;
- (void)goForward;
- (void)goBack;
- (_Bool)canGoForward;
- (_Bool)canGoBack;
- (void)reload;
- (void)stopLoading;
- (id)backgroundColor;
- (void)setBackgroundColor:(id)arg1;
- (_Bool)isOpaque;
- (void)setOpaque:(_Bool)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (struct CGSize)intrinsicContentSize;
- (void)layoutSubviews;
- (void)dealloc;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithFrame:(struct CGRect)arg1 configuration:(id)arg2;

@end

@interface GADWebViewConfiguration : NSObject <NSCopying>
{
    _Bool _mediaPlaybackRequiresUserAction;
    _Bool _scalesPageToFit;
    unsigned long long _dataDetectorType;
    NSString *_webViewClassKey;
}

@property(copy, nonatomic) NSString *webViewClassKey; // @synthesize webViewClassKey=_webViewClassKey;
@property(nonatomic) _Bool scalesPageToFit; // @synthesize scalesPageToFit=_scalesPageToFit;
@property(nonatomic) _Bool mediaPlaybackRequiresUserAction; // @synthesize mediaPlaybackRequiresUserAction=_mediaPlaybackRequiresUserAction;
@property(nonatomic) unsigned long long dataDetectorType; // @synthesize dataDetectorType=_dataDetectorType;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)init;

@end

@interface GADIntermission : NSObject
{
    _Bool _publisherIdleTimerDisabled;
    GADSlot *_slot;
    _Bool _statusBarWasOriginallyHidden;
    long long _activeParticipantsCount;
    long long _deactivatingParticipantsCount;
    NSHashTable *_activeParticipants;
    NSHashTable *_deactivatingParticipants;
    NSOperationQueue *_deactivationQueue;
    _Bool _statusBarOverridden;
}

- (void).cxx_destruct;
- (void)applicationWillEnterForegroundWithNotification:(id)arg1;
- (void)participantDidRelinquishScreen:(id)arg1;
- (void)participantWillRelinquishScreen:(id)arg1;
- (void)participantWillOverrideStatusBarVisibility:(id)arg1;
- (void)addParticipant:(id)arg1;
- (void)didEnd;
- (void)willEnd;
- (void)begin;
- (void)cleanUpDeallocatedParticipants;
- (id)activeParticipants;
- (void)dealloc;
- (id)initWithSlot:(id)arg1;
- (id)init;

@end

@interface GADMRAIDResizeOverlayPresenter : GADTransparentOverlayPresenter
{
    _Bool _dismissToDefaultState;
    GADMRAIDResizeProperties *_resizeProperties;
    id <GADMRAIDEventHandling> _MRAIDEventHandler;
    UIView *_referenceView;
}

+ (struct CGRect)adjustedContentFrame:(struct CGRect)arg1 inBounds:(struct CGRect)arg2;
@property(retain, nonatomic) UIView *referenceView; // @synthesize referenceView=_referenceView;
@property(nonatomic) __weak id <GADMRAIDEventHandling> MRAIDEventHandler; // @synthesize MRAIDEventHandler=_MRAIDEventHandler;
@property(nonatomic) _Bool dismissToDefaultState; // @synthesize dismissToDefaultState=_dismissToDefaultState;
@property(retain, nonatomic) GADMRAIDResizeProperties *resizeProperties; // @synthesize resizeProperties=_resizeProperties;
- (void).cxx_destruct;
- (void)updateTransparentInterstitialOrientation;
- (void)composeTransparentInterstitialViewsForPresentation;
- (_Bool)isReadyToPresent;
- (void)repositionContentIfNeeded;
- (struct CGRect)contentFrame;
- (_Bool)resizePropertiesAreValid:(id)arg1 relativeToView:(id)arg2;
- (id)initWithReferenceView:(id)arg1;
- (id)init;

@end

@interface GADModalOverlayPresenter : NSObject <GADOverlayPresenting>
{
    GADViewController *_presentedViewController;
    _Bool _statusBarWasHidden;
    id <NSObject> _appForegroundObserver;
}

@property(nonatomic) __weak GADViewController *presentedViewController; // @synthesize presentedViewController=_presentedViewController;
- (void).cxx_destruct;
- (void)hideStatusBar;
- (void)appDidEnterForeground:(id)arg1;
- (void)forceUpdateViewControllerOrientation:(id)arg1;
- (void)updateViewControllerOrientation:(id)arg1;
- (void)setNeedsUpdateOrientation;
- (void)dismissWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)presentFromViewController:(id)arg1 completion:(CDUnknownBlockType)arg2;
@property(readonly, nonatomic, getter=isReadyToPresent) _Bool readyToPresent;
- (id)presentationViewController;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADOverlayProxy : NSObject <GADIntermitting>
{
    GADIntermission *_intermission;
    UIViewController *_viewController;
    GADSlot *_slot;
    GADOpener *_opener;
}

+ (id)overlayProxyForViewController:(id)arg1;
@property(retain, nonatomic) GADOpener *opener; // @synthesize opener=_opener;
@property(nonatomic) __weak GADSlot *slot; // @synthesize slot=_slot;
@property(readonly, nonatomic) __weak UIViewController *viewController; // @synthesize viewController=_viewController;
@property(readonly, nonatomic) GADIntermission *intermission; // @synthesize intermission=_intermission;
- (void).cxx_destruct;
- (void)relinquishScreenWithCompletion:(CDUnknownBlockType)arg1;
- (_Bool)shouldDismissOnApplicationEnteringForeground;
- (void)presentFromViewController:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (id)init;
- (id)initWithViewController:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADUnclickableView : UIView
{
}

- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;

@end

@interface GADTransparentOverlayPresenter : NSObject <GADOverlayPresenting>
{
    GADViewController *_presentedViewController;
    UIView *_pivotView;
    UIView *_cropView;
    id _orientationChangeListener;
    id _placementDisappearanceObserver;
}

+ (struct CGRect)frameWithSize:(struct CGSize)arg1 centeredInFrame:(struct CGRect)arg2;
@property(retain, nonatomic) id placementDisappearanceObserver; // @synthesize placementDisappearanceObserver=_placementDisappearanceObserver;
@property(retain, nonatomic) id orientationChangeListener; // @synthesize orientationChangeListener=_orientationChangeListener;
@property(retain, nonatomic) UIView *cropView; // @synthesize cropView=_cropView;
@property(retain, nonatomic) UIView *pivotView; // @synthesize pivotView=_pivotView;
@property(nonatomic) __weak GADViewController *presentedViewController; // @synthesize presentedViewController=_presentedViewController;
- (void).cxx_destruct;
- (void)setNeedsUpdateOrientation;
- (void)animateTransparentInterstitialPresentationWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)composeTransparentInterstitialViewsForPresentation;
- (void)updateTransparentInterstitialOrientation;
- (struct CGRect)pivotedApplicationFrameForOrientation:(long long)arg1;
- (struct CGAffineTransform)transformForOrientation:(long long)arg1;
- (id)presentationViewController;
- (void)dismissWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)presentFromViewController:(id)arg1 completion:(CDUnknownBlockType)arg2;
@property(readonly, nonatomic, getter=isReadyToPresent) _Bool readyToPresent;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADViewController : UIViewController <GADIntermitting>
{
    id _appForegroundObserver;
    _Bool _viewDidAppear;
    GADIntermission *_intermission;
    unsigned long long _supportedInterfaceOrientations;
    GADSlot *_slot;
    GADViewController *_retainCycle;
    id <GADOverlayPresenting> _presenter;
    CDUnknownBlockType _dismissalCompletion;
}

@property(nonatomic) _Bool viewDidAppear; // @synthesize viewDidAppear=_viewDidAppear;
@property(copy, nonatomic) CDUnknownBlockType dismissalCompletion; // @synthesize dismissalCompletion=_dismissalCompletion;
@property(retain, nonatomic) id <GADOverlayPresenting> presenter; // @synthesize presenter=_presenter;
@property(retain, nonatomic) GADViewController *retainCycle; // @synthesize retainCycle=_retainCycle;
@property(nonatomic) __weak GADSlot *slot; // @synthesize slot=_slot;
@property(nonatomic) unsigned long long supportedInterfaceOrientations; // @synthesize supportedInterfaceOrientations=_supportedInterfaceOrientations;
@property(readonly, nonatomic) GADIntermission *intermission; // @synthesize intermission=_intermission;
- (void).cxx_destruct;
- (void)recordDismissal;
- (void)relinquishScreenWithCompletion:(CDUnknownBlockType)arg1;
- (void)presentFromViewController:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (_Bool)shouldDismissOnApplicationEnteringForeground;
- (void)viewChangedToOrientation:(long long)arg1;
- (_Bool)shouldAutorotate;
- (_Bool)prefersStatusBarHidden;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)finishDismissal;
- (void)finishAppearing;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)addToCurrentIntermission;
- (void)dismissViewControllerAnimated:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;
- (void)presentViewController:(id)arg1 animated:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;
- (void)setSupportedOrientations:(unsigned long long)arg1;
- (void)dealloc;
- (void)commonInit;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (id)initWithCoder:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADActiveViewMonitor : NSObject <GADViewMonitorDelegate>
{
    NSObject<OS_dispatch_queue> *_lockQueue;
    GADViewMonitor *_viewMonitor;
    id <GADActiveViewMonitorDelegate> _delegate;
    struct CGRect _monitoredViewVisibleBounds;
    _Bool _monitoredViewVisible;
    NSString *_adFormat;
    NSDictionary *_activeViewConfiguration;
    UIView *_monitoredView;
}

@property(readonly, nonatomic) __weak UIView *monitoredView; // @synthesize monitoredView=_monitoredView;
- (void).cxx_destruct;
- (void)viewMonitorDidRefresh:(id)arg1;
@property __weak id <GADActiveViewMonitorDelegate> delegate;
- (id)activeViewStateWithID:(unsigned long long)arg1 isMRAIDEnabled:(_Bool)arg2 unloaded:(_Bool)arg3;
- (void)stopMonitoring;
- (void)startMonitoring;
- (void)sample;
- (id)init;
- (id)initWithView:(id)arg1 adFormat:(id)arg2 activeViewConfiguration:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADImpressionMonitor : NSObject <GADViewMonitorDelegate>
{
    long long _impressionDefinition;
    UIView *_monitoredView;
    GADViewMonitor *_viewMonitor;
    id <GADImpressionMonitorDelegate> _delegate;
}

@property(nonatomic) __weak id <GADImpressionMonitorDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)viewMonitorDidRefresh:(id)arg1;
- (void)startImpressionDefinitionVisible;
- (void)startImpressionDefinitionAdLoaded;
- (void)startMonitoring;
- (void)stopMonitoring;
- (void)didMonitorImpression;
- (id)init;
- (id)initWithView:(id)arg1 impressionDefinition:(long long)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADViewMonitor : NSObject
{
    GADScheduler *_updateViewBoundsScheduler;
    NSObject<OS_dispatch_queue> *_lockQueue;
    id <GADViewMonitorDelegate> _delegate;
    struct CGRect _monitoredViewVisibleBounds;
    _Bool _monitoredViewVisible;
    UIView *_monitoredView;
}

- (void).cxx_destruct;
@property(readonly) _Bool monitoredViewVisible;
@property(readonly) struct CGRect monitoredViewVisibleBounds;
- (void)setMonitoredViewVisibleBounds:(struct CGRect)arg1;
@property __weak id <GADViewMonitorDelegate> delegate;
- (void)updateViewBounds;
- (void)stopMonitoring;
- (void)sample;
- (void)startMonitoringWithSamplingInterval:(double)arg1;
- (id)init;
- (id)initWithView:(id)arg1;

@end

@interface GADAdAppAdViewDelegate : GADAdViewDelegate
{
    GADAdAppViewController *_adAppViewController;
}

- (void).cxx_destruct;
- (id)CSIForGMSGHandler:(id)arg1;
- (void)adView:(id)arg1 didFailLoadWithError:(id)arg2;
- (void)adViewDidFinishLoad:(id)arg1;
- (void)adViewDidStartLoad:(id)arg1;
- (_Bool)adView:(id)arg1 shouldStartLoadWithRequest:(id)arg2 navigationType:(long long)arg3;
- (id)initWithAdAppViewController:(id)arg1;

@end

@interface GADAdAppViewController : GADViewController
{
    _Bool _viewWasConfigured;
    NSURL *_URLToLoad;
    NSString *_HTMLToLoad;
    NSURL *_HTMLBaseURLToLoad;
    _Bool _viewHasAppearedAtLeastOnce;
    _Bool _orientationNotifiedToTheAdViewAtLeastOnce;
    _Bool _useCustomClose;
    _Bool _adOrientationsOverridesLockedOrientation;
    long long _customClosePosition;
    GADAdView *_adView;
    UIViewController *_hostViewController;
    long long _forcedAdOrientation;
    UIButton *_closeButton;
    unsigned long long _adOrientations;
    double _orientationUpdateAnimationDuration;
    GADAdAppAdViewDelegate *_adViewDelegate;
}

@property(retain, nonatomic) GADAdAppAdViewDelegate *adViewDelegate; // @synthesize adViewDelegate=_adViewDelegate;
@property(nonatomic) _Bool adOrientationsOverridesLockedOrientation; // @synthesize adOrientationsOverridesLockedOrientation=_adOrientationsOverridesLockedOrientation;
@property(nonatomic) double orientationUpdateAnimationDuration; // @synthesize orientationUpdateAnimationDuration=_orientationUpdateAnimationDuration;
@property(nonatomic) unsigned long long adOrientations; // @synthesize adOrientations=_adOrientations;
@property(retain, nonatomic) UIButton *closeButton; // @synthesize closeButton=_closeButton;
@property(nonatomic) long long forcedAdOrientation; // @synthesize forcedAdOrientation=_forcedAdOrientation;
@property(readonly, nonatomic) UIViewController *hostViewController; // @synthesize hostViewController=_hostViewController;
@property(retain, nonatomic) GADAdView *adView; // @synthesize adView=_adView;
@property(nonatomic) long long customClosePosition; // @synthesize customClosePosition=_customClosePosition;
@property(nonatomic) _Bool useCustomClose; // @synthesize useCustomClose=_useCustomClose;
- (void).cxx_destruct;
- (void)loadHTML:(id)arg1 baseURL:(id)arg2;
- (void)load:(id)arg1;
- (void)viewChangedToOrientation:(long long)arg1;
- (void)didRotateFromInterfaceOrientation:(long long)arg1;
- (void)configureView;
- (void)positionTestAdLabel;
- (void)positionView:(id)arg1 ForPosition:(long long)arg2 size:(struct CGSize)arg3;
- (void)positionMRAIDCloseButton;
- (void)positionCloseButton;
- (void)viewWillLayoutSubviews;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (_Bool)shouldDismissOnApplicationEnteringForeground;
- (void)closeButtonPressed:(id)arg1;
- (_Bool)isLoaded;
- (void)updateCloseButtonVisibilityAndImage;
- (void)dealloc;
- (id)initWithAdView:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (id)initWithCoder:(id)arg1;
- (id)init;

@end

@interface GADExpandedAdAppViewController : GADAdAppViewController
{
    UIImageView *_renderedBanner;
}

- (void).cxx_destruct;
- (void)relinquishScreenWithCompletion:(CDUnknownBlockType)arg1;
- (void)configureView;
- (_Bool)isLoaded;
- (void)dealloc;
- (id)initWithAdView:(id)arg1;

@end

@interface GADInterstitialViewController : GADAdAppViewController
{
    NSString *_previousScreenName;
    NSString *_previousScreenClass;
    _Bool _hasSetScreenName;
    double _applicationBackgroundTimeIntervalSinceBoot;
}

- (void).cxx_destruct;
- (void)viewWillTransitionToSize:(struct CGSize)arg1 withTransitionCoordinator:(id)arg2;
- (void)finishDismissal;
- (void)relinquishScreenWithCompletion:(CDUnknownBlockType)arg1;
- (void)finishAppearing;
- (_Bool)isLoaded;
- (_Bool)shouldDismissOnApplicationEnteringForeground;
- (void)presentFromViewController:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (id)initWithAdView:(id)arg1;
- (id)initWithSlot:(id)arg1;

@end

@interface GADSupplementalAdAppViewController : GADAdAppViewController
{
}

- (void)viewDidAppear:(_Bool)arg1;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)finishDismissal;
- (void)finishAppearing;

@end

@interface GADGestureRecognizer : UIGestureRecognizer
{
    int _gestureInfo[15];
}

- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (CDStruct_27b5ccfc *)gestureInfo;

@end

@interface GADGestureIdUtil : NSObject
{
    NSUserDefaults *userDefaults_;
}

+ (_Bool)isOSAtLeastMajor:(int)arg1 minor:(int)arg2 bug:(int)arg3;
+ (void)getOSMajor:(int *)arg1 minor:(int *)arg2 bugFix:(int *)arg3;
+ (id)sharedInstance;
@property(retain, nonatomic) NSUserDefaults *userDefaults; // @synthesize userDefaults=userDefaults_;
- (_Bool)deviceOptedOut;
- (id)deviceIdentifierType;
- (id)deviceIdentifier;
- (id)osVersion;
- (void)dealloc;
- (id)init;

@end

@interface TAGDataProvider : NSObject
{
    _Bool _hasHits;
    unsigned long long _maxHitCount;
    double _maxHitAge;
    NSManagedObjectContext *_context;
}

@property(retain, nonatomic) NSManagedObjectContext *context; // @synthesize context=_context;
@property(nonatomic) double maxHitAge; // @synthesize maxHitAge=_maxHitAge;
@property(nonatomic) unsigned long long maxHitCount; // @synthesize maxHitCount=_maxHitCount;
@property(nonatomic) _Bool hasHits; // @synthesize hasHits=_hasHits;
- (void).cxx_destruct;
- (void)dealloc;
- (id)init;
- (void)save;
- (unsigned long long)context:(id)arg1 hitCount:(id *)arg2;
- (_Bool)deleteExcessHits:(id *)arg1;
- (_Bool)context:(id)arg1 deleteRequest:(id)arg2 error:(id *)arg3;
- (void)onExit:(id)arg1;
- (oneway void)deleteHits:(id)arg1;
- (oneway void)fetchNotRecentlyAttemptedHitsWithLimit:(unsigned long long)arg1 completion:(CDUnknownBlockType)arg2;
- (oneway void)fetchHitsWithLimit:(unsigned long long)arg1 completion:(CDUnknownBlockType)arg2;
- (oneway void)addHitWithURLString:(id)arg1;
- (oneway void)updateFailedHits:(id)arg1;

@end

@interface TAGDispatchUtil : NSObject
{
}

+ (id)systemCountryFromLocale:(id)arg1;
+ (id)systemLanguageFromLanguages:(id)arg1;
+ (id)userAgentStringWithProduct:(id)arg1 version:(id)arg2 deviceModel:(id)arg3 systemName:(id)arg4 systemVersion:(id)arg5 systemLanguage:(id)arg6 systemCountry:(id)arg7;
+ (id)userAgentString;
+ (id)thread;
+ (void)threadMain:(id)arg1;
+ (id)databaseFullURL:(id)arg1;
+ (id)databaseFullPath:(id)arg1;
+ (void)background:(CDUnknownBlockType)arg1 wait:(_Bool)arg2;

@end

@interface TAGDispatcher : NSObject <TAGHitSender>
{
    TAGDataProvider *_store;
    TAGNetworking *_network;
    NSString *_wrapperUrl;
    NSString *_wrapperQueryParameter;
    id <TAGLogger> _logger;
    double _dispatchInterval;
    TAGRateLimiter *_rateLimiter;
    NSMutableSet *_operations;
    NSTimer *_timer;
    unsigned long long _maxRequestsPerDispatch;
}

+ (id)keyPathsForValuesAffectingCanDispatch;
+ (id)keyPathsForValuesAffectingCanScheduleDispatch;
+ (void)initialize;
+ (id)instance;
@property(nonatomic) unsigned long long maxRequestsPerDispatch; // @synthesize maxRequestsPerDispatch=_maxRequestsPerDispatch;
@property(retain, nonatomic) NSTimer *timer; // @synthesize timer=_timer;
@property(retain, nonatomic) NSMutableSet *operations; // @synthesize operations=_operations;
@property(retain, nonatomic) TAGRateLimiter *rateLimiter; // @synthesize rateLimiter=_rateLimiter;
@property(nonatomic) double dispatchInterval; // @synthesize dispatchInterval=_dispatchInterval;
@property(nonatomic) __weak id <TAGLogger> logger; // @synthesize logger=_logger;
@property(retain, nonatomic) NSString *wrapperQueryParameter; // @synthesize wrapperQueryParameter=_wrapperQueryParameter;
@property(retain, nonatomic) NSString *wrapperUrl; // @synthesize wrapperUrl=_wrapperUrl;
@property(retain, nonatomic) TAGNetworking *network; // @synthesize network=_network;
@property(retain, nonatomic) TAGDataProvider *store; // @synthesize store=_store;
- (void).cxx_destruct;
- (double)timerInterval;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)sendHitToUrl:(id)arg1;
- (void)dispatchWithCallback:(CDUnknownBlockType)arg1;
- (oneway void)dispatch;
- (void)startTimer;
- (void)cancelTimer;
- (void)timerFired;
- (oneway void)rescheduleDispatch;
@property(readonly, nonatomic) _Bool canDispatch;
@property(readonly, nonatomic) _Bool canScheduleDispatch;
- (void)initialDispatch;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TAGHit : NSManagedObject
{
}


// Remaining properties
@property(retain, nonatomic) NSDate *dispatchTime; // @dynamic dispatchTime;
@property(retain, nonatomic) NSString *dispatchURL; // @dynamic dispatchURL;
@property(retain, nonatomic) NSDate *lastDispatchTime; // @dynamic lastDispatchTime;
@property(retain, nonatomic) NSNumber *retryCount; // @dynamic retryCount;
@property(retain, nonatomic) NSDate *timestamp; // @dynamic timestamp;
@end

@interface TAGModel : NSObject
{
}

+ (id)requestHitsWithLimit:(unsigned long long)arg1 lastDispatchedBefore:(id)arg2;
+ (id)requestHitsWithLimit:(unsigned long long)arg1;
+ (id)model;
+ (id)contextWithURL:(id)arg1;
+ (id)coordinatorWithURL:(id)arg1;
+ (_Bool)migrateToCurrentVersion:(id)arg1;
+ (id)previousModelDescription;
+ (id)modelDescription;
+ (id)modelWithDescription:(id)arg1;
+ (id)entityWithDescription:(id)arg1;

@end

@interface TAGNetOperation : NSOperation
{
    _Bool _isCancelled;
    _Bool _isExecuting;
    _Bool _isFinished;
    NSURLRequest *_request;
    NSURLResponse *_response;
    NSMutableData *_data;
    NSError *_error;
    NSURLConnection *_connection;
    CDUnknownBlockType _completion;
}

+ (id)operationWithRequest:(id)arg1 andCompletion:(CDUnknownBlockType)arg2;
+ (_Bool)automaticallyNotifiesObserversForKey:(id)arg1;
@property(copy, nonatomic) CDUnknownBlockType completion; // @synthesize completion=_completion;
@property(retain, nonatomic) NSURLConnection *connection; // @synthesize connection=_connection;
@property(nonatomic, getter=isFinished) _Bool isFinished; // @synthesize isFinished=_isFinished;
@property(nonatomic, getter=isExecuting) _Bool isExecuting; // @synthesize isExecuting=_isExecuting;
@property(nonatomic, getter=isCancelled) _Bool isCancelled; // @synthesize isCancelled=_isCancelled;
@property(retain, nonatomic) NSError *error; // @synthesize error=_error;
@property(retain, nonatomic) NSMutableData *data; // @synthesize data=_data;
@property(retain, nonatomic) NSURLResponse *response; // @synthesize response=_response;
@property(retain, nonatomic) NSURLRequest *request; // @synthesize request=_request;
- (void).cxx_destruct;
- (id)connection:(id)arg1 willCacheResponse:(id)arg2;
- (id)connection:(id)arg1 willSendRequest:(id)arg2 redirectResponse:(id)arg3;
- (void)connectionDidFinishLoading:(id)arg1;
- (void)connection:(id)arg1 didReceiveResponse:(id)arg2;
- (void)connection:(id)arg1 didReceiveData:(id)arg2;
- (void)connection:(id)arg1 didFailWithError:(id)arg2;
- (oneway void)cancel;
- (oneway void)start;
- (void)finish;
- (_Bool)isConcurrent;

@end

@interface TAGNetReachability : NSObject
{
    struct __SCNetworkReachability *_reachability;
    NSString *_host;
    _Bool _isExecuting;
    int _status;
    int _reachabilityStatus;
    CDUnknownBlockType _statusChange;
}

@property(nonatomic) int reachabilityStatus; // @synthesize reachabilityStatus=_reachabilityStatus;
@property(copy, nonatomic) CDUnknownBlockType statusChange; // @synthesize statusChange=_statusChange;
@property(readonly, nonatomic) _Bool isExecuting; // @synthesize isExecuting=_isExecuting;
@property(readonly, copy, nonatomic) NSString *host; // @synthesize host=_host;
@property(readonly, nonatomic) int status; // @synthesize status=_status;
- (void).cxx_destruct;
- (void)dealloc;
- (id)initWithHostName:(id)arg1;
- (void)stop;
- (_Bool)start;

@end

@interface TAGNetworking : NSOperationQueue
{
    _Bool _isReachable;
    TAGNetReachability *_reachability;
}

@property(retain, nonatomic) TAGNetReachability *reachability; // @synthesize reachability=_reachability;
@property(nonatomic) _Bool isReachable; // @synthesize isReachable=_isReachable;
- (void).cxx_destruct;
- (id)requestWithURL:(id)arg1;
- (id)sendURL:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)dealloc;
- (id)init;

@end

@interface TAGRateLimiter : NSObject
{
    double _secondsPerToken;
    double _maxTokens;
    double _tokens;
    double _lastTrackTime;
}

+ (id)rateLimiterWithMaxTokens:(double)arg1 secondsPerToken:(double)arg2;
@property(nonatomic) double lastTrackTime; // @synthesize lastTrackTime=_lastTrackTime;
@property(nonatomic) double tokens; // @synthesize tokens=_tokens;
@property(nonatomic) double maxTokens; // @synthesize maxTokens=_maxTokens;
@property(nonatomic) double secondsPerToken; // @synthesize secondsPerToken=_secondsPerToken;
- (_Bool)tokenAvailable;

@end

@interface TAGGTMStringEncoding : NSObject
{
    NSData *charMapData_;
    char *charMap_;
    int reverseCharMap_[128];
    int shift_;
    int mask_;
    _Bool doPad_;
    BOOL paddingChar_;
    int padLen_;
}

+ (id)stringEncodingWithString:(id)arg1;
+ (id)rfc4648Base64WebsafeStringEncoding;
+ (id)rfc4648Base64StringEncoding;
+ (id)crockfordBase32StringEncoding;
+ (id)rfc4648Base32HexStringEncoding;
+ (id)rfc4648Base32StringEncoding;
+ (id)hexStringEncoding;
+ (id)binaryStringEncoding;
- (id)stringByDecoding:(id)arg1;
- (id)decode:(id)arg1;
- (id)encodeString:(id)arg1;
- (id)encode:(id)arg1;
- (void)setPaddingChar:(BOOL)arg1;
- (void)setDoPad:(_Bool)arg1;
- (_Bool)doPad;
- (void)ignoreCharacters:(id)arg1;
- (void)addDecodeSynonyms:(id)arg1;
- (id)description;
- (void)dealloc;
- (id)initWithString:(id)arg1;

@end

@interface GAIUtil : NSObject
{
}

+ (id)valueForString:(id)arg1;
+ (id)valueForNumber:(id)arg1;
+ (id)descriptionFromError:(id)arg1;
+ (id)descriptionFromException:(id)arg1;
- (id)init;

@end

@interface GAIEcommerceFields : NSObject
{
}

+ (id)promotionForIndex:(unsigned long long)arg1 suffix:(id)arg2;
+ (id)productImpressionForList:(id)arg1 index:(unsigned long long)arg2 suffix:(id)arg3;
+ (id)impressionListForIndex:(unsigned long long)arg1;
+ (id)productFieldForIndex:(unsigned long long)arg1 suffix:(id)arg2;
+ (id)stripAmpersandIfPresent:(id)arg1;

@end

@interface GAIDefaultLogger : NSObject <GAILogger>
{
    unsigned long long _logLevel;
}

@property(nonatomic) unsigned long long logLevel; // @synthesize logLevel=_logLevel;
- (void)error:(id)arg1;
- (void)warning:(id)arg1;
- (void)info:(id)arg1;
- (void)verbose:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GAI : NSObject
{
    _Bool trackUncaughtExceptions_;
    _Bool _dryRun;
    _Bool _optOut;
    GAIBatchingDispatcher *dispatcher_;
    NSMutableDictionary *trackers_;
    id <GAITracker> defaultTracker_;
    Class trackerImplClass_;
    id <GAILogger> logger_;
    Class _urlConnectionClass;
}

+ (id)thread;
+ (oneway void)threadMain:(id)arg1;
+ (id)sharedLogger;
+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)sharedInstance;
@property(nonatomic) Class urlConnectionClass; // @synthesize urlConnectionClass=_urlConnectionClass;
@property(nonatomic) Class trackerImplClass; // @synthesize trackerImplClass=trackerImplClass_;
@property(retain, nonatomic) NSMutableDictionary *trackers; // @synthesize trackers=trackers_;
@property(retain, nonatomic) GAIBatchingDispatcher *dispatcher; // @synthesize dispatcher=dispatcher_;
- (void)reset;
@property(retain, nonatomic) id <GAILogger> logger; // @synthesize logger=logger_;
@property(nonatomic) _Bool optOut; // @synthesize optOut=_optOut;
@property(nonatomic) _Bool dryRun; // @synthesize dryRun=_dryRun;
- (void)removeTrackerByName:(id)arg1;
- (void)dispatchWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)dispatch;
- (id)trackerWithTrackingId:(id)arg1;
- (id)trackerWithName:(id)arg1 trackingId:(id)arg2;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)autorelease;
- (oneway void)release;
- (unsigned long long)retainCount;
- (id)retain;
- (id)init;
- (_Bool)createDispatcher:(id *)arg1;
@property(nonatomic) _Bool trackUncaughtExceptions; // @synthesize trackUncaughtExceptions=trackUncaughtExceptions_;
@property(nonatomic) double dispatchInterval;
- (id)clientId;
@property(nonatomic) id <GAITracker> defaultTracker; // @synthesize defaultTracker=defaultTracker_;

@end

@interface GAITrackerImpl : NSObject <GAITracker>
{
    _Bool allowIDFACollection_;
    id <GAIDispatchSender> dispatcher_;
    double trackingCredits_;
    double lastTrackTime_;
    NSString *name_;
    GAITrackerModel *model_;
    unsigned long long _trackCount;
    unsigned long long _hitCount;
    GAIUsageTracker *_usageTracker;
}

+ (id)trackerWithDispatcher:(id)arg1 name:(id)arg2;
@property(retain, nonatomic) GAIUsageTracker *usageTracker; // @synthesize usageTracker=_usageTracker;
@property(nonatomic) unsigned long long hitCount; // @synthesize hitCount=_hitCount;
@property(nonatomic) unsigned long long trackCount; // @synthesize trackCount=_trackCount;
@property(nonatomic) _Bool allowIDFACollection; // @synthesize allowIDFACollection=allowIDFACollection_;
@property(retain, nonatomic) GAITrackerModel *model; // @synthesize model=model_;
@property(nonatomic) double lastTrackTime; // @synthesize lastTrackTime=lastTrackTime_;
@property(nonatomic) double trackingCredits; // @synthesize trackingCredits=trackingCredits_;
@property(retain, nonatomic) id <GAIDispatchSender> dispatcher; // @synthesize dispatcher=dispatcher_;
@property(readonly, nonatomic) NSString *name; // @synthesize name=name_;
- (void)send:(id)arg1;
- (void)set:(id)arg1 value:(id)arg2;
- (id)get:(id)arg1;
- (void)gai_send:(id)arg1;
- (void)gai_set:(id)arg1;
- (id)gai_get:(id)arg1;
- (void)gai_set:(id)arg1 value:(id)arg2;
- (_Bool)shouldRateLimit;
- (void)dealloc;
- (id)initWithDispatcher:(id)arg1 name:(id)arg2;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GAIDataStore : NSObject
{
    _Bool _setUpCoreData;
    NSString *_clientId;
    NSString *_hashedIdfa;
    NSNumber *_lastChangeTimeStamp;
    NSNumber *_idfaChangeCount;
    unsigned long long _maxHitCount;
    NSManagedObjectContext *_oldContext;
    NSManagedObjectContext *_context;
    NSManagedObjectContext *_currentContext;
}

+ (id)dataStore;
+ (id)thread;
+ (id)databaseFullURL:(id)arg1;
+ (id)databaseFullPath:(id)arg1;
@property(retain, nonatomic) NSManagedObjectContext *currentContext; // @synthesize currentContext=_currentContext;
@property(retain, nonatomic) NSManagedObjectContext *context; // @synthesize context=_context;
@property(retain, nonatomic) NSManagedObjectContext *oldContext; // @synthesize oldContext=_oldContext;
@property(nonatomic) unsigned long long maxHitCount; // @synthesize maxHitCount=_maxHitCount;
- (void).cxx_destruct;
- (void)dealloc;
- (void)onExit:(id)arg1;
- (_Bool)setUpCoreData;
- (id)init;
- (_Bool)save:(id *)arg1;
- (_Bool)deleteAllHits:(id *)arg1;
- (_Bool)deleteHitsWithIds:(id)arg1 error:(id *)arg2;
- (id)fetchHitsWithLimit:(unsigned long long)arg1 error:(id *)arg2;
- (void)addHit:(id)arg1;
- (long long)hitCount:(id *)arg1;
@property(retain, nonatomic) NSString *clientId;
- (id)fetchClientId;
@property(retain, nonatomic) NSString *hashedIdfa;
@property(retain, nonatomic) NSNumber *idfaChangeCount;
@property(retain, nonatomic) NSNumber *lastChangeTimeStamp;
- (_Bool)setProperty:(id)arg1 stringValue:(id)arg2 withError:(id *)arg3;
- (_Bool)setProperty:(id)arg1 numberValue:(id)arg2 withError:(id *)arg3;
- (id)contextWithModel:(id)arg1 URL:(id)arg2;
- (id)coordinatorWithModel:(id)arg1 URL:(id)arg2;
- (id)performBlockAndWait:(CDUnknownBlockType)arg1 withError:(id *)arg2;
- (void)gai_performBlockHelper:(id)arg1;
- (_Bool)context:(id)arg1 removeStaleHits:(id *)arg2;
- (long long)context:(id)arg1 hitCount:(id *)arg2;
- (_Bool)deleteExcessHits:(id *)arg1;
- (id)oldHitDescription:(id)arg1;
- (id)requestPropertyWithName:(id)arg1;
- (id)requestHitsWithLimit:(unsigned long long)arg1;
- (id)requestEntityName:(id)arg1;

@end

@interface GAIError : NSObject
{
}

+ (id)errorWithCode:(long long)arg1 withUnderlyingError:(id)arg2 withFormat:(id)arg3;
+ (id)errorWithCode:(long long)arg1 withUnderlyingError:(id)arg2 withDescription:(id)arg3;
+ (id)errorWithCode:(long long)arg1 withFailedFilePath:(id)arg2 withFormat:(id)arg3;
+ (id)errorWithCode:(long long)arg1 withFailedFilePath:(id)arg2 withDescription:(id)arg3;
+ (id)errorWithCode:(long long)arg1 withFormat:(id)arg2;
+ (id)errorWithCode:(long long)arg1 withDescription:(id)arg2;
+ (id)errorWithCode:(long long)arg1;
- (id)init;

@end

@interface GAICoreDataUtil : NSObject
{
}

+ (id)oldModelDescription;
+ (id)modelDescription;
+ (id)modelWithDescription:(id)arg1;
+ (id)entityWithDescription:(id)arg1;
+ (id)oldModel;
+ (id)model;
- (id)init;

@end

@interface GAIHitUtil : NSObject
{
}

+ (id)hashIdfa:(id)arg1 clientId:(id)arg2;
+ (id)generateClientId;
+ (unsigned int)gaHash:(id)arg1;
+ (long long)millisecondsElapsedFrom:(id)arg1 To:(id)arg2;
+ (id)systemScreenColorDepth;
+ (struct CGRect)swapDimensionsOfRect:(struct CGRect)arg1;
+ (id)systemScreenResolution;
+ (id)deviceModelVersion;
+ (id)systemCountry;
+ (id)systemLanguage;
+ (id)userAgentString;
+ (id)userAgentStringWithProduct:(id)arg1 version:(id)arg2 deviceModel:(id)arg3 systemName:(id)arg4 systemVersion:(id)arg5 systemLanguage:(id)arg6 systemCountry:(id)arg7;
+ (id)systemCountryFromLocale:(id)arg1;
+ (id)systemLanguageFromLanguages:(id)arg1;
- (id)init;

@end

@interface GAIRequestBuilder : NSObject
{
    NSString *userAgent_;
}

@property(copy, nonatomic) NSString *userAgent; // @synthesize userAgent=userAgent_;
- (id)requestGetUrl:(id)arg1 payload:(id)arg2;
- (id)requestPostUrl:(id)arg1 payload:(id)arg2 compression:(unsigned long long)arg3;
- (id)baseRequest;
- (id)parametersForHit:(id)arg1;
- (id)parameterValueToString:(id)arg1;
- (id)encodeParameters:(id)arg1;
- (id)encodeParameter:(id)arg1 withValue:(id)arg2;
- (void)dealloc;
- (id)init;

@end

@interface GAIStringUtil : NSObject
{
}

+ (id)stripLeadingAmpersand:(id)arg1;
+ (id)decodeParametersFromUrl:(id)arg1;
+ (id)decodeParametersFromQuery:(id)arg1;
+ (id)percentDecode:(id)arg1;
+ (id)percentEncode:(id)arg1;
+ (id)currencyMicrosString:(long long)arg1;
+ (id)decimalString:(double)arg1 decimals:(int)arg2;
+ (id)uintString:(unsigned long long)arg1;
+ (id)intString:(long long)arg1;
+ (id)trim:(id)arg1;
+ (id)urlParams:(id)arg1;
- (id)init;

@end

@interface GAIURLConnection : NSObject
{
    NSURLRequest *request_;
    NSURLConnection *connection_;
    NSURLResponse *response_;
    NSMutableData *data_;
    struct dispatch_queue_s *completionQueue_;
    CDUnknownBlockType completionHandler_;
}

+ (_Bool)dryRun;
+ (void)setDryRun:(_Bool)arg1;
@property(copy, nonatomic) CDUnknownBlockType completionHandler; // @synthesize completionHandler=completionHandler_;
@property(nonatomic) struct dispatch_queue_s *completionQueue; // @synthesize completionQueue=completionQueue_;
@property(retain, nonatomic) NSMutableData *data; // @synthesize data=data_;
@property(retain, nonatomic) NSURLResponse *response; // @synthesize response=response_;
@property(retain, nonatomic) NSURLConnection *connection; // @synthesize connection=connection_;
@property(retain, nonatomic) NSURLRequest *request; // @synthesize request=request_;
- (void)connectionDidFinishLoading:(id)arg1;
- (void)connection:(id)arg1 didReceiveResponse:(id)arg2;
- (void)connection:(id)arg1 didReceiveData:(id)arg2;
- (id)connection:(id)arg1 willCacheResponse:(id)arg2;
- (id)connection:(id)arg1 willSendRequest:(id)arg2 redirectResponse:(id)arg3;
- (void)connection:(id)arg1 didFailWithError:(id)arg2;
- (void)cancel;
- (void)start;
- (id)initWithRequest:(id)arg1 completionQueue:(struct dispatch_queue_s *)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (id)init;
- (void)dealloc;

@end

@interface GAITrackedViewController : UIViewController
{
    id <GAITracker> _tracker;
    NSString *_screenName;
}

@property(copy, nonatomic) NSString *screenName; // @synthesize screenName=_screenName;
@property(nonatomic) id <GAITracker> tracker; // @synthesize tracker=_tracker;
- (void).cxx_destruct;
- (void)viewDidAppear:(_Bool)arg1;

@end

@interface GAIReachabilityChecker : NSObject
{
    int reachabilityStatus_;
    const struct GAIReachabilityApi *reachabilityApi_;
    struct __SCNetworkReachability *reachability_;
    NSString *host_;
    id <GAIReachabilityDelegate> delegate_;
}

@property(nonatomic) id <GAIReachabilityDelegate> delegate; // @synthesize delegate=delegate_;
@property(copy, nonatomic) NSString *host; // @synthesize host=host_;
@property(nonatomic) int reachabilityStatus; // @synthesize reachabilityStatus=reachabilityStatus_;
@property(nonatomic) struct __SCNetworkReachability *reachability; // @synthesize reachability=reachability_;
- (void)reachabilityFlagsChanged:(unsigned int)arg1;
- (int)statusForFlags:(unsigned int)arg1;
- (void)stop;
- (_Bool)start;
- (void)dealloc;
- (id)initWithDelegate:(id)arg1 withHost:(id)arg2;
- (id)init;
@property(readonly, nonatomic) _Bool isActive;
@property(nonatomic) const struct GAIReachabilityApi *reachabilityApi; // @synthesize reachabilityApi=reachabilityApi_;

@end

@interface GAIEcommerceProduct : NSObject
{
    NSMutableDictionary *_parameters;
}

@property(retain, nonatomic) NSMutableDictionary *parameters; // @synthesize parameters=_parameters;
- (void).cxx_destruct;
- (id)buildWithListIndex:(unsigned long long)arg1 index:(unsigned long long)arg2;
- (id)buildWithIndex:(unsigned long long)arg1;
- (id)setCustomMetric:(unsigned long long)arg1 value:(id)arg2;
- (id)setCustomDimension:(unsigned long long)arg1 value:(id)arg2;
- (id)setPosition:(id)arg1;
- (id)setCouponCode:(id)arg1;
- (id)setQuantity:(id)arg1;
- (id)setPrice:(id)arg1;
- (id)setVariant:(id)arg1;
- (id)setCategory:(id)arg1;
- (id)setBrand:(id)arg1;
- (id)setName:(id)arg1;
- (id)setId:(id)arg1;
- (id)setNumber:(id)arg1 forKey:(id)arg2;
- (id)setString:(id)arg1 forKey:(id)arg2;
- (id)init;

@end

@interface GAIExceptionParser : NSObject
{
}

+ (id)exceptionDescription:(id)arg1 withMaxLength:(unsigned long long)arg2;
+ (id)symbolFromStackFrame:(id)arg1;
- (id)init;

@end

@interface GAIFields : NSObject
{
}

+ (id)customMetricForIndex:(unsigned long long)arg1;
+ (id)customDimensionForIndex:(unsigned long long)arg1;
+ (id)contentGroupForIndex:(unsigned long long)arg1;

@end

@interface GAIDictionaryBuilder : NSObject
{
    NSMutableDictionary *_parameters;
    NSMutableDictionary *_impressionLists;
    NSMutableArray *_impressionListNames;
    NSMutableArray *_impressionListSources;
    NSMutableArray *_products;
    NSMutableArray *_promotions;
    GAIEcommerceProductAction *_pAction;
}

+ (id)createTransactionWithId:(id)arg1 affiliation:(id)arg2 revenue:(id)arg3 tax:(id)arg4 shipping:(id)arg5 currencyCode:(id)arg6;
+ (id)createTimingWithCategory:(id)arg1 interval:(id)arg2 name:(id)arg3 label:(id)arg4;
+ (id)createSocialWithNetwork:(id)arg1 action:(id)arg2 target:(id)arg3;
+ (id)createItemWithTransactionId:(id)arg1 name:(id)arg2 sku:(id)arg3 category:(id)arg4 price:(id)arg5 quantity:(id)arg6 currencyCode:(id)arg7;
+ (id)createExceptionWithDescription:(id)arg1 withFatal:(id)arg2;
+ (id)gai_exceptionWithDescription:(id)arg1 withFatal:(id)arg2;
+ (id)createEventWithCategory:(id)arg1 action:(id)arg2 label:(id)arg3 value:(id)arg4;
+ (id)createScreenView;
+ (id)createAppView;
+ (id)valueForString:(id)arg1;
+ (id)valueForNumber:(id)arg1;
@property(retain, nonatomic) GAIEcommerceProductAction *pAction; // @synthesize pAction=_pAction;
@property(retain, nonatomic) NSMutableArray *promotions; // @synthesize promotions=_promotions;
@property(retain, nonatomic) NSMutableArray *products; // @synthesize products=_products;
@property(retain, nonatomic) NSMutableArray *impressionListSources; // @synthesize impressionListSources=_impressionListSources;
@property(retain, nonatomic) NSMutableArray *impressionListNames; // @synthesize impressionListNames=_impressionListNames;
@property(retain, nonatomic) NSMutableDictionary *impressionLists; // @synthesize impressionLists=_impressionLists;
@property(retain, nonatomic) NSMutableDictionary *parameters; // @synthesize parameters=_parameters;
- (void).cxx_destruct;
- (id)addPromotion:(id)arg1;
- (id)addProductImpression:(id)arg1 impressionList:(id)arg2 impressionSource:(id)arg3;
- (id)addProduct:(id)arg1;
- (id)setProductAction:(id)arg1;
- (id)setCampaignParametersFromUrl:(id)arg1;
- (id)build;
- (id)get:(id)arg1;
- (id)setAll:(id)arg1;
- (id)gai_set:(id)arg1 forKey:(id)arg2;
- (id)set:(id)arg1 forKey:(id)arg2;
- (id)init;

@end

@interface GAITrackerModel : NSObject <NSCopying>
{
    _Bool _allowIDFACollection;
    NSMutableDictionary *_parameters;
    GAIDataStore *_dataStore;
}

+ (void)initialize;
@property(retain, nonatomic) GAIDataStore *dataStore; // @synthesize dataStore=_dataStore;
@property(retain, nonatomic) NSMutableDictionary *parameters; // @synthesize parameters=_parameters;
@property(nonatomic) _Bool allowIDFACollection; // @synthesize allowIDFACollection=_allowIDFACollection;
- (void).cxx_destruct;
- (void)setValue:(id)arg1 forKey:(id)arg2;
- (id)valueForUndefinedKey:(id)arg1;
- (id)valueForKey:(id)arg1;
- (void)setObject:(id)arg1 forKeyedSubscript:(id)arg2;
- (id)objectForKeyedSubscript:(id)arg1;
- (id)initWithDataStore:(id)arg1;
- (id)init;
- (id)copyWithOverride:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)admobId;
- (id)adTargetingEnabled;
- (id)idfa;
- (id)cacheBuster;
- (id)dataSource;
- (id)language;
- (id)screenResolution;
- (id)deviceModelVersion;
- (id)clientId;
- (id)crc;
- (id)defaultParameters;
- (id)methodsForKeys;
- (id)requiredParameters;
- (id)forcedParameters;
- (void)willSendScreenView;
- (id)buildDictionary;

@end

@interface GAIEcommercePromotion : NSObject
{
    NSMutableDictionary *_parameters;
}

@property(retain, nonatomic) NSMutableDictionary *parameters; // @synthesize parameters=_parameters;
- (void).cxx_destruct;
- (id)buildWithIndex:(unsigned long long)arg1;
- (id)setPosition:(id)arg1;
- (id)setCreative:(id)arg1;
- (id)setName:(id)arg1;
- (id)setId:(id)arg1;
- (id)setString:(id)arg1 forKey:(id)arg2;
- (id)init;

@end

@interface GAIBatchingDispatcher : NSObject <GAIReachabilityDelegate, GAIDispatchSender>
{
    _Bool _hasHits;
    _Bool _optOut;
    _Bool _hostReachable;
    _Bool _serverBatchingDisabled;
    unsigned long long _batchingStrategy;
    unsigned long long _compressionStrategy;
    double _dispatchInterval;
    GAIDataStore *_dataStore;
    GAIAnalyticsPropertiesStore *_propertiesStore;
    GAIRequestBuilder *_requestBuilder;
    Class _urlConnectionClass;
    unsigned long long _maxHitsPerDispatch;
    double _maxHitAge;
    unsigned long long _maxBodySize;
    unsigned long long _maxHitSize;
    GAIReachabilityChecker *_reachability;
    NSString *_httpURL;
    NSString *_httpsURL;
    NSString *_httpBatchURL;
    NSString *_httpsBatchURL;
    id _connection;
    NSTimer *_timer;
    double _batchFailedTime;
    double _batchRetryInterval;
    CDUnknownBlockType _defaultCompletionHandler;
    CDUnknownBlockType _currentCompletionHandler;
    NSMutableDictionary *_iAdCampaignTrackerIdCache;
}

+ (id)thread;
+ (id)dispatcher;
@property(retain, nonatomic) NSMutableDictionary *iAdCampaignTrackerIdCache; // @synthesize iAdCampaignTrackerIdCache=_iAdCampaignTrackerIdCache;
@property(copy) CDUnknownBlockType currentCompletionHandler; // @synthesize currentCompletionHandler=_currentCompletionHandler;
@property(copy) CDUnknownBlockType defaultCompletionHandler; // @synthesize defaultCompletionHandler=_defaultCompletionHandler;
@property(nonatomic) double batchRetryInterval; // @synthesize batchRetryInterval=_batchRetryInterval;
@property(nonatomic) _Bool serverBatchingDisabled; // @synthesize serverBatchingDisabled=_serverBatchingDisabled;
@property(nonatomic) double batchFailedTime; // @synthesize batchFailedTime=_batchFailedTime;
@property(retain, nonatomic) NSTimer *timer; // @synthesize timer=_timer;
@property(retain, nonatomic) id connection; // @synthesize connection=_connection;
@property(retain, nonatomic) NSString *httpsBatchURL; // @synthesize httpsBatchURL=_httpsBatchURL;
@property(retain, nonatomic) NSString *httpBatchURL; // @synthesize httpBatchURL=_httpBatchURL;
@property(retain, nonatomic) NSString *httpsURL; // @synthesize httpsURL=_httpsURL;
@property(retain, nonatomic) NSString *httpURL; // @synthesize httpURL=_httpURL;
@property(nonatomic) _Bool hostReachable; // @synthesize hostReachable=_hostReachable;
@property(retain, nonatomic) GAIReachabilityChecker *reachability; // @synthesize reachability=_reachability;
@property(nonatomic) unsigned long long maxHitSize; // @synthesize maxHitSize=_maxHitSize;
@property(nonatomic) unsigned long long maxBodySize; // @synthesize maxBodySize=_maxBodySize;
@property(nonatomic) double maxHitAge; // @synthesize maxHitAge=_maxHitAge;
@property(nonatomic) unsigned long long maxHitsPerDispatch; // @synthesize maxHitsPerDispatch=_maxHitsPerDispatch;
@property(retain, nonatomic) Class urlConnectionClass; // @synthesize urlConnectionClass=_urlConnectionClass;
@property(readonly, nonatomic) GAIRequestBuilder *requestBuilder; // @synthesize requestBuilder=_requestBuilder;
@property(retain, nonatomic) GAIAnalyticsPropertiesStore *propertiesStore; // @synthesize propertiesStore=_propertiesStore;
@property(retain, nonatomic) GAIDataStore *dataStore; // @synthesize dataStore=_dataStore;
@property(nonatomic) double dispatchInterval; // @synthesize dispatchInterval=_dispatchInterval;
@property(nonatomic) unsigned long long compressionStrategy; // @synthesize compressionStrategy=_compressionStrategy;
@property(nonatomic) unsigned long long batchingStrategy; // @synthesize batchingStrategy=_batchingStrategy;
@property(nonatomic) _Bool optOut; // @synthesize optOut=_optOut;
- (void).cxx_destruct;
- (oneway void)rescheduleDispatch;
- (void)timerFired;
- (_Bool)canScheduleDispatch;
- (_Bool)canDispatch;
- (void)cancelDispatch;
- (void)initialDispatch;
- (_Bool)rescheduleIfNeeded:(SEL)arg1 withObject:(id)arg2 andWait:(_Bool)arg3;
- (void)sendIAdCampaignHit:(id)arg1;
- (id)buildIAdCampaignHitWithHitParameters:(id)arg1;
- (id)determineHitTime:(id)arg1;
- (void)insertHitTime:(id)arg1 hitParameters:(id)arg2;
@property(readonly, nonatomic) id adClientInstance;
- (void)handleCampaignResult:(_Bool)arg1 campaignHitParameters:(id)arg2;
- (_Bool)checkIAdCampaignAttributionWithHitParameters:(id)arg1;
- (void)queueDispatch:(id)arg1;
- (void)queueModel:(id)arg1;
- (id)buildPayload:(id)arg1;
- (oneway void)dispatchWithCompletionHandler:(CDUnknownBlockType)arg1;
- (oneway void)dispatch;
@property(readonly, nonatomic) NSString *clientId;
- (void)deleteAllHits;
- (void)deleteHits:(id)arg1;
- (void)persist:(id)arg1;
- (id)nextPendingHits;
- (id)hitsForDispatch;
- (unsigned long long)batchBySessionSplit:(id)arg1 maxHits:(unsigned long long)arg2;
- (unsigned long long)batchByTimeGap:(id)arg1 maxHits:(unsigned long long)arg2;
- (void)cancelPerformRequests;
- (void)dealloc;
- (void)setupBatching;
- (id)initWithDataStore:(id)arg1;
- (id)init;
- (void)didSendHits:(id)arg1;
- (void)didSendHits:(id)arg1 response:(id)arg2 data:(id)arg3 error:(id)arg4;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)reachability:(id)arg1 statusChanged:(int)arg2;
@property _Bool hasHits;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GAIUsageTracker : NSObject
{
}

+ (id)getUsageSequence;
+ (void)trackAction:(SEL)arg1;
+ (void)trackTarget:(id)arg1 action:(SEL)arg2;
+ (void)initialize;
- (void)trackAction:(SEL)arg1;

@end

@interface GAIEcommerceProductAction : NSObject
{
    NSMutableDictionary *_parameters;
}

@property(retain, nonatomic) NSMutableDictionary *parameters; // @synthesize parameters=_parameters;
- (void).cxx_destruct;
- (id)build;
- (id)setProductListSource:(id)arg1;
- (id)setProductActionList:(id)arg1;
- (id)setCheckoutOption:(id)arg1;
- (id)setCheckoutStep:(id)arg1;
- (id)setCouponCode:(id)arg1;
- (id)setShipping:(id)arg1;
- (id)setTax:(id)arg1;
- (id)setRevenue:(id)arg1;
- (id)setAffiliation:(id)arg1;
- (id)setTransactionId:(id)arg1;
- (id)setAction:(id)arg1;
- (id)setNumber:(id)arg1 forKey:(id)arg2;
- (id)setString:(id)arg1 forKey:(id)arg2;
- (id)init;

@end

@interface GAISqlStore : NSObject
{
    NSString *_databaseName;
    struct sqlite3 *_database;
    NSMutableDictionary *_statementCache;
    NSString *_databasePath;
}

+ (id)databaseDirectoryPath;
+ (id)sharedInstance;
@property(readonly, nonatomic) NSString *databasePath; // @synthesize databasePath=_databasePath;
@property(retain, nonatomic) NSMutableDictionary *statementCache; // @synthesize statementCache=_statementCache;
@property(nonatomic) struct sqlite3 *database; // @synthesize database=_database;
@property(readonly, copy, nonatomic) NSString *databaseName; // @synthesize databaseName=_databaseName;
- (void).cxx_destruct;
- (int)executeSql:(id)arg1;
- (struct sqlite3_stmt *)prepareSql:(id)arg1;
@property(readonly, copy, nonatomic) NSString *errorMessage;
- (_Bool)dropTableWithName:(id)arg1;
- (_Bool)tableExists:(id)arg1;
- (_Bool)closeAndDeleteDatabase;
- (id)closeDatabase;
- (_Bool)openAndValidateDatabase;
- (_Bool)ensureOpenDatabase;
- (void)finalizeAndClearStatements;
- (void)removeStatementForQuery:(id)arg1;
- (struct sqlite3_stmt *)statementForQuery:(id)arg1;
- (void)setStatement:(struct sqlite3_stmt *)arg1 forQuery:(id)arg2;
- (unsigned long long)rowCountForTableWithName:(id)arg1;
- (void)dealloc;
- (id)initWithDatabaseName:(id)arg1;

@end

@interface GAICompressionUtil : NSObject
{
}

+ (id)gai_dataByRawInflatingData:(id)arg1;
+ (id)gai_dataByRawInflatingBytes:(const void *)arg1 length:(unsigned long long)arg2;
+ (id)gai_dataByRawDeflatingData:(id)arg1 compressionLevel:(int)arg2;
+ (id)gai_dataByRawDeflatingBytes:(const void *)arg1 length:(unsigned long long)arg2 compressionLevel:(int)arg3;
+ (id)gai_dataByRawDeflatingData:(id)arg1;
+ (id)gai_dataByRawDeflatingBytes:(const void *)arg1 length:(unsigned long long)arg2;
+ (id)gai_dataByInflatingData:(id)arg1;
+ (id)gai_dataByInflatingBytes:(const void *)arg1 length:(unsigned long long)arg2;
+ (id)gai_dataByDeflatingData:(id)arg1 compressionLevel:(int)arg2;
+ (id)gai_dataByDeflatingBytes:(const void *)arg1 length:(unsigned long long)arg2 compressionLevel:(int)arg3;
+ (id)gai_dataByDeflatingData:(id)arg1;
+ (id)gai_dataByDeflatingBytes:(const void *)arg1 length:(unsigned long long)arg2;
+ (id)gai_dataByGzippingData:(id)arg1 compressionLevel:(int)arg2;
+ (id)gai_dataByGzippingBytes:(const void *)arg1 length:(unsigned long long)arg2 compressionLevel:(int)arg3;
+ (id)gai_dataByGzippingData:(id)arg1;
+ (id)gai_dataByGzippingBytes:(const void *)arg1 length:(unsigned long long)arg2;
+ (id)gai_dataByInflatingBytes:(const void *)arg1 length:(unsigned long long)arg2 isRawData:(_Bool)arg3;
+ (id)gai_dataByCompressingBytes:(const void *)arg1 length:(unsigned long long)arg2 compressionLevel:(int)arg3 mode:(int)arg4;

@end

@interface GAIAnalyticsPropertiesStore : NSObject
{
    GAISqlStore *_sqlStore;
    NSArray *_propertiesTableColumns;
    NSString *_propertiesTableSchemaSql;
    NSString *_propertiesTableUpsertSql;
}

+ (id)sharedInstance;
@property(readonly, nonatomic) NSString *propertiesTableUpsertSql; // @synthesize propertiesTableUpsertSql=_propertiesTableUpsertSql;
@property(readonly, nonatomic) NSString *propertiesTableSchemaSql; // @synthesize propertiesTableSchemaSql=_propertiesTableSchemaSql;
@property(readonly, nonatomic) NSArray *propertiesTableColumns; // @synthesize propertiesTableColumns=_propertiesTableColumns;
@property(retain, nonatomic) GAISqlStore *sqlStore; // @synthesize sqlStore=_sqlStore;
- (void).cxx_destruct;
- (_Bool)setCheckedIAdCampaignForTrackingId:(id)arg1;
- (struct sqlite3_stmt *)selectStmtWithTrackingId:(id)arg1;
- (id)propertyRecordForTrackingId:(id)arg1;
- (id)createPropertyRecordWithTrackingId:(id)arg1 clientId:(id)arg2 hitNumber:(long long)arg3 checkedIAdCampaign:(_Bool)arg4;
- (_Bool)createPropertiesTable;
- (_Bool)createOrValidatePropertiesTable;
- (_Bool)clearPropertiesTable;
- (_Bool)hasValidPropertyColumns;
@property(readonly, nonatomic) _Bool isPropertiesTableFull;
- (_Bool)bindRecord:(id)arg1 toUpsertStatement:(struct sqlite3_stmt *)arg2;
- (_Bool)upsertPropertyRecord:(id)arg1;
@property(readonly, nonatomic) unsigned long long storageLimit;
@property(readonly, nonatomic) unsigned long long trackerIdCount;
- (id)nextHitNumberForTrackingId:(id)arg1 clientId:(id)arg2;
- (void)onOpenDatabase:(id)arg1;
- (void)dealloc;
- (id)buildPropertiesTableUpsertSql;
- (id)buildPropertiesTableSchemaSql;
- (id)initWithSqlStore:(id)arg1;

@end

@interface TAGPBDescriptorRoot : TAGPBRootObject
{
}

@end

@interface TAGPBFileDescriptorSet : TAGPBGeneratedMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(retain, nonatomic) TAGPBMutableArray *fileArray; // @dynamic fileArray;
@property(nonatomic) _Bool hasFileArray; // @dynamic hasFileArray;

@end

@interface TAGPBFileDescriptorProto : TAGPBGeneratedMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(retain, nonatomic) TAGPBMutableArray *dependencyArray; // @dynamic dependencyArray;
@property(retain, nonatomic) TAGPBMutableArray *enumTypeArray; // @dynamic enumTypeArray;
@property(retain, nonatomic) TAGPBMutableArray *extensionArray; // @dynamic extensionArray;
@property(nonatomic) _Bool hasDependencyArray; // @dynamic hasDependencyArray;
@property(nonatomic) _Bool hasEnumTypeArray; // @dynamic hasEnumTypeArray;
@property(nonatomic) _Bool hasExtensionArray; // @dynamic hasExtensionArray;
@property(nonatomic) _Bool hasMessageTypeArray; // @dynamic hasMessageTypeArray;
@property(nonatomic) _Bool hasName; // @dynamic hasName;
@property(nonatomic) _Bool hasOptions; // @dynamic hasOptions;
@property(nonatomic) _Bool hasPackage; // @dynamic hasPackage;
@property(nonatomic) _Bool hasPublicDependencyArray; // @dynamic hasPublicDependencyArray;
@property(nonatomic) _Bool hasServiceArray; // @dynamic hasServiceArray;
@property(nonatomic) _Bool hasSourceCodeInfo; // @dynamic hasSourceCodeInfo;
@property(nonatomic) _Bool hasSyntax; // @dynamic hasSyntax;
@property(nonatomic) _Bool hasWeakDependencyArray; // @dynamic hasWeakDependencyArray;
@property(retain, nonatomic) TAGPBMutableArray *messageTypeArray; // @dynamic messageTypeArray;
@property(retain, nonatomic) NSString *name; // @dynamic name;
@property(retain, nonatomic) TAGPBFileOptions *options; // @dynamic options;
@property(retain, nonatomic) NSString *package; // @dynamic package;
@property(retain, nonatomic) TAGPBMutableArray *publicDependencyArray; // @dynamic publicDependencyArray;
@property(retain, nonatomic) TAGPBMutableArray *serviceArray; // @dynamic serviceArray;
@property(retain, nonatomic) TAGPBSourceCodeInfo *sourceCodeInfo; // @dynamic sourceCodeInfo;
@property(retain, nonatomic) NSString *syntax; // @dynamic syntax;
@property(retain, nonatomic) TAGPBMutableArray *weakDependencyArray; // @dynamic weakDependencyArray;

@end

@interface TAGPBDescriptorProto : TAGPBGeneratedMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(retain, nonatomic) TAGPBMutableArray *enumTypeArray; // @dynamic enumTypeArray;
@property(retain, nonatomic) TAGPBMutableArray *extensionArray; // @dynamic extensionArray;
@property(retain, nonatomic) TAGPBMutableArray *extensionRangeArray; // @dynamic extensionRangeArray;
@property(retain, nonatomic) TAGPBMutableArray *fieldArray; // @dynamic fieldArray;
@property(nonatomic) _Bool hasEnumTypeArray; // @dynamic hasEnumTypeArray;
@property(nonatomic) _Bool hasExtensionArray; // @dynamic hasExtensionArray;
@property(nonatomic) _Bool hasExtensionRangeArray; // @dynamic hasExtensionRangeArray;
@property(nonatomic) _Bool hasFieldArray; // @dynamic hasFieldArray;
@property(nonatomic) _Bool hasName; // @dynamic hasName;
@property(nonatomic) _Bool hasNestedTypeArray; // @dynamic hasNestedTypeArray;
@property(nonatomic) _Bool hasOneofDeclArray; // @dynamic hasOneofDeclArray;
@property(nonatomic) _Bool hasOptions; // @dynamic hasOptions;
@property(nonatomic) _Bool hasReservedNameArray; // @dynamic hasReservedNameArray;
@property(nonatomic) _Bool hasReservedRangeArray; // @dynamic hasReservedRangeArray;
@property(retain, nonatomic) NSString *name; // @dynamic name;
@property(retain, nonatomic) TAGPBMutableArray *nestedTypeArray; // @dynamic nestedTypeArray;
@property(retain, nonatomic) TAGPBMutableArray *oneofDeclArray; // @dynamic oneofDeclArray;
@property(retain, nonatomic) TAGPBMessageOptions *options; // @dynamic options;
@property(retain, nonatomic) TAGPBMutableArray *reservedNameArray; // @dynamic reservedNameArray;
@property(retain, nonatomic) TAGPBMutableArray *reservedRangeArray; // @dynamic reservedRangeArray;

@end

@interface TAGPBDescriptorProto_ExtensionRange : TAGPBGeneratedMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) int end; // @dynamic end;
@property(nonatomic) _Bool hasEnd; // @dynamic hasEnd;
@property(nonatomic) _Bool hasStart; // @dynamic hasStart;
@property(nonatomic) int start; // @dynamic start;

@end

@interface TAGPBDescriptorProto_ReservedRange : TAGPBGeneratedMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) int end; // @dynamic end;
@property(nonatomic) _Bool hasEnd; // @dynamic hasEnd;
@property(nonatomic) _Bool hasStart; // @dynamic hasStart;
@property(nonatomic) int start; // @dynamic start;

@end

@interface TAGPBFieldDescriptorProto : TAGPBGeneratedMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(retain, nonatomic) NSString *defaultValue; // @dynamic defaultValue;
@property(retain, nonatomic) NSString *extendee; // @dynamic extendee;
@property(nonatomic) _Bool hasDefaultValue; // @dynamic hasDefaultValue;
@property(nonatomic) _Bool hasExtendee; // @dynamic hasExtendee;
@property(nonatomic) _Bool hasLabel; // @dynamic hasLabel;
@property(nonatomic) _Bool hasName; // @dynamic hasName;
@property(nonatomic) _Bool hasNumber; // @dynamic hasNumber;
@property(nonatomic) _Bool hasOneofIndex; // @dynamic hasOneofIndex;
@property(nonatomic) _Bool hasOptions; // @dynamic hasOptions;
@property(nonatomic) _Bool hasType; // @dynamic hasType;
@property(nonatomic) _Bool hasTypeName; // @dynamic hasTypeName;
@property(nonatomic) int label; // @dynamic label;
@property(retain, nonatomic) NSString *name; // @dynamic name;
@property(nonatomic) int number; // @dynamic number;
@property(nonatomic) int oneofIndex; // @dynamic oneofIndex;
@property(retain, nonatomic) TAGPBFieldOptions *options; // @dynamic options;
@property(nonatomic) int type; // @dynamic type;
@property(retain, nonatomic) NSString *typeName; // @dynamic typeName;

@end

@interface TAGPBFieldDescriptorProto_TypeEnumDescriptor : TAGPBGeneratedEnumDescriptor
{
}

+ (id)enumDescriptor;

@end

@interface TAGPBFieldDescriptorProto_LabelEnumDescriptor : TAGPBGeneratedEnumDescriptor
{
}

+ (id)enumDescriptor;

@end

@interface TAGPBOneofDescriptorProto : TAGPBGeneratedMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) _Bool hasName; // @dynamic hasName;
@property(retain, nonatomic) NSString *name; // @dynamic name;

@end

@interface TAGPBEnumDescriptorProto : TAGPBGeneratedMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) _Bool hasName; // @dynamic hasName;
@property(nonatomic) _Bool hasOptions; // @dynamic hasOptions;
@property(nonatomic) _Bool hasValueArray; // @dynamic hasValueArray;
@property(retain, nonatomic) NSString *name; // @dynamic name;
@property(retain, nonatomic) TAGPBEnumOptions *options; // @dynamic options;
@property(retain, nonatomic) TAGPBMutableArray *valueArray; // @dynamic valueArray;

@end

@interface TAGPBEnumValueDescriptorProto : TAGPBGeneratedMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) _Bool hasName; // @dynamic hasName;
@property(nonatomic) _Bool hasNumber; // @dynamic hasNumber;
@property(nonatomic) _Bool hasOptions; // @dynamic hasOptions;
@property(retain, nonatomic) NSString *name; // @dynamic name;
@property(nonatomic) int number; // @dynamic number;
@property(retain, nonatomic) TAGPBEnumValueOptions *options; // @dynamic options;

@end

@interface TAGPBServiceDescriptorProto : TAGPBGeneratedMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) _Bool hasMethodArray; // @dynamic hasMethodArray;
@property(nonatomic) _Bool hasName; // @dynamic hasName;
@property(nonatomic) _Bool hasOptions; // @dynamic hasOptions;
@property(nonatomic) _Bool hasStreamArray; // @dynamic hasStreamArray;
@property(retain, nonatomic) TAGPBMutableArray *methodArray; // @dynamic methodArray;
@property(retain, nonatomic) NSString *name; // @dynamic name;
@property(retain, nonatomic) TAGPBServiceOptions *options; // @dynamic options;
@property(retain, nonatomic) TAGPBMutableArray *streamArray; // @dynamic streamArray;

@end

@interface TAGPBMethodDescriptorProto : TAGPBGeneratedMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) _Bool clientStreaming; // @dynamic clientStreaming;
@property(nonatomic) _Bool hasClientStreaming; // @dynamic hasClientStreaming;
@property(nonatomic) _Bool hasInputType; // @dynamic hasInputType;
@property(nonatomic) _Bool hasName; // @dynamic hasName;
@property(nonatomic) _Bool hasOptions; // @dynamic hasOptions;
@property(nonatomic) _Bool hasOutputType; // @dynamic hasOutputType;
@property(nonatomic) _Bool hasServerStreaming; // @dynamic hasServerStreaming;
@property(retain, nonatomic) NSString *inputType; // @dynamic inputType;
@property(retain, nonatomic) NSString *name; // @dynamic name;
@property(retain, nonatomic) TAGPBMethodOptions *options; // @dynamic options;
@property(retain, nonatomic) NSString *outputType; // @dynamic outputType;
@property(nonatomic) _Bool serverStreaming; // @dynamic serverStreaming;

@end

@interface TAGPBStreamDescriptorProto : TAGPBGeneratedMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(retain, nonatomic) NSString *clientMessageType; // @dynamic clientMessageType;
@property(nonatomic) _Bool hasClientMessageType; // @dynamic hasClientMessageType;
@property(nonatomic) _Bool hasName; // @dynamic hasName;
@property(nonatomic) _Bool hasOptions; // @dynamic hasOptions;
@property(nonatomic) _Bool hasServerMessageType; // @dynamic hasServerMessageType;
@property(retain, nonatomic) NSString *name; // @dynamic name;
@property(retain, nonatomic) TAGPBStreamOptions *options; // @dynamic options;
@property(retain, nonatomic) NSString *serverMessageType; // @dynamic serverMessageType;

@end

@interface TAGPBFileOptions : TAGPBGeneratedMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) int ccApiCompatibility; // @dynamic ccApiCompatibility;
@property(nonatomic) int ccApiVersion; // @dynamic ccApiVersion;
@property(nonatomic) _Bool ccEnableArenas; // @dynamic ccEnableArenas;
@property(nonatomic) _Bool ccEnableMaps; // @dynamic ccEnableMaps;
@property(nonatomic) _Bool ccGenericServices; // @dynamic ccGenericServices;
@property(nonatomic) _Bool ccProto1TextFormat; // @dynamic ccProto1TextFormat;
@property(nonatomic) _Bool ccProtoArrayCompatible; // @dynamic ccProtoArrayCompatible;
@property(nonatomic) _Bool ccUtf8Verification; // @dynamic ccUtf8Verification;
@property(retain, nonatomic) NSString *csharpNamespace; // @dynamic csharpNamespace;
@property(nonatomic) _Bool deprecated; // @dynamic deprecated;
@property(nonatomic) _Bool goForceProto2Api; // @dynamic goForceProto2Api;
@property(retain, nonatomic) NSString *goPackage; // @dynamic goPackage;
@property(nonatomic) _Bool hasCcApiCompatibility; // @dynamic hasCcApiCompatibility;
@property(nonatomic) _Bool hasCcApiVersion; // @dynamic hasCcApiVersion;
@property(nonatomic) _Bool hasCcEnableArenas; // @dynamic hasCcEnableArenas;
@property(nonatomic) _Bool hasCcEnableMaps; // @dynamic hasCcEnableMaps;
@property(nonatomic) _Bool hasCcGenericServices; // @dynamic hasCcGenericServices;
@property(nonatomic) _Bool hasCcProto1TextFormat; // @dynamic hasCcProto1TextFormat;
@property(nonatomic) _Bool hasCcProtoArrayCompatible; // @dynamic hasCcProtoArrayCompatible;
@property(nonatomic) _Bool hasCcUtf8Verification; // @dynamic hasCcUtf8Verification;
@property(nonatomic) _Bool hasCsharpNamespace; // @dynamic hasCsharpNamespace;
@property(nonatomic) _Bool hasDeprecated; // @dynamic hasDeprecated;
@property(nonatomic) _Bool hasGoForceProto2Api; // @dynamic hasGoForceProto2Api;
@property(nonatomic) _Bool hasGoPackage; // @dynamic hasGoPackage;
@property(nonatomic) _Bool hasJavaAltApiPackage; // @dynamic hasJavaAltApiPackage;
@property(nonatomic) _Bool hasJavaApiVersion; // @dynamic hasJavaApiVersion;
@property(nonatomic) _Bool hasJavaEnableDualGenerateMutableApi; // @dynamic hasJavaEnableDualGenerateMutableApi;
@property(nonatomic) _Bool hasJavaEnableMapsForProto2; // @dynamic hasJavaEnableMapsForProto2;
@property(nonatomic) _Bool hasJavaGenerateEqualsAndHash; // @dynamic hasJavaGenerateEqualsAndHash;
@property(nonatomic) _Bool hasJavaGenerateRpcBaseimpl; // @dynamic hasJavaGenerateRpcBaseimpl;
@property(nonatomic) _Bool hasJavaGenericServices; // @dynamic hasJavaGenericServices;
@property(nonatomic) _Bool hasJavaJava5Enums; // @dynamic hasJavaJava5Enums;
@property(nonatomic) _Bool hasJavaMultipleFiles; // @dynamic hasJavaMultipleFiles;
@property(nonatomic) _Bool hasJavaMultipleFilesMutablePackage; // @dynamic hasJavaMultipleFilesMutablePackage;
@property(nonatomic) _Bool hasJavaMutableApi; // @dynamic hasJavaMutableApi;
@property(nonatomic) _Bool hasJavaOuterClassname; // @dynamic hasJavaOuterClassname;
@property(nonatomic) _Bool hasJavaPackage; // @dynamic hasJavaPackage;
@property(nonatomic) _Bool hasJavaStringCheckUtf8; // @dynamic hasJavaStringCheckUtf8;
@property(nonatomic) _Bool hasJavaUseJavaproto2; // @dynamic hasJavaUseJavaproto2;
@property(nonatomic) _Bool hasJavaUseJavastrings; // @dynamic hasJavaUseJavastrings;
@property(nonatomic) _Bool hasJavananoUseDeprecatedPackage; // @dynamic hasJavananoUseDeprecatedPackage;
@property(nonatomic) _Bool hasJavascriptPackage; // @dynamic hasJavascriptPackage;
@property(nonatomic) _Bool hasObjcClassPrefix; // @dynamic hasObjcClassPrefix;
@property(nonatomic) _Bool hasOptimizeFor; // @dynamic hasOptimizeFor;
@property(nonatomic) _Bool hasPyApiVersion; // @dynamic hasPyApiVersion;
@property(nonatomic) _Bool hasPyGenericServices; // @dynamic hasPyGenericServices;
@property(nonatomic) _Bool hasSzlApiVersion; // @dynamic hasSzlApiVersion;
@property(nonatomic) _Bool hasUninterpretedOptionArray; // @dynamic hasUninterpretedOptionArray;
@property(retain, nonatomic) NSString *javaAltApiPackage; // @dynamic javaAltApiPackage;
@property(nonatomic) int javaApiVersion; // @dynamic javaApiVersion;
@property(nonatomic) _Bool javaEnableDualGenerateMutableApi; // @dynamic javaEnableDualGenerateMutableApi;
@property(nonatomic) _Bool javaEnableMapsForProto2; // @dynamic javaEnableMapsForProto2;
@property(nonatomic) _Bool javaGenerateEqualsAndHash; // @dynamic javaGenerateEqualsAndHash;
@property(nonatomic) _Bool javaGenerateRpcBaseimpl; // @dynamic javaGenerateRpcBaseimpl;
@property(nonatomic) _Bool javaGenericServices; // @dynamic javaGenericServices;
@property(nonatomic) _Bool javaJava5Enums; // @dynamic javaJava5Enums;
@property(nonatomic) _Bool javaMultipleFiles; // @dynamic javaMultipleFiles;
@property(retain, nonatomic) NSString *javaMultipleFilesMutablePackage; // @dynamic javaMultipleFilesMutablePackage;
@property(nonatomic) _Bool javaMutableApi; // @dynamic javaMutableApi;
@property(retain, nonatomic) NSString *javaOuterClassname; // @dynamic javaOuterClassname;
@property(retain, nonatomic) NSString *javaPackage; // @dynamic javaPackage;
@property(nonatomic) _Bool javaStringCheckUtf8; // @dynamic javaStringCheckUtf8;
@property(nonatomic) _Bool javaUseJavaproto2; // @dynamic javaUseJavaproto2;
@property(nonatomic) _Bool javaUseJavastrings; // @dynamic javaUseJavastrings;
@property(nonatomic) _Bool javananoUseDeprecatedPackage; // @dynamic javananoUseDeprecatedPackage;
@property(retain, nonatomic) NSString *javascriptPackage; // @dynamic javascriptPackage;
@property(retain, nonatomic) NSString *objcClassPrefix; // @dynamic objcClassPrefix;
@property(nonatomic) int optimizeFor; // @dynamic optimizeFor;
@property(nonatomic) int pyApiVersion; // @dynamic pyApiVersion;
@property(nonatomic) _Bool pyGenericServices; // @dynamic pyGenericServices;
@property(nonatomic) int szlApiVersion; // @dynamic szlApiVersion;
@property(retain, nonatomic) TAGPBMutableArray *uninterpretedOptionArray; // @dynamic uninterpretedOptionArray;

@end

@interface TAGPBFileOptions_CompatibilityLevelEnumDescriptor : TAGPBGeneratedEnumDescriptor
{
}

+ (id)enumDescriptor;

@end

@interface TAGPBFileOptions_OptimizeModeEnumDescriptor : TAGPBGeneratedEnumDescriptor
{
}

+ (id)enumDescriptor;

@end

@interface TAGPBMessageOptions : TAGPBGeneratedMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) _Bool deprecated; // @dynamic deprecated;
@property(retain, nonatomic) TAGPBMutableArray *experimentalJavaBuilderInterfaceArray; // @dynamic experimentalJavaBuilderInterfaceArray;
@property(retain, nonatomic) TAGPBMutableArray *experimentalJavaInterfaceExtendsArray; // @dynamic experimentalJavaInterfaceExtendsArray;
@property(retain, nonatomic) TAGPBMutableArray *experimentalJavaMessageInterfaceArray; // @dynamic experimentalJavaMessageInterfaceArray;
@property(nonatomic) _Bool hasDeprecated; // @dynamic hasDeprecated;
@property(nonatomic) _Bool hasExperimentalJavaBuilderInterfaceArray; // @dynamic hasExperimentalJavaBuilderInterfaceArray;
@property(nonatomic) _Bool hasExperimentalJavaInterfaceExtendsArray; // @dynamic hasExperimentalJavaInterfaceExtendsArray;
@property(nonatomic) _Bool hasExperimentalJavaMessageInterfaceArray; // @dynamic hasExperimentalJavaMessageInterfaceArray;
@property(nonatomic) _Bool hasMapEntry; // @dynamic hasMapEntry;
@property(nonatomic) _Bool hasMessageSetWireFormat; // @dynamic hasMessageSetWireFormat;
@property(nonatomic) _Bool hasNoStandardDescriptorAccessor; // @dynamic hasNoStandardDescriptorAccessor;
@property(nonatomic) _Bool hasUninterpretedOptionArray; // @dynamic hasUninterpretedOptionArray;
@property(nonatomic) _Bool mapEntry; // @dynamic mapEntry;
@property(nonatomic) _Bool messageSetWireFormat; // @dynamic messageSetWireFormat;
@property(nonatomic) _Bool noStandardDescriptorAccessor; // @dynamic noStandardDescriptorAccessor;
@property(retain, nonatomic) TAGPBMutableArray *uninterpretedOptionArray; // @dynamic uninterpretedOptionArray;

@end

@interface TAGPBFieldOptions : TAGPBGeneratedMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) int ctype; // @dynamic ctype;
@property(nonatomic) _Bool deprecated; // @dynamic deprecated;
@property(nonatomic) _Bool deprecatedRawMessage; // @dynamic deprecatedRawMessage;
@property(nonatomic) _Bool enforceUtf8; // @dynamic enforceUtf8;
@property(nonatomic) _Bool hasCtype; // @dynamic hasCtype;
@property(nonatomic) _Bool hasDeprecated; // @dynamic hasDeprecated;
@property(nonatomic) _Bool hasDeprecatedRawMessage; // @dynamic hasDeprecatedRawMessage;
@property(nonatomic) _Bool hasEnforceUtf8; // @dynamic hasEnforceUtf8;
@property(nonatomic) _Bool hasJstype; // @dynamic hasJstype;
@property(nonatomic) _Bool hasJtype; // @dynamic hasJtype;
@property(nonatomic) _Bool hasLazy; // @dynamic hasLazy;
@property(nonatomic) _Bool hasPacked; // @dynamic hasPacked;
@property(nonatomic) _Bool hasUninterpretedOptionArray; // @dynamic hasUninterpretedOptionArray;
@property(nonatomic) _Bool hasUpgradedOptionArray; // @dynamic hasUpgradedOptionArray;
@property(nonatomic) _Bool hasWeak; // @dynamic hasWeak;
@property(nonatomic) int jstype; // @dynamic jstype;
@property(nonatomic) int jtype; // @dynamic jtype;
@property(nonatomic) _Bool lazy; // @dynamic lazy;
@property(nonatomic) _Bool packed; // @dynamic packed;
@property(retain, nonatomic) TAGPBMutableArray *uninterpretedOptionArray; // @dynamic uninterpretedOptionArray;
@property(retain, nonatomic) TAGPBMutableArray *upgradedOptionArray; // @dynamic upgradedOptionArray;
@property(nonatomic) _Bool weak; // @dynamic weak;

@end

@interface TAGPBFieldOptions_CTypeEnumDescriptor : TAGPBGeneratedEnumDescriptor
{
}

+ (id)enumDescriptor;

@end

@interface TAGPBFieldOptions_JTypeEnumDescriptor : TAGPBGeneratedEnumDescriptor
{
}

+ (id)enumDescriptor;

@end

@interface TAGPBFieldOptions_JSTypeEnumDescriptor : TAGPBGeneratedEnumDescriptor
{
}

+ (id)enumDescriptor;

@end

@interface TAGPBFieldOptions_UpgradedOption : TAGPBGeneratedMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) _Bool hasName; // @dynamic hasName;
@property(nonatomic) _Bool hasValue; // @dynamic hasValue;
@property(retain, nonatomic) NSString *name; // @dynamic name;
@property(retain, nonatomic) NSString *value; // @dynamic value;

@end

@interface TAGPBEnumOptions : TAGPBGeneratedMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) _Bool allowAlias; // @dynamic allowAlias;
@property(nonatomic) _Bool deprecated; // @dynamic deprecated;
@property(nonatomic) _Bool hasAllowAlias; // @dynamic hasAllowAlias;
@property(nonatomic) _Bool hasDeprecated; // @dynamic hasDeprecated;
@property(nonatomic) _Bool hasProto1Name; // @dynamic hasProto1Name;
@property(nonatomic) _Bool hasUninterpretedOptionArray; // @dynamic hasUninterpretedOptionArray;
@property(retain, nonatomic) NSString *proto1Name; // @dynamic proto1Name;
@property(retain, nonatomic) TAGPBMutableArray *uninterpretedOptionArray; // @dynamic uninterpretedOptionArray;

@end

@interface TAGPBEnumValueOptions : TAGPBGeneratedMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) _Bool deprecated; // @dynamic deprecated;
@property(nonatomic) _Bool hasDeprecated; // @dynamic hasDeprecated;
@property(nonatomic) _Bool hasUninterpretedOptionArray; // @dynamic hasUninterpretedOptionArray;
@property(retain, nonatomic) TAGPBMutableArray *uninterpretedOptionArray; // @dynamic uninterpretedOptionArray;

@end

@interface TAGPBServiceOptions : TAGPBGeneratedMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) _Bool deprecated; // @dynamic deprecated;
@property(nonatomic) double failureDetectionDelay; // @dynamic failureDetectionDelay;
@property(nonatomic) _Bool hasDeprecated; // @dynamic hasDeprecated;
@property(nonatomic) _Bool hasFailureDetectionDelay; // @dynamic hasFailureDetectionDelay;
@property(nonatomic) _Bool hasMulticastStub; // @dynamic hasMulticastStub;
@property(nonatomic) _Bool hasUninterpretedOptionArray; // @dynamic hasUninterpretedOptionArray;
@property(nonatomic) _Bool multicastStub; // @dynamic multicastStub;
@property(retain, nonatomic) TAGPBMutableArray *uninterpretedOptionArray; // @dynamic uninterpretedOptionArray;

@end

@interface TAGPBMethodOptions : TAGPBGeneratedMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) int clientLogging; // @dynamic clientLogging;
@property(nonatomic) _Bool clientStreaming; // @dynamic clientStreaming;
@property(nonatomic) double deadline; // @dynamic deadline;
@property(nonatomic) _Bool deprecated; // @dynamic deprecated;
@property(nonatomic) _Bool duplicateSuppression; // @dynamic duplicateSuppression;
@property(nonatomic) _Bool endUserCredsRequested; // @dynamic endUserCredsRequested;
@property(nonatomic) _Bool failFast; // @dynamic failFast;
@property(nonatomic) _Bool hasClientLogging; // @dynamic hasClientLogging;
@property(nonatomic) _Bool hasClientStreaming; // @dynamic hasClientStreaming;
@property(nonatomic) _Bool hasDeadline; // @dynamic hasDeadline;
@property(nonatomic) _Bool hasDeprecated; // @dynamic hasDeprecated;
@property(nonatomic) _Bool hasDuplicateSuppression; // @dynamic hasDuplicateSuppression;
@property(nonatomic) _Bool hasEndUserCredsRequested; // @dynamic hasEndUserCredsRequested;
@property(nonatomic) _Bool hasFailFast; // @dynamic hasFailFast;
@property(nonatomic) _Bool hasLegacyClientInitialTokens; // @dynamic hasLegacyClientInitialTokens;
@property(nonatomic) _Bool hasLegacyResultType; // @dynamic hasLegacyResultType;
@property(nonatomic) _Bool hasLegacyServerInitialTokens; // @dynamic hasLegacyServerInitialTokens;
@property(nonatomic) _Bool hasLegacyStreamType; // @dynamic hasLegacyStreamType;
@property(nonatomic) _Bool hasLogLevel; // @dynamic hasLogLevel;
@property(nonatomic) _Bool hasProtocol; // @dynamic hasProtocol;
@property(nonatomic) _Bool hasRequestFormat; // @dynamic hasRequestFormat;
@property(nonatomic) _Bool hasResponseFormat; // @dynamic hasResponseFormat;
@property(nonatomic) _Bool hasSecurityLabel; // @dynamic hasSecurityLabel;
@property(nonatomic) _Bool hasSecurityLevel; // @dynamic hasSecurityLevel;
@property(nonatomic) _Bool hasServerLogging; // @dynamic hasServerLogging;
@property(nonatomic) _Bool hasServerStreaming; // @dynamic hasServerStreaming;
@property(nonatomic) _Bool hasStreamType; // @dynamic hasStreamType;
@property(nonatomic) _Bool hasUninterpretedOptionArray; // @dynamic hasUninterpretedOptionArray;
@property(nonatomic) long long legacyClientInitialTokens; // @dynamic legacyClientInitialTokens;
@property(retain, nonatomic) NSString *legacyResultType; // @dynamic legacyResultType;
@property(nonatomic) long long legacyServerInitialTokens; // @dynamic legacyServerInitialTokens;
@property(retain, nonatomic) NSString *legacyStreamType; // @dynamic legacyStreamType;
@property(nonatomic) int logLevel; // @dynamic logLevel;
@property(nonatomic) int protocol; // @dynamic protocol;
@property(nonatomic) int requestFormat; // @dynamic requestFormat;
@property(nonatomic) int responseFormat; // @dynamic responseFormat;
@property(retain, nonatomic) NSString *securityLabel; // @dynamic securityLabel;
@property(nonatomic) int securityLevel; // @dynamic securityLevel;
@property(nonatomic) int serverLogging; // @dynamic serverLogging;
@property(nonatomic) _Bool serverStreaming; // @dynamic serverStreaming;
@property(retain, nonatomic) NSString *streamType; // @dynamic streamType;
@property(retain, nonatomic) TAGPBMutableArray *uninterpretedOptionArray; // @dynamic uninterpretedOptionArray;

@end

@interface TAGPBMethodOptions_ProtocolEnumDescriptor : TAGPBGeneratedEnumDescriptor
{
}

+ (id)enumDescriptor;

@end

@interface TAGPBMethodOptions_SecurityLevelEnumDescriptor : TAGPBGeneratedEnumDescriptor
{
}

+ (id)enumDescriptor;

@end

@interface TAGPBMethodOptions_FormatEnumDescriptor : TAGPBGeneratedEnumDescriptor
{
}

+ (id)enumDescriptor;

@end

@interface TAGPBMethodOptions_LogLevelEnumDescriptor : TAGPBGeneratedEnumDescriptor
{
}

+ (id)enumDescriptor;

@end

@interface TAGPBStreamOptions : TAGPBGeneratedMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) long long clientInitialTokens; // @dynamic clientInitialTokens;
@property(nonatomic) int clientLogging; // @dynamic clientLogging;
@property(nonatomic) double deadline; // @dynamic deadline;
@property(nonatomic) _Bool deprecated; // @dynamic deprecated;
@property(nonatomic) _Bool endUserCredsRequested; // @dynamic endUserCredsRequested;
@property(nonatomic) _Bool failFast; // @dynamic failFast;
@property(nonatomic) _Bool hasClientInitialTokens; // @dynamic hasClientInitialTokens;
@property(nonatomic) _Bool hasClientLogging; // @dynamic hasClientLogging;
@property(nonatomic) _Bool hasDeadline; // @dynamic hasDeadline;
@property(nonatomic) _Bool hasDeprecated; // @dynamic hasDeprecated;
@property(nonatomic) _Bool hasEndUserCredsRequested; // @dynamic hasEndUserCredsRequested;
@property(nonatomic) _Bool hasFailFast; // @dynamic hasFailFast;
@property(nonatomic) _Bool hasLogLevel; // @dynamic hasLogLevel;
@property(nonatomic) _Bool hasSecurityLabel; // @dynamic hasSecurityLabel;
@property(nonatomic) _Bool hasSecurityLevel; // @dynamic hasSecurityLevel;
@property(nonatomic) _Bool hasServerInitialTokens; // @dynamic hasServerInitialTokens;
@property(nonatomic) _Bool hasServerLogging; // @dynamic hasServerLogging;
@property(nonatomic) _Bool hasTokenUnit; // @dynamic hasTokenUnit;
@property(nonatomic) _Bool hasUninterpretedOptionArray; // @dynamic hasUninterpretedOptionArray;
@property(nonatomic) int logLevel; // @dynamic logLevel;
@property(retain, nonatomic) NSString *securityLabel; // @dynamic securityLabel;
@property(nonatomic) int securityLevel; // @dynamic securityLevel;
@property(nonatomic) long long serverInitialTokens; // @dynamic serverInitialTokens;
@property(nonatomic) int serverLogging; // @dynamic serverLogging;
@property(nonatomic) int tokenUnit; // @dynamic tokenUnit;
@property(retain, nonatomic) TAGPBMutableArray *uninterpretedOptionArray; // @dynamic uninterpretedOptionArray;

@end

@interface TAGPBStreamOptions_TokenUnitEnumDescriptor : TAGPBGeneratedEnumDescriptor
{
}

+ (id)enumDescriptor;

@end

@interface TAGPBUninterpretedOption : TAGPBGeneratedMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(retain, nonatomic) NSString *aggregateValue; // @dynamic aggregateValue;
@property(nonatomic) double doubleValue; // @dynamic doubleValue;
@property(nonatomic) _Bool hasAggregateValue; // @dynamic hasAggregateValue;
@property(nonatomic) _Bool hasDoubleValue; // @dynamic hasDoubleValue;
@property(nonatomic) _Bool hasIdentifierValue; // @dynamic hasIdentifierValue;
@property(nonatomic) _Bool hasNameArray; // @dynamic hasNameArray;
@property(nonatomic) _Bool hasNegativeIntValue; // @dynamic hasNegativeIntValue;
@property(nonatomic) _Bool hasPositiveIntValue; // @dynamic hasPositiveIntValue;
@property(nonatomic) _Bool hasStringValue; // @dynamic hasStringValue;
@property(retain, nonatomic) NSString *identifierValue; // @dynamic identifierValue;
@property(retain, nonatomic) TAGPBMutableArray *nameArray; // @dynamic nameArray;
@property(nonatomic) long long negativeIntValue; // @dynamic negativeIntValue;
@property(nonatomic) unsigned long long positiveIntValue; // @dynamic positiveIntValue;
@property(retain, nonatomic) NSData *stringValue; // @dynamic stringValue;

@end

@interface TAGPBUninterpretedOption_NamePart : TAGPBGeneratedMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) _Bool hasIsExtension; // @dynamic hasIsExtension;
@property(nonatomic) _Bool hasNamePart; // @dynamic hasNamePart;
@property(nonatomic) _Bool isExtension; // @dynamic isExtension;
@property(retain, nonatomic) NSString *namePart; // @dynamic namePart;

@end

@interface TAGPBSourceCodeInfo : TAGPBGeneratedMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) _Bool hasLocationArray; // @dynamic hasLocationArray;
@property(retain, nonatomic) TAGPBMutableArray *locationArray; // @dynamic locationArray;

@end

@interface TAGPBSourceCodeInfo_Location : TAGPBGeneratedMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) _Bool hasLeadingComments; // @dynamic hasLeadingComments;
@property(nonatomic) _Bool hasLeadingDetachedCommentsArray; // @dynamic hasLeadingDetachedCommentsArray;
@property(nonatomic) _Bool hasPathArray; // @dynamic hasPathArray;
@property(nonatomic) _Bool hasSpanArray; // @dynamic hasSpanArray;
@property(nonatomic) _Bool hasTrailingComments; // @dynamic hasTrailingComments;
@property(retain, nonatomic) NSString *leadingComments; // @dynamic leadingComments;
@property(retain, nonatomic) TAGPBMutableArray *leadingDetachedCommentsArray; // @dynamic leadingDetachedCommentsArray;
@property(retain, nonatomic) TAGPBMutableArray *pathArray; // @dynamic pathArray;
@property(retain, nonatomic) TAGPBMutableArray *spanArray; // @dynamic spanArray;
@property(retain, nonatomic) NSString *trailingComments; // @dynamic trailingComments;

@end

@interface TAGPBObjectivecDescriptorRoot : TAGPBRootObject
{
}

+ (void)load;
+ (id)extensionRegistry;

@end

@interface TAGPBObjectiveCFileOptions : TAGPBGeneratedMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) _Bool camelcaseOutputFilename; // @dynamic camelcaseOutputFilename;
@property(retain, nonatomic) NSString *classPrefix; // @dynamic classPrefix;
@property(nonatomic) _Bool hasCamelcaseOutputFilename; // @dynamic hasCamelcaseOutputFilename;
@property(nonatomic) _Bool hasClassPrefix; // @dynamic hasClassPrefix;
@property(nonatomic) _Bool hasPackage; // @dynamic hasPackage;
@property(retain, nonatomic) NSString *package; // @dynamic package;

@end

@interface TAGPBArray : NSObject <NSCopying, NSMutableCopying, NSFastEnumeration>
{
    int _valueType;
    unsigned long long _capacity;
    unsigned long long _count;
    char *_data;
}

+ (id)arrayWithInt32s:(int)arg1;
+ (id)arrayWithInt32:(int)arg1;
+ (id)arrayWithObjects:(id)arg1;
+ (id)arrayWithObject:(id)arg1;
+ (id)arrayWithArray:(id)arg1 valueType:(int)arg2;
+ (id)arrayWithValues:(const void *)arg1 count:(unsigned long long)arg2 valueType:(int)arg3;
+ (id)arrayWithValueType:(int)arg1;
@property(readonly, nonatomic) unsigned long long count; // @synthesize count=_count;
@property(readonly, nonatomic) int valueType; // @synthesize valueType=_valueType;
- (void)setValue:(id)arg1 forKey:(id)arg2;
- (id)valueForKey:(id)arg1;
- (id)initWithInt32:(int)arg1;
- (id)initWithObject:(id)arg1;
- (id)initWithArray:(id)arg1 valueType:(int)arg2;
- (id)initWithValues:(const void *)arg1 count:(unsigned long long)arg2 valueType:(int)arg3;
- (id)initWithValueType:(int)arg1;
- (id)arrayByAppendingArray:(id)arg1;
- (id)arrayWithConversion:(CDUnknownBlockType)arg1;
- (id)array;
- (double)doubleAtIndex:(unsigned long long)arg1;
- (float)floatAtIndex:(unsigned long long)arg1;
- (unsigned long long)uint64AtIndex:(unsigned long long)arg1;
- (long long)int64AtIndex:(unsigned long long)arg1;
- (unsigned int)uint32AtIndex:(unsigned long long)arg1;
- (int)int32AtIndex:(unsigned long long)arg1;
- (_Bool)boolAtIndex:(unsigned long long)arg1;
- (id)lastObject;
- (id)firstObject;
- (id)objectAtIndexedSubscript:(unsigned long long)arg1;
- (id)objectAtIndex:(unsigned long long)arg1;
- (id)description;
- (void)dealloc;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (_Bool)isEqual:(id)arg1;
- (void)enumerateInt32sUsingBlock:(CDUnknownBlockType)arg1;
- (void)enumerateObjectsUsingBlock:(CDUnknownBlockType)arg1;
- (unsigned long long)countByEnumeratingWithState:(CDStruct_70511ce9 *)arg1 objects:(id *)arg2 count:(unsigned long long)arg3;
@property(readonly, nonatomic) const void *data;
- (unsigned long long)hash;
- (id)initWithCount:(unsigned long long)arg1 valueType:(int)arg2;
- (CDUnion_3de46016)valueAtIndex:(unsigned long long)arg1;

@end

@interface TAGPBMutableArray : TAGPBArray
{
    unsigned long long _mutationCount;
    id <TAGPBMutableArrayDelegate> _delegate;
}

+ (id)arrayWithValueType:(int)arg1 capacity:(unsigned long long)arg2;
@property(nonatomic) id <TAGPBMutableArrayDelegate> delegate; // @synthesize delegate=_delegate;
- (void)removeAllValues;
- (void)appendValues:(const void *)arg1 valueType:(int)arg2 count:(unsigned long long)arg3;
- (void)appendArray:(id)arg1;
- (void)setArray:(id)arg1;
- (void)replaceDoubleAtIndex:(unsigned long long)arg1 withDouble:(double)arg2;
- (void)replaceFloatAtIndex:(unsigned long long)arg1 withFloat:(float)arg2;
- (void)replaceUInt64AtIndex:(unsigned long long)arg1 withUInt64:(unsigned long long)arg2;
- (void)replaceInt64AtIndex:(unsigned long long)arg1 withInt64:(long long)arg2;
- (void)replaceUInt32AtIndex:(unsigned long long)arg1 withUInt32:(unsigned int)arg2;
- (void)replaceInt32AtIndex:(unsigned long long)arg1 withInt32:(int)arg2;
- (void)replaceBoolAtIndex:(unsigned long long)arg1 withBool:(_Bool)arg2;
- (void)setObject:(id)arg1 atIndexedSubscript:(unsigned long long)arg2;
- (void)replaceObjectAtIndex:(unsigned long long)arg1 withObject:(id)arg2;
- (void)addDouble:(double)arg1;
- (void)addFloat:(float)arg1;
- (void)addUInt64:(unsigned long long)arg1;
- (void)addInt64:(long long)arg1;
- (void)addUInt32:(unsigned int)arg1;
- (void)addInt32:(int)arg1;
- (void)addBool:(_Bool)arg1;
- (void)addObject:(id)arg1;
- (void)ensureAdditionalCapacity:(unsigned long long)arg1;
- (void)enumerateInt32sUsingBlock:(CDUnknownBlockType)arg1;
- (void)enumerateObjectsUsingBlock:(CDUnknownBlockType)arg1;
- (unsigned long long)countByEnumeratingWithState:(CDStruct_70511ce9 *)arg1 objects:(id *)arg2 count:(unsigned long long)arg3;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithValueType:(int)arg1 capacity:(unsigned long long)arg2;
- (void)dealloc;

@end

@interface TAGPBCodedInputStream : NSObject
{
    NSData *buffer_;
    struct TAGPBInputBufferState state_;
    int lastTag_;
    unsigned long long recursionDepth_;
}

+ (id)streamWithData:(id)arg1;
- (_Bool)isAtEnd;
- (unsigned long long)position;
- (unsigned long long)bytesUntilLimit;
- (void)popLimit:(unsigned long long)arg1;
- (unsigned long long)pushLimit:(unsigned long long)arg1;
- (long long)readSInt64;
- (int)readSInt32;
- (long long)readSFixed64;
- (int)readSFixed32;
- (int)readEnum;
- (unsigned int)readUInt32;
- (id)readData;
- (void)readMessage:(id)arg1 extensionRegistry:(id)arg2;
- (void)readUnknownGroup:(int)arg1 builder:(id)arg2;
- (void)readGroup:(int)arg1 builder:(id)arg2 extensionRegistry:(id)arg3;
- (id)readString;
- (_Bool)readBool;
- (unsigned int)readFixed32;
- (unsigned long long)readFixed64;
- (int)readInt32;
- (long long)readInt64;
- (unsigned long long)readUInt64;
- (float)readFloat;
- (double)readDouble;
- (void)skipMessage;
- (_Bool)skipField:(int)arg1;
- (void)checkLastTagWas:(int)arg1;
- (int)readTag;
- (void)dealloc;
- (id)initWithData:(id)arg1;

@end

@interface TAGPBString : NSString
{
    struct __CFString *string_;
    char *utf8_;
    unsigned long long utf8Len_;
    int lock_;
    _Bool hasBOM_;
    unsigned char internalBuffer_[0];
}

- (_Bool)getBytes:(void *)arg1 maxLength:(unsigned long long)arg2 usedLength:(unsigned long long *)arg3 encoding:(unsigned long long)arg4 options:(unsigned long long)arg5 range:(struct _NSRange)arg6 remainingRange:(struct _NSRange *)arg7;
- (unsigned long long)lengthOfBytesUsingEncoding:(unsigned long long)arg1;
- (void)getCharacters:(unsigned short *)arg1 range:(struct _NSRange)arg2;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (unsigned short)characterAtIndex:(unsigned long long)arg1;
- (unsigned long long)length;
- (void)dealloc;

@end

@interface TAGPBCodedOutputStream : NSObject
{
    struct TAGPBOutputBufferState state_;
    NSMutableData *buffer_;
}

+ (id)streamWithData:(id)arg1;
+ (id)streamWithOutputStream:(id)arg1;
+ (id)streamWithOutputStream:(id)arg1 bufferSize:(unsigned long long)arg2;
- (void)writeRawLittleEndian64:(long long)arg1;
- (void)writeRawLittleEndian32:(int)arg1;
- (void)writeRawVarint64:(long long)arg1;
- (void)writeRawVarintSizeTAs32:(unsigned long long)arg1;
- (void)writeRawVarint32:(int)arg1;
- (void)writeTag:(unsigned int)arg1 format:(int)arg2;
- (void)writeRawPtr:(const void *)arg1 offset:(unsigned long long)arg2 length:(unsigned long long)arg3;
- (void)writeRawData:(id)arg1;
- (void)writeRawByte:(unsigned char)arg1;
- (void)flush;
- (void)writeRawMessageSetExtension:(int)arg1 value:(id)arg2;
- (void)writeMessageSetExtension:(int)arg1 value:(id)arg2;
- (void)writeUnknownGroups:(int)arg1 values:(id)arg2;
- (void)writeGroups:(int)arg1 values:(id)arg2;
- (void)writeDatas:(int)arg1 values:(id)arg2;
- (void)writeMessages:(int)arg1 values:(id)arg2;
- (void)writeStrings:(int)arg1 values:(id)arg2;
- (void)writeEnums:(int)arg1 values:(id)arg2 tag:(unsigned int)arg3;
- (void)writeBools:(int)arg1 values:(id)arg2 tag:(unsigned int)arg3;
- (void)writeSFixed32s:(int)arg1 values:(id)arg2 tag:(unsigned int)arg3;
- (void)writeSFixed64s:(int)arg1 values:(id)arg2 tag:(unsigned int)arg3;
- (void)writeSInt64s:(int)arg1 values:(id)arg2 tag:(unsigned int)arg3;
- (void)writeSInt32s:(int)arg1 values:(id)arg2 tag:(unsigned int)arg3;
- (void)writeFixed32s:(int)arg1 values:(id)arg2 tag:(unsigned int)arg3;
- (void)writeFixed64s:(int)arg1 values:(id)arg2 tag:(unsigned int)arg3;
- (void)writeUInt32s:(int)arg1 values:(id)arg2 tag:(unsigned int)arg3;
- (void)writeInt32s:(int)arg1 values:(id)arg2 tag:(unsigned int)arg3;
- (void)writeInt64s:(int)arg1 values:(id)arg2 tag:(unsigned int)arg3;
- (void)writeUInt64s:(int)arg1 values:(id)arg2 tag:(unsigned int)arg3;
- (void)writeFloats:(int)arg1 values:(id)arg2 tag:(unsigned int)arg3;
- (void)writeDoubles:(int)arg1 values:(id)arg2 tag:(unsigned int)arg3;
- (void)writeSInt64:(int)arg1 value:(long long)arg2;
- (void)writeSInt64NoTag:(long long)arg1;
- (void)writeSInt32:(int)arg1 value:(int)arg2;
- (void)writeSInt32NoTag:(int)arg1;
- (void)writeSFixed64:(int)arg1 value:(long long)arg2;
- (void)writeSFixed64NoTag:(long long)arg1;
- (void)writeSFixed32:(int)arg1 value:(int)arg2;
- (void)writeSFixed32NoTag:(int)arg1;
- (void)writeEnum:(int)arg1 value:(int)arg2;
- (void)writeEnumNoTag:(int)arg1;
- (void)writeUInt32:(int)arg1 value:(unsigned int)arg2;
- (void)writeUInt32NoTag:(unsigned int)arg1;
- (void)writeData:(int)arg1 value:(id)arg2;
- (void)writeDataNoTag:(id)arg1;
- (void)writeMessage:(int)arg1 value:(id)arg2;
- (void)writeMessageNoTag:(id)arg1;
- (void)writeUnknownGroup:(int)arg1 value:(id)arg2;
- (void)writeUnknownGroupNoTag:(int)arg1 value:(id)arg2;
- (void)writeGroup:(int)arg1 value:(id)arg2;
- (void)writeGroupNoTag:(int)arg1 value:(id)arg2;
- (void)writeString:(int)arg1 value:(id)arg2;
- (void)writeStringNoTag:(id)arg1;
- (void)writeBool:(int)arg1 value:(_Bool)arg2;
- (void)writeBoolNoTag:(_Bool)arg1;
- (void)writeFixed32:(int)arg1 value:(unsigned int)arg2;
- (void)writeFixed32NoTag:(unsigned int)arg1;
- (void)writeFixed64:(int)arg1 value:(unsigned long long)arg2;
- (void)writeFixed64NoTag:(unsigned long long)arg1;
- (void)writeInt32:(int)arg1 value:(int)arg2;
- (void)writeInt32NoTag:(int)arg1;
- (void)writeInt64:(int)arg1 value:(long long)arg2;
- (void)writeInt64NoTag:(long long)arg1;
- (void)writeUInt64:(int)arg1 value:(unsigned long long)arg2;
- (void)writeUInt64NoTag:(unsigned long long)arg1;
- (void)writeFloat:(int)arg1 value:(float)arg2;
- (void)writeFloatNoTag:(float)arg1;
- (void)writeDouble:(int)arg1 value:(double)arg2;
- (void)writeDoubleNoTag:(double)arg1;
- (id)initWithOutputStream:(id)arg1 data:(id)arg2;
- (id)initWithOutputStream:(id)arg1 bufferSize:(unsigned long long)arg2;
- (id)initWithData:(id)arg1;
- (id)initWithOutputStream:(id)arg1;
- (void)dealloc;

@end

@interface TAGPBDescriptor : NSObject <NSCopying>
{
    TAGPBArray *fields_;
    Class messageClass_;
    TAGPBArray *enums_;
    TAGPBArray *extensions_;
    unsigned long long storageSize_;
    _Bool wireFormat_;
    TAGPBArray *extensionRanges_;
}

+ (id)allocDescriptorForClass:(Class)arg1 rootClass:(Class)arg2 fields:(struct TAGPBMessageFieldDescription *)arg3 fieldCount:(unsigned long long)arg4 enums:(struct TAGPBMessageEnumDescription *)arg5 enumCount:(unsigned long long)arg6 ranges:(struct TAGPBMessageExtensionRangeDescription *)arg7 rangeCount:(unsigned long long)arg8 storageSize:(unsigned long long)arg9 wireFormat:(_Bool)arg10 extraTextFormatInfo:(const char *)arg11;
+ (id)allocDescriptorForClass:(Class)arg1 rootClass:(Class)arg2 fields:(struct TAGPBMessageFieldDescription *)arg3 fieldCount:(unsigned long long)arg4 enums:(struct TAGPBMessageEnumDescription *)arg5 enumCount:(unsigned long long)arg6 ranges:(struct TAGPBMessageExtensionRangeDescription *)arg7 rangeCount:(unsigned long long)arg8 storageSize:(unsigned long long)arg9 wireFormat:(_Bool)arg10;
@property(readonly, nonatomic, getter=isWireFormat) _Bool wireFormat; // @synthesize wireFormat=wireFormat_;
@property(readonly, nonatomic) unsigned long long storageSize; // @synthesize storageSize=storageSize_;
@property(readonly, retain, nonatomic) TAGPBArray *extensionRanges; // @synthesize extensionRanges=extensionRanges_;
@property(readonly, retain, nonatomic) TAGPBArray *extensions; // @synthesize extensions=extensions_;
@property(readonly, retain, nonatomic) TAGPBArray *enums; // @synthesize enums=enums_;
@property(readonly, retain, nonatomic) TAGPBArray *fields; // @synthesize fields=fields_;
@property(readonly, nonatomic) Class messageClass; // @synthesize messageClass=messageClass_;
- (id)extensionWithName:(id)arg1;
- (id)extensionWithNumber:(unsigned int)arg1;
- (id)enumWithName:(id)arg1;
- (id)fieldWithName:(id)arg1;
- (id)fieldWithNumber:(unsigned int)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
@property(readonly, retain, nonatomic) NSString *name;
- (void)dealloc;
- (id)initWithClass:(Class)arg1 fields:(id)arg2 enums:(id)arg3 extensions:(id)arg4 extensionRanges:(id)arg5 storageSize:(unsigned long long)arg6 wireFormat:(_Bool)arg7;

@end

@interface TAGPBFieldDescriptor : NSObject
{
    struct TAGPBMessageFieldDescription *description_;
    SEL getSel_;
    SEL setSel_;
    SEL hasSel_;
    SEL setHasSel_;
    CDUnion_3de46016 defaultValue_;
    TAGPBFieldOptions *fieldOptions_;
    Class msgClass_;
    union {
        TAGPBEnumDescriptor *enumDescriptor_;
        CDUnknownFunctionPointerType enumVerifier_;
    } enumHandling_;
}

@property(readonly, nonatomic) Class msgClass; // @synthesize msgClass=msgClass_;
@property(readonly, nonatomic) SEL setSel; // @synthesize setSel=setSel_;
@property(readonly, nonatomic) SEL setHasSel; // @synthesize setHasSel=setHasSel_;
@property(readonly, nonatomic) SEL hasSel; // @synthesize hasSel=hasSel_;
@property(readonly, nonatomic) TAGPBFieldOptions *fieldOptions; // @synthesize fieldOptions=fieldOptions_;
@property(readonly, nonatomic) SEL getSel; // @synthesize getSel=getSel_;
- (id)textFormatName;
@property(readonly, nonatomic) CDUnion_3de46016 defaultValue;
@property(readonly, retain, nonatomic) TAGPBEnumDescriptor *enumDescriptor;
- (_Bool)isValidEnumValue:(int)arg1;
@property(readonly, nonatomic, getter=isMessage) _Bool message;
@property(readonly, nonatomic, getter=isPackable) _Bool packable;
@property(readonly, nonatomic, getter=isRepeated) _Bool repeated;
@property(readonly, nonatomic, getter=isOptional) _Bool optional;
@property(readonly, nonatomic, getter=isRequired) _Bool required;
@property(readonly, retain, nonatomic) NSString *name;
@property(readonly, nonatomic) unsigned int tag;
@property(readonly, nonatomic) unsigned long long offset;
@property(readonly, nonatomic) unsigned int number;
@property(readonly, nonatomic) _Bool hasDefaultValue;
@property(readonly, nonatomic) unsigned int hasIndex;
@property(readonly, nonatomic) int type;
- (void)dealloc;
- (id)initWithFieldDescription:(struct TAGPBMessageFieldDescription *)arg1 rootClass:(Class)arg2;
- (id)init;

@end

@interface TAGPBEnumValueDescriptor : NSObject
{
    struct TAGPBMessageEnumValueDescription *description_;
    NSString *name_;
}

@property(readonly, retain, nonatomic) NSString *name; // @synthesize name=name_;
@property(readonly, nonatomic) int number;
- (void)dealloc;
- (id)initWithEnumValueDescription:(struct TAGPBMessageEnumValueDescription *)arg1 prefix:(id)arg2;

@end

@interface TAGPBEnumDescriptor : NSObject
{
    NSString *name_;
    TAGPBArray *values_;
    CDUnknownFunctionPointerType enumVerifier_;
    const char *extraTextFormatInfo_;
}

+ (id)descriptorForName:(const char *)arg1;
+ (id)allocDescriptorForName:(id)arg1 values:(struct TAGPBMessageEnumValueDescription *)arg2 valueCount:(unsigned long long)arg3 enumVerifier:(CDUnknownFunctionPointerType)arg4 extraTextFormatInfo:(const char *)arg5;
+ (id)allocDescriptorForName:(id)arg1 values:(struct TAGPBMessageEnumValueDescription *)arg2 valueCount:(unsigned long long)arg3 enumVerifier:(CDUnknownFunctionPointerType)arg4;
@property(readonly, nonatomic) CDUnknownFunctionPointerType enumVerifier; // @synthesize enumVerifier=enumVerifier_;
@property(readonly, retain, nonatomic) TAGPBArray *values; // @synthesize values=values_;
@property(readonly, retain, nonatomic) NSString *name; // @synthesize name=name_;
- (id)textFormatNameForEnumValue:(int)arg1;
- (void)dealloc;
- (id)enumValueWithName:(id)arg1;
- (id)enumValueWithNumber:(int)arg1;
- (id)initWithName:(id)arg1 values:(id)arg2 enumVerifier:(CDUnknownFunctionPointerType)arg3;

@end

@interface TAGPBGeneratedEnumDescriptor : NSObject
{
}

+ (id)enumDescriptor;
- (id)enumDescriptor;

@end

@interface TAGPBExtensionRange : NSObject
{
    struct TAGPBMessageExtensionRangeDescription *description_;
}

@property(readonly, nonatomic) unsigned int end;
@property(readonly, nonatomic) unsigned int start;
- (id)initWithRangeDescription:(struct TAGPBMessageExtensionRangeDescription *)arg1;

@end

@interface TAGPBExtensionDescriptor : NSObject
{
    struct TAGPBExtensionDescription *description_;
}

@property(readonly, retain, nonatomic) TAGPBEnumDescriptor *enumDescriptor;
@property(readonly, nonatomic) Class msgClass;
@property(readonly, nonatomic, getter=isMessage) _Bool message;
@property(readonly, nonatomic, getter=isPackable) _Bool packable;
@property(readonly, nonatomic, getter=isRepeated) _Bool repeated;
@property(readonly, nonatomic) int type;
@property(readonly, nonatomic) unsigned int fieldNumber;
- (const char *)singletonNameC;
@property(readonly, nonatomic) NSString *singletonName;
- (id)initWithExtensionDescription:(struct TAGPBExtensionDescription *)arg1;

@end

@interface TAGPBExtensionField : NSObject <NSCopying>
{
    struct TAGPBExtensionDescription *description_;
    CDUnion_3de46016 defaultTAGPBValue_;
    Class messageOrGroupClass_;
    TAGPBExtensionDescriptor *descriptor_;
    TAGPBDescriptor *containingType_;
}

@property(readonly, nonatomic) TAGPBExtensionDescriptor *descriptor; // @synthesize descriptor=descriptor_;
@property(readonly, nonatomic) TAGPBDescriptor *containingType; // @synthesize containingType=containingType_;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (long long)compareByFieldNumber:(id)arg1;
- (void)mergeFromCodedInputStream:(id)arg1 extensionRegistry:(id)arg2 builder:(id)arg3;
- (id)readSingleValueFromCodedInputStream:(id)arg1 extensionRegistry:(id)arg2 existingValue:(id)arg3;
- (id)description;
- (unsigned long long)computeSerializedSizeIncludingTag:(id)arg1;
- (unsigned long long)computeTAGPBSerializedSizesIncludingTags:(id)arg1;
- (void)writeValue:(id)arg1 includingTagToCodedOutputStream:(id)arg2;
- (void)writeTAGPBValues:(id)arg1 includingTagsToCodedOutputStream:(id)arg2;
@property(readonly, nonatomic) id defaultValue;
- (unsigned long long)computeTAGPBSerializedSizeIncludingTag:(CDUnion_3de46016)arg1;
- (unsigned long long)computeTAGPBSerializedSizeNoTag:(CDUnion_3de46016)arg1;
- (void)writeTAGPBValue:(CDUnion_3de46016)arg1 noTagToCodedOutputStream:(id)arg2;
- (void)writeTAGPBValue:(CDUnion_3de46016)arg1 includingTagToCodedOutputStream:(id)arg2;
@property(readonly, nonatomic) int wireType;
@property(readonly, nonatomic) int fieldNumber;
@property(readonly, nonatomic) _Bool isRepeated;
- (void)dealloc;
- (id)initWithDescription:(struct TAGPBExtensionDescription *)arg1;
- (id)init;

@end

@interface TAGPBExtensionRegistry : NSObject
{
    NSMutableDictionary *mutableClassMap_;
}

- (void)addExtensions:(id)arg1;
- (id)getExtension:(id)arg1 fieldNumber:(long long)arg2;
- (void)addExtension:(id)arg1;
- (id)extensionMapForContainingType:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface TAGPBField : NSObject
{
    int number_;
    TAGPBMutableArray *mutableVarintList_;
    TAGPBMutableArray *mutableFixed32List_;
    TAGPBMutableArray *mutableFixed64List_;
    TAGPBMutableArray *mutableLengthDelimitedList_;
    TAGPBMutableArray *mutableGroupList_;
}

@property(readonly, nonatomic) int number; // @synthesize number=number_;
@property(readonly, retain, nonatomic) TAGPBArray *groupList; // @synthesize groupList=mutableGroupList_;
@property(readonly, retain, nonatomic) TAGPBArray *lengthDelimitedList; // @synthesize lengthDelimitedList=mutableLengthDelimitedList_;
@property(readonly, retain, nonatomic) TAGPBArray *fixed64List; // @synthesize fixed64List=mutableFixed64List_;
@property(readonly, retain, nonatomic) TAGPBArray *fixed32List; // @synthesize fixed32List=mutableFixed32List_;
@property(readonly, retain, nonatomic) TAGPBArray *varintList; // @synthesize varintList=mutableVarintList_;
- (id)description;
- (unsigned long long)serializedSizeAsMessageSetExtension;
- (void)writeAsMessageSetExtensionToOutput:(id)arg1;
- (unsigned long long)serializedSize;
- (void)writeToOutput:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (void)dealloc;

@end

@interface TAGPBMutableField : TAGPBField
{
}

- (void)addGroup:(id)arg1;
- (void)addLengthDelimited:(id)arg1;
- (void)addFixed64:(unsigned long long)arg1;
- (void)addFixed32:(unsigned int)arg1;
- (void)addVarint:(unsigned long long)arg1;
- (void)mergeFromField:(id)arg1;
- (id)initWithNumber:(int)arg1;

@end

@interface TAGPBGeneratedMessage : TAGPBRootObject <TAGPBMutableArrayDelegate, NSCopying, NSMutableCopying, NSSecureCoding>
{
    TAGPBUnknownFieldSet *unknownFields_;
    NSMutableDictionary *extensionMap_;
    NSMutableDictionary *autocreatedExtensionMap_;
    TAGPBGeneratedMessage *autocreator_;
    TAGPBFieldDescriptor *autocreatorField_;
    TAGPBExtensionField *autocreatorExtension_;
    struct TAGPBGeneratedMessage_Storage *messageStorage_;
    int readOnlyMutex_;
}

+ (id)builder;
+ (_Bool)accessInstanceVariablesDirectly;
+ (_Bool)supportsSecureCoding;
+ (_Bool)resolveInstanceMethod:(SEL)arg1;
+ (id)parseDelimitedFromCodedInputStream:(id)arg1 extensionRegistry:(id)arg2;
+ (id)parseFromCodedInputStream:(id)arg1 extensionRegistry:(id)arg2;
+ (id)parseFromData:(id)arg1 extensionRegistry:(id)arg2;
+ (id)parseFromData:(id)arg1;
+ (id)newMessageWithAutocreator:(id)arg1 extension:(id)arg2;
+ (id)newMessageWithAutocreator:(id)arg1 field:(id)arg2;
+ (id)message;
+ (id)descriptor;
+ (id)alloc;
+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (void)initialize;
@property(retain, nonatomic) TAGPBUnknownFieldSet *unknownFields; // @synthesize unknownFields=unknownFields_;
- (id)build;
- (id)builder;
- (void)pbMutableArray:(id)arg1 willAddElements:(unsigned long long)arg2;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (unsigned long long)serializedSize;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
- (_Bool)isEqual:(id)arg1;
- (void)mergeFrom:(id)arg1;
- (void)mergeFromCodedInputStream:(id)arg1 extensionRegistry:(id)arg2;
- (_Bool)parseUnknownField:(id)arg1 extensionRegistry:(id)arg2 tag:(unsigned int)arg3;
- (void)parseMessageSet:(id)arg1 extensionRegistry:(id)arg2;
- (void)mergeUnknownFields:(id)arg1;
- (id)mutableUnknownFields;
- (void)mergeDelimitedFromCodedInputStream:(id)arg1 extensionRegistry:(id)arg2;
- (void)mergeFromData:(id)arg1 extensionRegistry:(id)arg2;
- (_Bool)wasAutocreatedBy:(id)arg1;
- (void)clearAutocreator;
- (void)clearExtension:(id)arg1;
- (void)setExtension:(id)arg1 index:(unsigned long long)arg2 value:(id)arg3;
- (void)addExtension:(id)arg1 value:(id)arg2;
- (void)setExtension:(id)arg1 value:(id)arg2;
- (unsigned long long)extensionsSerializedSize;
- (id)sortedExtensionsInUse;
- (void)writeExtensionsToCodedOutputStream:(id)arg1 range:(id)arg2;
- (id)extensionsCurrentlySet;
- (_Bool)hasExtension:(id)arg1;
- (id)getExistingExtension:(id)arg1;
- (id)getExtension:(id)arg1;
- (_Bool)isInitialized:(id)arg1;
- (void)writeField:(id)arg1 toCodedOutputStream:(id)arg2;
- (void)writeDelimitedToCodedOutputStream:(id)arg1;
- (void)writeDelimitedToOutputStream:(id)arg1;
- (void)writeToCodedOutputStream:(id)arg1;
- (void)writeToOutputStream:(id)arg1;
- (id)delimitedData;
- (id)data;
- (id)descriptor;
@property(readonly, nonatomic, getter=isInitialized) _Bool initialized;
- (void)internalClear;
- (void)clear;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyFieldsInto:(id)arg1 zone:(struct _NSZone *)arg2;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) Class superclass;

@end

@interface TAGPBRootObject : NSObject
{
}

+ (_Bool)resolveClassMethod:(SEL)arg1;
+ (void)globallyRegisterExtension:(id)arg1;
+ (id)extensionRegistry;
+ (void)initialize;

@end

@interface TAGPBUnknownFieldSet : NSObject <NSCopying, NSMutableCopying>
{
    struct __CFDictionary *fields_;
}

+ (_Bool)isFieldTag:(int)arg1;
- (void)getTags:(int *)arg1;
- (id)sortedFields;
- (void)mergeFromCodedInputStream:(id)arg1;
- (void)mergeMessageSetMessage:(int)arg1 data:(id)arg2;
- (_Bool)mergeFieldFrom:(int)arg1 input:(id)arg2;
- (void)mergeVarintField:(int)arg1 value:(int)arg2;
- (void)mergeFromData:(id)arg1;
- (void)mergeUnknownFields:(id)arg1;
- (void)mergeField:(id)arg1;
- (id)getFieldBuilder:(int)arg1 create:(_Bool)arg2;
- (void)addField:(id)arg1;
- (id)data;
- (unsigned long long)serializedSizeAsMessageSet;
- (void)writeAsMessageSetTo:(id)arg1;
- (unsigned long long)serializedSize;
- (id)description;
- (void)writeToCodedOutputStream:(id)arg1;
- (unsigned long long)countOfFields;
- (id)getField:(int)arg1;
- (_Bool)hasField:(int)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (void)dealloc;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithFields:(struct __CFDictionary *)arg1;

@end

@interface TAGPBMessageSignatureProtocol : NSObject <TAGPBMessageSignatureProtocol>
{
}

@end

@interface TAGPTypeSystemRoot : TAGPBRootObject
{
}

+ (void)load;
+ (id)extensionRegistry;

@end

@interface TAGPValue : TAGPBGeneratedMessage
{
}

+ (id)descriptor;
- (unsigned long long)hash;

// Remaining properties
@property(nonatomic) _Bool boolean; // @dynamic boolean;
@property(nonatomic) _Bool containsReferences; // @dynamic containsReferences;
@property(retain, nonatomic) TAGPBMutableArray *escapingArray; // @dynamic escapingArray;
@property(retain, nonatomic) NSString *functionId; // @dynamic functionId;
@property(nonatomic) _Bool hasBoolean; // @dynamic hasBoolean;
@property(nonatomic) _Bool hasContainsReferences; // @dynamic hasContainsReferences;
@property(nonatomic) _Bool hasEscapingArray; // @dynamic hasEscapingArray;
@property(nonatomic) _Bool hasFunctionId; // @dynamic hasFunctionId;
@property(nonatomic) _Bool hasInteger; // @dynamic hasInteger;
@property(nonatomic) _Bool hasListItemArray; // @dynamic hasListItemArray;
@property(nonatomic) _Bool hasMacroReference; // @dynamic hasMacroReference;
@property(nonatomic) _Bool hasMapKeyArray; // @dynamic hasMapKeyArray;
@property(nonatomic) _Bool hasMapValueArray; // @dynamic hasMapValueArray;
@property(nonatomic) _Bool hasString; // @dynamic hasString;
@property(nonatomic) _Bool hasTagFiringCondition; // @dynamic hasTagFiringCondition;
@property(nonatomic) _Bool hasTagReference; // @dynamic hasTagReference;
@property(nonatomic) _Bool hasTemplateTokenArray; // @dynamic hasTemplateTokenArray;
@property(nonatomic) _Bool hasType; // @dynamic hasType;
@property(nonatomic) long long integer; // @dynamic integer;
@property(retain, nonatomic) TAGPBMutableArray *listItemArray; // @dynamic listItemArray;
@property(retain, nonatomic) NSString *macroReference; // @dynamic macroReference;
@property(retain, nonatomic) TAGPBMutableArray *mapKeyArray; // @dynamic mapKeyArray;
@property(retain, nonatomic) TAGPBMutableArray *mapValueArray; // @dynamic mapValueArray;
@property(retain, nonatomic) NSString *string; // @dynamic string;
@property(nonatomic) int tagFiringCondition; // @dynamic tagFiringCondition;
@property(retain, nonatomic) NSString *tagReference; // @dynamic tagReference;
@property(retain, nonatomic) TAGPBMutableArray *templateTokenArray; // @dynamic templateTokenArray;
@property(nonatomic) int type; // @dynamic type;

@end

@interface TAGPValue_TypeEnumDescriptor : TAGPBGeneratedEnumDescriptor
{
}

+ (id)enumDescriptor;

@end

@interface TAGPValue_EscapingEnumDescriptor : TAGPBGeneratedEnumDescriptor
{
}

+ (id)enumDescriptor;

@end

@interface TAGPValue_TagFiringConditionEnumDescriptor : TAGPBGeneratedEnumDescriptor
{
}

+ (id)enumDescriptor;

@end

@interface TAGPServingRoot : TAGPBRootObject
{
}

+ (void)load;
+ (id)extensionRegistry;

@end

@interface TAGPResourceTypeEnumDescriptor : TAGPBGeneratedEnumDescriptor
{
}

+ (id)enumDescriptor;

@end

@interface TAGPSupplementedResourceId : TAGPBGeneratedMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(retain, nonatomic) NSString *environment; // @dynamic environment;
@property(nonatomic) _Bool hasEnvironment; // @dynamic hasEnvironment;
@property(nonatomic) _Bool hasId_p; // @dynamic hasId_p;
@property(nonatomic) _Bool hasSettingsType; // @dynamic hasSettingsType;
@property(nonatomic) _Bool hasType; // @dynamic hasType;
@property(nonatomic) _Bool hasVersion; // @dynamic hasVersion;
@property(retain, nonatomic) NSString *id_p; // @dynamic id_p;
@property(retain, nonatomic) NSString *settingsType; // @dynamic settingsType;
@property(nonatomic) int type; // @dynamic type;
@property(retain, nonatomic) NSString *version; // @dynamic version;

@end

@interface TAGPSupplementedResourceId_ResourceTypeEnumDescriptor : TAGPBGeneratedEnumDescriptor
{
}

+ (id)enumDescriptor;

@end

@interface TAGPServingValue : TAGPBGeneratedMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) _Bool hasListItemArray; // @dynamic hasListItemArray;
@property(nonatomic) _Bool hasMacroNameReference; // @dynamic hasMacroNameReference;
@property(nonatomic) _Bool hasMacroReference; // @dynamic hasMacroReference;
@property(nonatomic) _Bool hasMapKeyArray; // @dynamic hasMapKeyArray;
@property(nonatomic) _Bool hasMapValueArray; // @dynamic hasMapValueArray;
@property(nonatomic) _Bool hasTagFiringCondition; // @dynamic hasTagFiringCondition;
@property(nonatomic) _Bool hasTagReference; // @dynamic hasTagReference;
@property(nonatomic) _Bool hasTemplateTokenArray; // @dynamic hasTemplateTokenArray;
@property(retain, nonatomic) TAGPBMutableArray *listItemArray; // @dynamic listItemArray;
@property(nonatomic) int macroNameReference; // @dynamic macroNameReference;
@property(nonatomic) int macroReference; // @dynamic macroReference;
@property(retain, nonatomic) TAGPBMutableArray *mapKeyArray; // @dynamic mapKeyArray;
@property(retain, nonatomic) TAGPBMutableArray *mapValueArray; // @dynamic mapValueArray;
@property(nonatomic) int tagFiringCondition; // @dynamic tagFiringCondition;
@property(nonatomic) int tagReference; // @dynamic tagReference;
@property(retain, nonatomic) TAGPBMutableArray *templateTokenArray; // @dynamic templateTokenArray;

@end

@interface TAGPProperty : TAGPBGeneratedMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) _Bool hasKey; // @dynamic hasKey;
@property(nonatomic) _Bool hasValue; // @dynamic hasValue;
@property(nonatomic) int key; // @dynamic key;
@property(nonatomic) int value; // @dynamic value;

@end

@interface TAGPFunctionCall : TAGPBGeneratedMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) int function; // @dynamic function;
@property(nonatomic) _Bool hasFunction; // @dynamic hasFunction;
@property(nonatomic) _Bool hasLiveOnly; // @dynamic hasLiveOnly;
@property(nonatomic) _Bool hasName; // @dynamic hasName;
@property(nonatomic) _Bool hasPropertyArray; // @dynamic hasPropertyArray;
@property(nonatomic) _Bool hasServerSide; // @dynamic hasServerSide;
@property(nonatomic) _Bool liveOnly; // @dynamic liveOnly;
@property(nonatomic) int name; // @dynamic name;
@property(retain, nonatomic) TAGPBMutableArray *propertyArray; // @dynamic propertyArray;
@property(nonatomic) _Bool serverSide; // @dynamic serverSide;

@end

@interface TAGPRule : TAGPBGeneratedMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(retain, nonatomic) TAGPBMutableArray *addMacroArray; // @dynamic addMacroArray;
@property(retain, nonatomic) TAGPBMutableArray *addMacroRuleNameArray; // @dynamic addMacroRuleNameArray;
@property(retain, nonatomic) TAGPBMutableArray *addMacroRuleTriggerIdArray; // @dynamic addMacroRuleTriggerIdArray;
@property(retain, nonatomic) TAGPBMutableArray *addTagArray; // @dynamic addTagArray;
@property(retain, nonatomic) TAGPBMutableArray *addTagRuleNameArray; // @dynamic addTagRuleNameArray;
@property(retain, nonatomic) TAGPBMutableArray *addTagRuleTriggerIdArray; // @dynamic addTagRuleTriggerIdArray;
@property(nonatomic) _Bool hasAddMacroArray; // @dynamic hasAddMacroArray;
@property(nonatomic) _Bool hasAddMacroRuleNameArray; // @dynamic hasAddMacroRuleNameArray;
@property(nonatomic) _Bool hasAddMacroRuleTriggerIdArray; // @dynamic hasAddMacroRuleTriggerIdArray;
@property(nonatomic) _Bool hasAddTagArray; // @dynamic hasAddTagArray;
@property(nonatomic) _Bool hasAddTagRuleNameArray; // @dynamic hasAddTagRuleNameArray;
@property(nonatomic) _Bool hasAddTagRuleTriggerIdArray; // @dynamic hasAddTagRuleTriggerIdArray;
@property(nonatomic) _Bool hasNegativePredicateArray; // @dynamic hasNegativePredicateArray;
@property(nonatomic) _Bool hasPositivePredicateArray; // @dynamic hasPositivePredicateArray;
@property(nonatomic) _Bool hasRemoveMacroArray; // @dynamic hasRemoveMacroArray;
@property(nonatomic) _Bool hasRemoveMacroRuleNameArray; // @dynamic hasRemoveMacroRuleNameArray;
@property(nonatomic) _Bool hasRemoveMacroRuleTriggerIdArray; // @dynamic hasRemoveMacroRuleTriggerIdArray;
@property(nonatomic) _Bool hasRemoveTagArray; // @dynamic hasRemoveTagArray;
@property(nonatomic) _Bool hasRemoveTagRuleNameArray; // @dynamic hasRemoveTagRuleNameArray;
@property(nonatomic) _Bool hasRemoveTagRuleTriggerIdArray; // @dynamic hasRemoveTagRuleTriggerIdArray;
@property(retain, nonatomic) TAGPBMutableArray *negativePredicateArray; // @dynamic negativePredicateArray;
@property(retain, nonatomic) TAGPBMutableArray *positivePredicateArray; // @dynamic positivePredicateArray;
@property(retain, nonatomic) TAGPBMutableArray *removeMacroArray; // @dynamic removeMacroArray;
@property(retain, nonatomic) TAGPBMutableArray *removeMacroRuleNameArray; // @dynamic removeMacroRuleNameArray;
@property(retain, nonatomic) TAGPBMutableArray *removeMacroRuleTriggerIdArray; // @dynamic removeMacroRuleTriggerIdArray;
@property(retain, nonatomic) TAGPBMutableArray *removeTagArray; // @dynamic removeTagArray;
@property(retain, nonatomic) TAGPBMutableArray *removeTagRuleNameArray; // @dynamic removeTagRuleNameArray;
@property(retain, nonatomic) TAGPBMutableArray *removeTagRuleTriggerIdArray; // @dynamic removeTagRuleTriggerIdArray;

@end

@interface TAGPCacheOption : TAGPBGeneratedMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) int expirationSeconds; // @dynamic expirationSeconds;
@property(nonatomic) int gcacheExpirationSeconds; // @dynamic gcacheExpirationSeconds;
@property(nonatomic) _Bool hasExpirationSeconds; // @dynamic hasExpirationSeconds;
@property(nonatomic) _Bool hasGcacheExpirationSeconds; // @dynamic hasGcacheExpirationSeconds;
@property(nonatomic) _Bool hasLevel; // @dynamic hasLevel;
@property(nonatomic) int level; // @dynamic level;

@end

@interface TAGPCacheOption_CacheLevelEnumDescriptor : TAGPBGeneratedEnumDescriptor
{
}

+ (id)enumDescriptor;

@end

@interface TAGPResource : TAGPBGeneratedMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) _Bool googleDomainAccount; // @dynamic googleDomainAccount;
@property(nonatomic) _Bool hasGoogleDomainAccount; // @dynamic hasGoogleDomainAccount;
@property(nonatomic) _Bool hasKeyArray; // @dynamic hasKeyArray;
@property(nonatomic) _Bool hasLiveJsCacheOption; // @dynamic hasLiveJsCacheOption;
@property(nonatomic) _Bool hasMacroArray; // @dynamic hasMacroArray;
@property(nonatomic) _Bool hasMalwareScanAuthCode; // @dynamic hasMalwareScanAuthCode;
@property(nonatomic) _Bool hasObsoleteEnableAutoEventTracking; // @dynamic hasObsoleteEnableAutoEventTracking;
@property(nonatomic) _Bool hasPredicateArray; // @dynamic hasPredicateArray;
@property(nonatomic) _Bool hasPreviewAuthCode; // @dynamic hasPreviewAuthCode;
@property(nonatomic) _Bool hasPropertyArray; // @dynamic hasPropertyArray;
@property(nonatomic) _Bool hasReportingSampleRate; // @dynamic hasReportingSampleRate;
@property(nonatomic) _Bool hasResourceFormatVersion; // @dynamic hasResourceFormatVersion;
@property(nonatomic) _Bool hasRuleArray; // @dynamic hasRuleArray;
@property(nonatomic) _Bool hasSupplementalArray; // @dynamic hasSupplementalArray;
@property(nonatomic) _Bool hasTagArray; // @dynamic hasTagArray;
@property(nonatomic) _Bool hasTemplateVersionSet; // @dynamic hasTemplateVersionSet;
@property(nonatomic) _Bool hasTriggerCompilationEnabled; // @dynamic hasTriggerCompilationEnabled;
@property(nonatomic) _Bool hasUsageContextArray; // @dynamic hasUsageContextArray;
@property(nonatomic) _Bool hasValueArray; // @dynamic hasValueArray;
@property(nonatomic) _Bool hasVersion; // @dynamic hasVersion;
@property(retain, nonatomic) TAGPBMutableArray *keyArray; // @dynamic keyArray;
@property(retain, nonatomic) TAGPCacheOption *liveJsCacheOption; // @dynamic liveJsCacheOption;
@property(retain, nonatomic) TAGPBMutableArray *macroArray; // @dynamic macroArray;
@property(retain, nonatomic) NSString *malwareScanAuthCode; // @dynamic malwareScanAuthCode;
@property(nonatomic) _Bool obsoleteEnableAutoEventTracking; // @dynamic obsoleteEnableAutoEventTracking;
@property(retain, nonatomic) TAGPBMutableArray *predicateArray; // @dynamic predicateArray;
@property(retain, nonatomic) NSString *previewAuthCode; // @dynamic previewAuthCode;
@property(retain, nonatomic) TAGPBMutableArray *propertyArray; // @dynamic propertyArray;
@property(nonatomic) float reportingSampleRate; // @dynamic reportingSampleRate;
@property(nonatomic) int resourceFormatVersion; // @dynamic resourceFormatVersion;
@property(retain, nonatomic) TAGPBMutableArray *ruleArray; // @dynamic ruleArray;
@property(retain, nonatomic) TAGPBMutableArray *supplementalArray; // @dynamic supplementalArray;
@property(retain, nonatomic) TAGPBMutableArray *tagArray; // @dynamic tagArray;
@property(retain, nonatomic) NSString *templateVersionSet; // @dynamic templateVersionSet;
@property(nonatomic) _Bool triggerCompilationEnabled; // @dynamic triggerCompilationEnabled;
@property(retain, nonatomic) TAGPBMutableArray *usageContextArray; // @dynamic usageContextArray;
@property(retain, nonatomic) TAGPBMutableArray *valueArray; // @dynamic valueArray;
@property(retain, nonatomic) NSString *version; // @dynamic version;

@end

@interface TAGPGaExperimentRandom : TAGPBGeneratedMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) _Bool hasKey; // @dynamic hasKey;
@property(nonatomic) _Bool hasLifetimeInMilliseconds; // @dynamic hasLifetimeInMilliseconds;
@property(nonatomic) _Bool hasMaxRandom; // @dynamic hasMaxRandom;
@property(nonatomic) _Bool hasMinRandom; // @dynamic hasMinRandom;
@property(nonatomic) _Bool hasRetainOriginalValue; // @dynamic hasRetainOriginalValue;
@property(retain, nonatomic) NSString *key; // @dynamic key;
@property(nonatomic) long long lifetimeInMilliseconds; // @dynamic lifetimeInMilliseconds;
@property(nonatomic) long long maxRandom; // @dynamic maxRandom;
@property(nonatomic) long long minRandom; // @dynamic minRandom;
@property(nonatomic) _Bool retainOriginalValue; // @dynamic retainOriginalValue;

@end

@interface TAGPGaExperimentSupplemental : TAGPBGeneratedMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(retain, nonatomic) TAGPBMutableArray *experimentRandomArray; // @dynamic experimentRandomArray;
@property(nonatomic) _Bool hasExperimentRandomArray; // @dynamic hasExperimentRandomArray;
@property(nonatomic) _Bool hasValueToClearArray; // @dynamic hasValueToClearArray;
@property(nonatomic) _Bool hasValueToPushArray; // @dynamic hasValueToPushArray;
@property(retain, nonatomic) TAGPBMutableArray *valueToClearArray; // @dynamic valueToClearArray;
@property(retain, nonatomic) TAGPBMutableArray *valueToPushArray; // @dynamic valueToPushArray;

@end

@interface TAGPGaServerSideExperimentCombination : TAGPBGeneratedMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) _Bool enabled; // @dynamic enabled;
@property(nonatomic) _Bool hasEnabled; // @dynamic hasEnabled;
@property(nonatomic) _Bool hasVariationIndexArray; // @dynamic hasVariationIndexArray;
@property(nonatomic) _Bool hasWeightsVectorArray; // @dynamic hasWeightsVectorArray;
@property(retain, nonatomic) TAGPBMutableArray *variationIndexArray; // @dynamic variationIndexArray;
@property(retain, nonatomic) TAGPBMutableArray *weightsVectorArray; // @dynamic weightsVectorArray;

@end

@interface TAGPGaServerSideExperimentWeightBucket : TAGPBGeneratedMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(retain, nonatomic) TAGPBMutableArray *combinationWeightSumArray; // @dynamic combinationWeightSumArray;
@property(nonatomic) _Bool hasCombinationWeightSumArray; // @dynamic hasCombinationWeightSumArray;

@end

@interface TAGPGaServerSideExperimentSupplemental : TAGPBGeneratedMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(retain, nonatomic) TAGPBMutableArray *combinationArray; // @dynamic combinationArray;
@property(nonatomic) _Bool enabled; // @dynamic enabled;
@property(retain, nonatomic) NSString *experimentId; // @dynamic experimentId;
@property(retain, nonatomic) NSString *experimentKey; // @dynamic experimentKey;
@property(nonatomic) _Bool hasCombinationArray; // @dynamic hasCombinationArray;
@property(nonatomic) _Bool hasEnabled; // @dynamic hasEnabled;
@property(nonatomic) _Bool hasExperimentId; // @dynamic hasExperimentId;
@property(nonatomic) _Bool hasExperimentKey; // @dynamic hasExperimentKey;
@property(nonatomic) _Bool hasInclusionProbability; // @dynamic hasInclusionProbability;
@property(nonatomic) _Bool hasLastUpdateTimeMs; // @dynamic hasLastUpdateTimeMs;
@property(nonatomic) _Bool hasPlannedExperimentEndTimeMs; // @dynamic hasPlannedExperimentEndTimeMs;
@property(nonatomic) _Bool hasWeightBucketArray; // @dynamic hasWeightBucketArray;
@property(nonatomic) _Bool hasWeightBucketMassSumArray; // @dynamic hasWeightBucketMassSumArray;
@property(nonatomic) double inclusionProbability; // @dynamic inclusionProbability;
@property(nonatomic) long long lastUpdateTimeMs; // @dynamic lastUpdateTimeMs;
@property(nonatomic) long long plannedExperimentEndTimeMs; // @dynamic plannedExperimentEndTimeMs;
@property(retain, nonatomic) TAGPBMutableArray *weightBucketArray; // @dynamic weightBucketArray;
@property(retain, nonatomic) TAGPBMutableArray *weightBucketMassSumArray; // @dynamic weightBucketMassSumArray;

@end

@interface TAGPPublicIdMapping : TAGPBGeneratedMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) _Bool hasId_pArray; // @dynamic hasId_pArray;
@property(nonatomic) _Bool hasPreviewAuthCode; // @dynamic hasPreviewAuthCode;
@property(retain, nonatomic) TAGPBMutableArray *id_pArray; // @dynamic id_pArray;
@property(retain, nonatomic) NSString *previewAuthCode; // @dynamic previewAuthCode;

@end

@interface TAGPSupplemental : TAGPBGeneratedMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(retain, nonatomic) TAGPGaExperimentSupplemental *experimentSupplemental; // @dynamic experimentSupplemental;
@property(nonatomic) _Bool hasExperimentSupplemental; // @dynamic hasExperimentSupplemental;
@property(nonatomic) _Bool hasName; // @dynamic hasName;
@property(nonatomic) _Bool hasServerSideExperimentSupplemental; // @dynamic hasServerSideExperimentSupplemental;
@property(nonatomic) _Bool hasSettings; // @dynamic hasSettings;
@property(nonatomic) _Bool hasValue; // @dynamic hasValue;
@property(retain, nonatomic) NSString *name; // @dynamic name;
@property(retain, nonatomic) TAGPGaServerSideExperimentSupplemental *serverSideExperimentSupplemental; // @dynamic serverSideExperimentSupplemental;
@property(retain, nonatomic) TAGPBSettings *settings; // @dynamic settings;
@property(retain, nonatomic) TAGPValue *value; // @dynamic value;

@end

@interface TAGPSupplementedResource : TAGPBGeneratedMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(retain, nonatomic) NSString *fingerprint; // @dynamic fingerprint;
@property(nonatomic) _Bool hasFingerprint; // @dynamic hasFingerprint;
@property(nonatomic) _Bool hasPublicIdMapping; // @dynamic hasPublicIdMapping;
@property(nonatomic) _Bool hasResource; // @dynamic hasResource;
@property(nonatomic) _Bool hasSupplementalArray; // @dynamic hasSupplementalArray;
@property(retain, nonatomic) TAGPPublicIdMapping *publicIdMapping; // @dynamic publicIdMapping;
@property(retain, nonatomic) TAGPResource *resource; // @dynamic resource;
@property(retain, nonatomic) TAGPBMutableArray *supplementalArray; // @dynamic supplementalArray;

@end

@interface TAGPBSettingsRoot : TAGPBRootObject
{
}

+ (void)load;
+ (id)extensionRegistry;

@end

@interface TAGPBProductTypeEnumDescriptor : TAGPBGeneratedEnumDescriptor
{
}

+ (id)enumDescriptor;

@end

@interface TAGPBAdmobSettings : TAGPBGeneratedMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) _Bool collectAdvertisingIdentifiers; // @dynamic collectAdvertisingIdentifiers;
@property(nonatomic) _Bool enableAutoEventTracking; // @dynamic enableAutoEventTracking;
@property(nonatomic) _Bool enableAutoScreenViewTracking; // @dynamic enableAutoScreenViewTracking;
@property(nonatomic) _Bool hasCollectAdvertisingIdentifiers; // @dynamic hasCollectAdvertisingIdentifiers;
@property(nonatomic) _Bool hasEnableAutoEventTracking; // @dynamic hasEnableAutoEventTracking;
@property(nonatomic) _Bool hasEnableAutoScreenViewTracking; // @dynamic hasEnableAutoScreenViewTracking;
@property(nonatomic) _Bool hasUaTrackingId; // @dynamic hasUaTrackingId;
@property(retain, nonatomic) NSString *uaTrackingId; // @dynamic uaTrackingId;

@end

@interface TAGPBUASettings : TAGPBGeneratedMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) _Bool collectAdvertisingIdentifiers; // @dynamic collectAdvertisingIdentifiers;
@property(nonatomic) _Bool enableAutoEventTracking; // @dynamic enableAutoEventTracking;
@property(nonatomic) _Bool hasCollectAdvertisingIdentifiers; // @dynamic hasCollectAdvertisingIdentifiers;
@property(nonatomic) _Bool hasEnableAutoEventTracking; // @dynamic hasEnableAutoEventTracking;

@end

@interface TAGPBSettings : TAGPBGeneratedMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(retain, nonatomic) TAGPBAdmobSettings *admobSettings; // @dynamic admobSettings;
@property(nonatomic) _Bool hasAdmobSettings; // @dynamic hasAdmobSettings;
@property(nonatomic) _Bool hasUaSettings; // @dynamic hasUaSettings;
@property(retain, nonatomic) TAGPBUASettings *uaSettings; // @dynamic uaSettings;

@end

@interface TAGPBSettingsDescriptor : TAGPBGeneratedMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(retain, nonatomic) NSString *fingerprint; // @dynamic fingerprint;
@property(nonatomic) _Bool hasFingerprint; // @dynamic hasFingerprint;
@property(nonatomic) _Bool hasSettings; // @dynamic hasSettings;
@property(nonatomic) _Bool hasSettingsId; // @dynamic hasSettingsId;
@property(retain, nonatomic) TAGPBSettings *settings; // @dynamic settings;
@property(retain, nonatomic) NSString *settingsId; // @dynamic settingsId;

@end

@interface TAGPResourcewithmetadataRoot : TAGPBRootObject
{
}

+ (void)load;
+ (id)extensionRegistry;

@end

@interface TAGPResourceWithMetadata : TAGPBGeneratedMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) _Bool hasResource; // @dynamic hasResource;
@property(nonatomic) _Bool hasSupplementedResource; // @dynamic hasSupplementedResource;
@property(nonatomic) _Bool hasTimeStamp; // @dynamic hasTimeStamp;
@property(retain, nonatomic) TAGPResource *resource; // @dynamic resource;
@property(retain, nonatomic) TAGPSupplementedResource *supplementedResource; // @dynamic supplementedResource;
@property(nonatomic) long long timeStamp; // @dynamic timeStamp;

@end

@interface TAGFunctionCallTagHandlerAdapter : NSObject <TAGCustomEvaluator>
{
    TAGContainer *_container;
}

@property(retain) TAGContainer *container; // @synthesize container=_container;
- (void).cxx_destruct;
- (id)evaluate:(id)arg1 parameters:(id)arg2;
- (id)initWithContainer:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TAGFunctionCallMacroHandlerAdapter : NSObject <TAGCustomEvaluator>
{
    TAGContainer *_container;
}

@property(retain) TAGContainer *container; // @synthesize container=_container;
- (void).cxx_destruct;
- (id)evaluate:(id)arg1 parameters:(id)arg2;
- (id)initWithContainer:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TAGDiskLoadCallback : NSObject <TAGLoadCallback>
{
    id <TAGContainerCallback> _callback;
    TAGContainer *_container;
}

@property(retain) TAGContainer *container; // @synthesize container=_container;
@property(retain) id <TAGContainerCallback> callback; // @synthesize callback=_callback;
- (void).cxx_destruct;
- (void)close;
- (int)failureToRefreshFailure:(long long)arg1;
- (void)onFailure:(long long)arg1;
- (void)onSuccess:(id)arg1;
- (void)startLoad;
- (id)initWithCallback:(id)arg1 container:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TAGNetworkLoadCallback : NSObject <TAGLoadCallback>
{
    id <TAGContainerCallback> _callback;
    TAGContainer *_container;
}

@property(retain) TAGContainer *container; // @synthesize container=_container;
@property(retain) id <TAGContainerCallback> callback; // @synthesize callback=_callback;
- (void).cxx_destruct;
- (void)close;
- (int)failureToRefreshFailure:(long long)arg1;
- (void)onFailure:(long long)arg1;
- (void)onSuccess:(id)arg1;
- (void)startLoad;
- (id)initWithCallback:(id)arg1 container:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TAGContainer : NSObject
{
    NSString *_ctfeServerAddress;
    _Bool _diskLoadFinished;
    int _resourceFormatVersion;
    NSString *_containerId;
    double _lastRefreshTime;
    id <TAGResourceStorage> _resourceStorage;
    TAGManager *_tagManager;
    NSString *_ctfeUrlPathAndQuery;
    unsigned long long _numTokens;
    TAGPSupplementedResource *_lastLoadedSupplementedResource;
    TAGNetworkLoadCallback *_networkLoadCallback;
    TAGDiskLoadCallback *_diskLoadCallback;
    TAGResourceLoaderScheduler *_networkLoadScheduler;
    TAGRuntime *_runtime;
    NSMutableDictionary *_functionCallTagHandlers;
    NSMutableDictionary *_functionCallMacroHandlers;
    NSString *_resourceVersion;
    double _lastRefreshMethodCalledTime;
}

+ (int)maximumTokenCount;
+ (double)minimumRefreshPeriodInBurstMode;
+ (double)minimumRefreshPeriod;
+ (double)refreshPeriodOnFailure;
+ (double)refreshPeriodOnSuccess;
@property double lastRefreshMethodCalledTime; // @synthesize lastRefreshMethodCalledTime=_lastRefreshMethodCalledTime;
@property int resourceFormatVersion; // @synthesize resourceFormatVersion=_resourceFormatVersion;
@property(copy) NSString *resourceVersion; // @synthesize resourceVersion=_resourceVersion;
@property _Bool diskLoadFinished; // @synthesize diskLoadFinished=_diskLoadFinished;
@property(retain) NSMutableDictionary *functionCallMacroHandlers; // @synthesize functionCallMacroHandlers=_functionCallMacroHandlers;
@property(retain) NSMutableDictionary *functionCallTagHandlers; // @synthesize functionCallTagHandlers=_functionCallTagHandlers;
@property(retain) TAGRuntime *runtime; // @synthesize runtime=_runtime;
@property(retain) TAGResourceLoaderScheduler *networkLoadScheduler; // @synthesize networkLoadScheduler=_networkLoadScheduler;
@property(retain) TAGDiskLoadCallback *diskLoadCallback; // @synthesize diskLoadCallback=_diskLoadCallback;
@property(retain) TAGNetworkLoadCallback *networkLoadCallback; // @synthesize networkLoadCallback=_networkLoadCallback;
@property(retain) TAGPSupplementedResource *lastLoadedSupplementedResource; // @synthesize lastLoadedSupplementedResource=_lastLoadedSupplementedResource;
@property unsigned long long numTokens; // @synthesize numTokens=_numTokens;
@property(copy, nonatomic) NSString *ctfeUrlPathAndQuery; // @synthesize ctfeUrlPathAndQuery=_ctfeUrlPathAndQuery;
@property(retain) TAGManager *tagManager; // @synthesize tagManager=_tagManager;
@property(retain) id <TAGResourceStorage> resourceStorage; // @synthesize resourceStorage=_resourceStorage;
@property double lastRefreshTime; // @synthesize lastRefreshTime=_lastRefreshTime;
@property(readonly, copy, nonatomic) NSString *containerId; // @synthesize containerId=_containerId;
- (void).cxx_destruct;
- (_Bool)useAvailableTokenWithCurrentTime:(double)arg1;
- (_Bool)isDefaultContainerRefreshMode;
@property(copy, nonatomic) NSString *ctfeServerAddress;
- (void)createInitialContainer;
- (double)currentTimeInMilliseconds;
- (void)setupEvaluatorsWithExpandedResource:(id)arg1;
- (void)setSupplementals:(id)arg1;
- (void)setupEvaluatorsWithResource:(id)arg1;
- (void)saveResourceToDisk:(id)arg1;
- (void)loadAfterDelay:(double)arg1;
- (void)loadWithCallback:(id)arg1 resourceLoaderScheduler:(id)arg2;
- (void)loadWithCallback:(id)arg1;
- (void)evaluateTags:(id)arg1;
- (id)functionCallMacroHandlerForMacro:(id)arg1;
- (id)functionCallTagHandlerForTag:(id)arg1;
- (void)registerFunctionCallMacroHandler:(id)arg1 forMacro:(id)arg2;
- (void)registerFunctionCallTagHandler:(id)arg1 forTag:(id)arg2;
- (_Bool)isDefault;
- (void)close;
- (void)refresh;
- (id)stringForKey:(id)arg1;
- (long long)int64ForKey:(id)arg1;
- (double)doubleForKey:(id)arg1;
- (_Bool)booleanForKey:(id)arg1;
- (id)initWithId:(id)arg1 tagManager:(id)arg2;
- (id)initWithId:(id)arg1 tagManager:(id)arg2 resourceStorage:(id)arg3;

@end

@interface TAGWaitForNonDefaultRefresh : NSObject <TAGContainerCallback>
{
    TAGContainerOpener *_containerOpener;
}

@property(retain) TAGContainerOpener *containerOpener; // @synthesize containerOpener=_containerOpener;
- (void).cxx_destruct;
- (void)containerRefreshFailure:(id)arg1 failure:(int)arg2 refreshType:(int)arg3;
- (void)containerRefreshSuccess:(id)arg1 refreshType:(int)arg2;
- (void)containerRefreshBegin:(id)arg1 refreshType:(int)arg2;
- (id)initWithContainerOpener:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TAGWaitForFresh : NSObject <TAGContainerCallback>
{
    double _oldestTimeToBeFresh;
    TAGContainerOpener *_containerOpener;
}

@property(retain) TAGContainerOpener *containerOpener; // @synthesize containerOpener=_containerOpener;
@property double oldestTimeToBeFresh; // @synthesize oldestTimeToBeFresh=_oldestTimeToBeFresh;
- (void).cxx_destruct;
- (_Bool)isFresh;
- (void)containerRefreshFailure:(id)arg1 failure:(int)arg2 refreshType:(int)arg3;
- (void)containerRefreshSuccess:(id)arg1 refreshType:(int)arg2;
- (void)containerRefreshBegin:(id)arg1 refreshType:(int)arg2;
- (id)initWithContainerOpener:(id)arg1 oldestTimeToBeFresh:(double)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TAGContainerFutureImpl : NSObject <TAGContainerFuture>
{
    TAGContainer *_container;
}

@property(retain) TAGContainer *container; // @synthesize container=_container;
- (void).cxx_destruct;
- (_Bool)isDone;
- (id)get;

@end

@interface TAGFutureNotifier : NSObject <TAGContainerOpenerNotifier>
{
    TAGContainerFutureImpl *_future;
}

@property(retain) TAGContainerFutureImpl *future; // @synthesize future=_future;
- (void).cxx_destruct;
- (void)containerAvailable:(id)arg1;

@end

@interface TAGContainerOpener : NSObject
{
    _Bool _haveNotified;
    TAGManager *_tagManager;
    NSString *_containerId;
    double _timeout;
    id <TAGContainerOpenerNotifier> _notifier;
    TAGContainer *_container;
}

+ (void)openContainerWithId:(id)arg1 tagManager:(id)arg2 openType:(int)arg3 timeout:(double *)arg4 notifier:(id)arg5;
+ (id)openContainerWithId:(id)arg1 tagManager:(id)arg2 openType:(int)arg3 timeout:(double *)arg4;
+ (double)defaultTimeout;
+ (void)initialize;
@property(retain) TAGContainer *container; // @synthesize container=_container;
@property(retain, nonatomic) id <TAGContainerOpenerNotifier> notifier; // @synthesize notifier=_notifier;
@property _Bool haveNotified; // @synthesize haveNotified=_haveNotified;
@property(nonatomic) double timeout; // @synthesize timeout=_timeout;
@property(copy, nonatomic) NSString *containerId; // @synthesize containerId=_containerId;
@property(retain, nonatomic) TAGManager *tagManager; // @synthesize tagManager=_tagManager;
- (void).cxx_destruct;
- (void)handleTimer:(id)arg1;
- (void)callNotifiers:(id)arg1;
- (void)openWithRefreshType:(int)arg1;
- (id)initWithContainerId:(id)arg1 tagManager:(id)arg2 timeout:(double *)arg3 notifier:(id)arg4;

@end

@interface TAGManagerListener : NSObject <TAGDataLayerListener>
{
    TAGManager *_tagManager;
}

@property(retain, nonatomic) TAGManager *tagManager; // @synthesize tagManager=_tagManager;
- (void).cxx_destruct;
- (void)changed:(id)arg1;
- (id)initWithTagManager:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TAGManager : NSObject
{
    NSString *_ctfeServerAddress;
    int _refreshMode;
    TAGDataLayer *_dataLayer;
    NSMutableDictionary *_containers;
}

+ (void)notCalled;
+ (void)clearManagerInstance;
+ (id)instance;
@property(retain) NSMutableDictionary *containers; // @synthesize containers=_containers;
@property(readonly, nonatomic) TAGDataLayer *dataLayer; // @synthesize dataLayer=_dataLayer;
@property(nonatomic) int refreshMode; // @synthesize refreshMode=_refreshMode;
- (void).cxx_destruct;
- (void)dispatchWithCompletionHandler:(CDUnknownBlockType)arg1;
@property(nonatomic) double dispatchInterval;
- (void)dispatch;
- (void)refreshTagsInAllContainers:(id)arg1;
@property(copy) NSString *ctfeServerAddress;
- (id)containerById:(id)arg1;
- (void)removeContainerById:(id)arg1;
@property(retain, nonatomic) id <TAGLogger> logger;
- (_Bool)previewWithUrl:(id)arg1;
- (id)getContainerById:(id)arg1;
- (id)openContainerById:(id)arg1 callback:(id)arg2;
- (id)initWithSameInstance:(_Bool)arg1;
- (id)init;

@end

@interface TAGPreviewManager : NSObject
{
    long long _previewMode;
    NSString *_ctfeUrlPath;
    NSString *_containerId;
}

+ (id)instance;
@property(retain) NSString *containerId; // @synthesize containerId=_containerId;
@property(retain) NSString *ctfeUrlPath; // @synthesize ctfeUrlPath=_ctfeUrlPath;
@property long long previewMode; // @synthesize previewMode=_previewMode;
- (void).cxx_destruct;
- (id)containerIdForQuery:(id)arg1;
- (void)clear;
- (_Bool)isPreviewingContainer:(id)arg1;
- (_Bool)generatePreviewDataForUrl:(id)arg1;
- (id)init;

@end

@interface TAGResourceLoader : NSObject <NSURLConnectionDataDelegate>
{
    id <TAGLoadCallback> _callback;
    NSString *_ctfeServerAddress;
    NSString *_ctfeUrlPathAndQuery;
    NSString *_previousVersion;
    NSURLConnection *_connection;
    NSMutableData *_responseData;
    long long _statusCode;
    NSString *_containerId;
    NSString *_defaultCtfeUrlPathAndQuery;
}

+ (id)sdkVersion;
@property(copy, nonatomic) NSString *defaultCtfeUrlPathAndQuery; // @synthesize defaultCtfeUrlPathAndQuery=_defaultCtfeUrlPathAndQuery;
@property(copy, nonatomic) NSString *containerId; // @synthesize containerId=_containerId;
@property(nonatomic) long long statusCode; // @synthesize statusCode=_statusCode;
@property(retain, nonatomic) NSMutableData *responseData; // @synthesize responseData=_responseData;
@property(retain, nonatomic) NSURLConnection *connection; // @synthesize connection=_connection;
@property(copy) NSString *previousVersion; // @synthesize previousVersion=_previousVersion;
@property(copy, nonatomic) NSString *ctfeUrlPathAndQuery; // @synthesize ctfeUrlPathAndQuery=_ctfeUrlPathAndQuery;
@property(copy) NSString *ctfeServerAddress; // @synthesize ctfeServerAddress=_ctfeServerAddress;
@property(retain, nonatomic) id <TAGLoadCallback> callback; // @synthesize callback=_callback;
- (void).cxx_destruct;
@property(readonly, copy, nonatomic) NSString *ctfeUrl;
- (void)loadResourceAsync;
- (void)connectionDidFinishLoading:(id)arg1;
- (void)connection:(id)arg1 didFailWithError:(id)arg2;
- (void)connection:(id)arg1 didReceiveData:(id)arg2;
- (void)connection:(id)arg1 didReceiveResponse:(id)arg2;
- (id)initWithContainerId:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TAGResourceLoaderScheduler : NSObject
{
    NSString *_containerId;
    id <TAGLoadCallback> _loadCallback;
    NSString *_ctfeServerAddress;
    NSString *_ctfeUrlPathAndQuery;
    NSString *_previousVersion;
    NSTimer *_timer;
}

@property(retain) NSTimer *timer; // @synthesize timer=_timer;
@property(copy) NSString *previousVersion; // @synthesize previousVersion=_previousVersion;
@property(copy) NSString *ctfeUrlPathAndQuery; // @synthesize ctfeUrlPathAndQuery=_ctfeUrlPathAndQuery;
@property(copy) NSString *ctfeServerAddress; // @synthesize ctfeServerAddress=_ctfeServerAddress;
@property(retain) id <TAGLoadCallback> loadCallback; // @synthesize loadCallback=_loadCallback;
@property(readonly, copy) NSString *containerId; // @synthesize containerId=_containerId;
- (void).cxx_destruct;
- (void)cancelTimer;
- (void)scheduleTimerWithDelay:(double)arg1;
- (void)requestResource:(id)arg1;
- (void)loadAfterDelay:(double)arg1 withPreviousVersion:(id)arg2;
- (void)close;
- (id)initWithContainerId:(id)arg1;

@end

@interface TAGResourceStorageImpl : NSObject <TAGResourceStorage>
{
    id <TAGLoadCallback> _loadCallback;
    NSString *_containerId;
}

@property(retain, nonatomic) NSString *containerId; // @synthesize containerId=_containerId;
@property(retain, nonatomic) id <TAGLoadCallback> loadCallback; // @synthesize loadCallback=_loadCallback;
- (void).cxx_destruct;
- (id)mainBundle;
- (id)dataPath;
- (id)resourceFilename;
- (_Bool)saveResourceToDisk:(id)arg1;
- (id)loadExpandedResourceFromPlistFile:(id)arg1;
- (id)loadExpandedResourceFromJsonFile:(id)arg1;
- (id)loadResourceFromContainerFile:(id)arg1;
- (void)saveResourceToDiskInBackground:(id)arg1 resultBlock:(CDUnknownBlockType)arg2;
- (void)saveResourceToDiskInBackground:(id)arg1;
- (id)loadResourceFromDisk;
- (void)loadResourceFromDiskInBackground;
- (id)initWithContainerId:(id)arg1;

@end

@interface TAGTypeOrFailure : NSObject
{
    id _type;
    long long _failure;
}

@property(readonly, nonatomic) long long failure; // @synthesize failure=_failure;
@property(readonly, nonatomic) id type; // @synthesize type=_type;
- (void).cxx_destruct;
- (id)initWithFailure:(long long)arg1;
- (id)initWithType:(id)arg1;

@end

@interface TAGAdwordsClickReferrerListener : NSObject <TAGDataLayerListener>
{
}

- (void)changed:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TAGAsyncUtil : NSObject
{
}

+ (void)invokeAsync:(CDUnknownBlockType)arg1 resultBlock:(CDUnknownBlockType)arg2;

@end

@interface TAGBase16 : NSObject
{
}

+ (unsigned char)byteFromChar:(BOOL)arg1;
+ (id)decode:(id)arg1;
+ (id)encode:(id)arg1;

@end

@interface TAGBase64Encoder : NSData
{
}

+ (id)decodeWebSafe:(id)arg1 noPadding:(_Bool)arg2;
+ (id)decode:(id)arg1 noPadding:(_Bool)arg2;
+ (id)encodeWebSafe:(id)arg1 noPadding:(_Bool)arg2;
+ (id)encode:(id)arg1 noPadding:(_Bool)arg2;

@end

@interface TAGBoolean : NSObject <NSCopying, NSCoding>
{
    _Bool _boolValue;
}

+ (id)no;
+ (id)yes;
+ (id)booleanWithString:(id)arg1;
+ (id)booleanWithBool:(_Bool)arg1;
+ (void)initialize;
@property(nonatomic) _Bool boolValue; // @synthesize boolValue=_boolValue;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithBool:(_Bool)arg1;

@end

@interface TAGClickReferrerUtil : NSObject
{
}

+ (void)clearCache;
+ (id)clickReferrerForConversionId:(id)arg1 component:(id)arg2;
+ (id)parseComponentsFromQueryParameters:(id)arg1;
+ (id)extractComponent:(id)arg1 fromReferrer:(id)arg2;
+ (void)addClickReferrer:(id)arg1;
+ (void)initialize;

@end

@interface TAGCustomFunctionCall : TAGFunctionCallImplementation
{
    id <TAGCustomEvaluator> _functionCallEvaluator;
}

+ (id)additionalParametersKey;
+ (id)functionCallNameKey;
+ (id)functionId;
@property(retain, nonatomic) id <TAGCustomEvaluator> functionCallEvaluator; // @synthesize functionCallEvaluator=_functionCallEvaluator;
- (void).cxx_destruct;
- (id)evaluate:(id)arg1;
- (_Bool)isCacheable;
- (id)initWithEvaluator:(id)arg1;

@end

@interface TAGNoopDataLayerPersistentStore : NSObject <TAGDataLayerPersistentStore>
{
}

- (void)clearKeysWithPrefix:(id)arg1;
- (void)loadSaved:(id)arg1;
- (void)saveKeyValues:(id)arg1 lifetimeInMillis:(unsigned long long)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TAGDataLayerCallback : NSObject <TAGDataLayerPersistentStoreCallback>
{
    TAGDataLayer *_dataLayer;
}

@property(readonly) TAGDataLayer *dataLayer; // @synthesize dataLayer=_dataLayer;
- (void).cxx_destruct;
- (void)onKeyValuesLoaded:(id)arg1;
- (id)initWithDataLayer:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TAGDataLayer : NSObject
{
    _Bool _persistentStoreLoaded;
    NSDictionary *_dataLayer;
    NSMutableSet *_listeners;
    NSMutableDictionary *_model;
    NSRecursiveLock *_pushLock;
    NSMutableArray *_updateQueue;
    long long _pushDepth;
    id <TAGDataLayerPersistentStore> _persistentStore;
    NSCondition *_persistentStoreLoadingCondition;
    NSArray *_lifetimeKeyComponents;
    NSRegularExpression *_lifetimePattern;
}

+ (void)initialize;
@property(readonly) NSRegularExpression *lifetimePattern; // @synthesize lifetimePattern=_lifetimePattern;
@property(readonly) NSArray *lifetimeKeyComponents; // @synthesize lifetimeKeyComponents=_lifetimeKeyComponents;
@property _Bool persistentStoreLoaded; // @synthesize persistentStoreLoaded=_persistentStoreLoaded;
@property(readonly) NSCondition *persistentStoreLoadingCondition; // @synthesize persistentStoreLoadingCondition=_persistentStoreLoadingCondition;
@property(readonly) id <TAGDataLayerPersistentStore> persistentStore; // @synthesize persistentStore=_persistentStore;
@property long long pushDepth; // @synthesize pushDepth=_pushDepth;
@property(retain) NSMutableArray *updateQueue; // @synthesize updateQueue=_updateQueue;
@property(retain) NSRecursiveLock *pushLock; // @synthesize pushLock=_pushLock;
@property(retain) NSMutableDictionary *model; // @synthesize model=_model;
@property(retain) NSMutableSet *listeners; // @synthesize listeners=_listeners;
@property(readonly, nonatomic) NSDictionary *dataLayer; // @synthesize dataLayer=_dataLayer;
- (void).cxx_destruct;
- (id)expandKey:(id)arg1 value:(id)arg2;
- (void)mergeList:(id)arg1 intoList:(id)arg2;
- (void)mergeMap:(id)arg1 intoMap:(id)arg2;
- (void)notifyListeners:(id)arg1;
- (void)unregisterListener:(id)arg1;
- (void)registerListener:(id)arg1;
- (void)processUpdate:(id)arg1;
- (id)parseLifetime:(id)arg1;
- (id)getLifetimeObject:(id)arg1;
- (id)getLifetimeValue:(id)arg1;
- (void)flattenMapHelper:(id)arg1 keyPrefix:(id)arg2 accum:(id)arg3;
- (id)flattenMap:(id)arg1;
- (void)clearPersistentKeysWithPrefix:(id)arg1;
- (void)savePersistentlyIfNeeded:(id)arg1;
- (void)processQueuedUpdates;
- (void)pushWithoutWaitingForSaved:(id)arg1;
- (void)push:(id)arg1;
- (id)get:(id)arg1;
- (void)pushValue:(id)arg1 forKey:(id)arg2;
- (void)onKeyValuesLoaded:(id)arg1;
- (void)loadSavedMaps;
- (id)init;
- (id)initWithPersistentStore:(id)arg1;

@end

@interface TAGKeyValue : NSObject <NSCopying>
{
    NSString *_key;
    NSObject *_value;
}

@property(readonly, retain, nonatomic) NSObject *value; // @synthesize value=_value;
@property(readonly, copy, nonatomic) NSString *key; // @synthesize key=_key;
- (void).cxx_destruct;
- (id)description;
- (id)initWithKey:(id)arg1 value:(id)arg2;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;

@end

@interface TAGKeyAndSerialized : NSObject
{
    NSString *_key;
    NSData *_serialized;
}

@property(readonly) NSData *serialized; // @synthesize serialized=_serialized;
@property(readonly) NSString *key; // @synthesize key=_key;
- (void).cxx_destruct;
- (id)description;
- (id)initWithKey:(id)arg1 serialized:(id)arg2;

@end

@interface TAGDataLayerPersistentStoreImpl : NSObject <TAGDataLayerPersistentStore>
{
    NSString *_databaseName;
    unsigned long long _maxNumStoredItems;
    NSOperationQueue *_operationQueue;
    struct sqlite3 *_database;
    struct sqlite3_stmt *_insertAnEntryStmt;
    struct sqlite3_stmt *_queryNumberEntriesStmt;
    struct sqlite3_stmt *_queryAllEntriesStmt;
    struct sqlite3_stmt *_queryEntryIdsStmt;
    struct sqlite3_stmt *_deleteOlderThanStmt;
}

@property struct sqlite3_stmt *deleteOlderThanStmt; // @synthesize deleteOlderThanStmt=_deleteOlderThanStmt;
@property struct sqlite3_stmt *queryEntryIdsStmt; // @synthesize queryEntryIdsStmt=_queryEntryIdsStmt;
@property struct sqlite3_stmt *queryAllEntriesStmt; // @synthesize queryAllEntriesStmt=_queryAllEntriesStmt;
@property struct sqlite3_stmt *queryNumberEntriesStmt; // @synthesize queryNumberEntriesStmt=_queryNumberEntriesStmt;
@property struct sqlite3_stmt *insertAnEntryStmt; // @synthesize insertAnEntryStmt=_insertAnEntryStmt;
@property struct sqlite3 *database; // @synthesize database=_database;
@property(readonly) NSOperationQueue *operationQueue; // @synthesize operationQueue=_operationQueue;
@property unsigned long long maxNumStoredItems; // @synthesize maxNumStoredItems=_maxNumStoredItems;
@property(readonly) NSString *databaseName; // @synthesize databaseName=_databaseName;
- (void).cxx_destruct;
- (double)currentTimeInMilliseconds;
- (void)closeDatabase;
- (_Bool)openDatabaseAndInitStatements;
- (struct sqlite3_stmt *)prepareSql:(id)arg1 description:(id)arg2;
- (_Bool)tablePresent:(id)arg1;
- (void)deleteEntriesOlderThan:(unsigned long long)arg1;
- (id)questionMarks:(unsigned long long)arg1;
- (unsigned long long)numStoredEntries;
- (id)peekEntryIds:(unsigned long long)arg1;
- (void)deleteEntries:(id)arg1;
- (void)makeRoomForEntries:(unsigned long long)arg1;
- (void)writeEntriesToDatabase:(id)arg1 expireTime:(unsigned long long)arg2;
- (id)loadSerialized;
- (id)serialize:(id)arg1;
- (id)unserialize:(id)arg1;
- (id)serializeValues:(id)arg1;
- (id)unserializeValues:(id)arg1;
- (void)clearKeysWithPrefixSingleThreaded:(id)arg1;
- (void)saveSingleThreaded:(id)arg1 lifetimeInMillis:(unsigned long long)arg2;
- (id)loadSingleThreaded;
- (void)clearKeysWithPrefix:(id)arg1;
- (void)loadSaved:(id)arg1;
- (void)saveKeyValues:(id)arg1 lifetimeInMillis:(unsigned long long)arg2;
- (void)dealloc;
- (id)initWithDatabaseName:(id)arg1 maxNumStoredItems:(unsigned int)arg2 operationQueue:(id)arg3;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TAGDefaultLogger : NSObject <TAGLogger>
{
    int _logLevel;
}

@property int logLevel; // @synthesize logLevel=_logLevel;
- (void)verbose:(id)arg1;
- (void)debug:(id)arg1;
- (void)info:(id)arg1;
- (void)warning:(id)arg1;
- (void)error:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TAGExperimentMacroHelper : NSObject
{
}

+ (id)valueToMap:(id)arg1;
+ (void)setRandomValues:(id)arg1 expSupplemental:(id)arg2;
+ (void)pushValues:(id)arg1 expSupplemental:(id)arg2;
+ (void)clearKeys:(id)arg1 expSupplemental:(id)arg2;
+ (void)handleExperimentSupplemental:(id)arg1 supplemental:(id)arg2;

@end

@interface TAGFunctionCallImplementation : NSObject
{
    NSString *_instanceFunctionId;
    NSSet *_requiredKeys;
}

+ (id)notDefaultMacroKey;
+ (id)instanceNameKey;
+ (id)functionKey;
@property(readonly, retain, nonatomic) NSSet *requiredKeys; // @synthesize requiredKeys=_requiredKeys;
@property(readonly, copy, nonatomic) NSString *instanceFunctionId; // @synthesize instanceFunctionId=_instanceFunctionId;
- (void).cxx_destruct;
- (_Bool)hasRequiredKeys:(id)arg1;
- (id)evaluate:(id)arg1;
- (_Bool)isCacheable;
- (id)initWithFunctionId:(id)arg1 requiredKeys:(id)arg2;
- (id)init;

@end

@interface TAGLog : NSObject
{
}

+ (int)logLevel;
+ (id)logger;
+ (void)setLogger:(id)arg1;
+ (void)verbose:(id)arg1;
+ (void)debug:(id)arg1;
+ (void)info:(id)arg1;
+ (void)warning:(id)arg1;
+ (void)error:(id)arg1;
+ (void)initialize;

@end

@interface TAGObjectAndStatic : NSObject
{
    _Bool _isStatic;
    NSObject *_object;
}

@property(readonly, retain, nonatomic) NSObject *object; // @synthesize object=_object;
@property(readonly, nonatomic) _Bool isStatic; // @synthesize isStatic=_isStatic;
- (void).cxx_destruct;
- (id)initWithObject:(id)arg1 isStatic:(_Bool)arg2;

@end

@interface TAGBooleanAndStatic : TAGObjectAndStatic
{
}

+ (id)booleanWithBool:(_Bool)arg1 isStatic:(_Bool)arg2;
+ (id)booleanWithBoolean:(id)arg1 isStatic:(_Bool)arg2;
- (_Bool)boolValue;
- (id)initWithBoolean:(id)arg1 isStatic:(_Bool)arg2;

@end

@interface TAGPValueAndStatic : TAGObjectAndStatic
{
}

+ (id)valueWithValue:(id)arg1 isStatic:(_Bool)arg2;
@property(readonly, retain, nonatomic) TAGPValue *value;
- (id)initWithValue:(id)arg1 isStatic:(_Bool)arg2;

@end

@interface TAGSetAndStatic : TAGObjectAndStatic
{
}

+ (id)setWithSet:(id)arg1 isStatic:(_Bool)arg2;
- (id)set;
- (id)initWithSet:(id)arg1 isStatic:(_Bool)arg2;

@end

@interface TAGPropertyListUtil : NSObject
{
}

+ (id)plistFilePath:(id)arg1;
+ (_Bool)writePropertyList:(id)arg1 withData:(id)arg2;
+ (void)writePropertyListAsync:(id)arg1 withData:(id)arg2;
+ (_Bool)removePropertyList:(id)arg1;
+ (id)readPropertyList:(id)arg1;

@end

@interface TAGExpandedFunctionCall : NSObject <NSCopying>
{
    TAGPValue *_pushAfterEvaluate;
    NSMutableDictionary *_propertiesMap;
}

+ (id)notDefaultMacroKey;
+ (id)functionKey;
+ (id)instanceNameKey;
+ (id)builder;
@property(retain, nonatomic) NSMutableDictionary *propertiesMap; // @synthesize propertiesMap=_propertiesMap;
@property(retain, nonatomic) TAGPValue *pushAfterEvaluate; // @synthesize pushAfterEvaluate=_pushAfterEvaluate;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)description;
@property(readonly, retain, nonatomic) NSDictionary *properties;
- (void)updateCacheablePropertyWithValue:(id)arg1 forKey:(id)arg2;
- (id)propertyForKey:(id)arg1;
- (int)approximateByteSize;
- (id)initWithPropertiesMap:(id)arg1 pushAfterEvaluate:(id)arg2;

@end

@interface TAGExpandedFunctionCallBuilder : NSObject
{
    NSMutableDictionary *_propertiesMap;
    TAGPValue *_pushAfterEvaluate;
}

@property(retain, nonatomic) TAGPValue *pushAfterEvaluate; // @synthesize pushAfterEvaluate=_pushAfterEvaluate;
@property(retain, nonatomic) NSMutableDictionary *propertiesMap; // @synthesize propertiesMap=_propertiesMap;
- (void).cxx_destruct;
- (id)build;
- (void)addPropertyWithValue:(id)arg1 forKey:(id)arg2;
- (id)init;

@end

@interface TAGExpandedRule : NSObject <NSCopying>
{
    NSArray *_positivePredicates;
    NSArray *_negativePredicates;
    NSArray *_addTags;
    NSArray *_removeTags;
    NSArray *_addMacros;
    NSArray *_removeMacros;
}

+ (id)builder;
@property(readonly, retain, nonatomic) NSArray *removeMacros; // @synthesize removeMacros=_removeMacros;
@property(readonly, retain, nonatomic) NSArray *addMacros; // @synthesize addMacros=_addMacros;
@property(readonly, retain, nonatomic) NSArray *removeTags; // @synthesize removeTags=_removeTags;
@property(readonly, retain, nonatomic) NSArray *addTags; // @synthesize addTags=_addTags;
@property(readonly, retain, nonatomic) NSArray *negativePredicates; // @synthesize negativePredicates=_negativePredicates;
@property(readonly, retain, nonatomic) NSArray *positivePredicates; // @synthesize positivePredicates=_positivePredicates;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)description;
- (id)initWithPositivePredicates:(id)arg1 negativePredicates:(id)arg2 addTags:(id)arg3 removeTags:(id)arg4 addMacros:(id)arg5 removeMacros:(id)arg6;

@end

@interface TAGExpandedRuleBuilder : NSObject
{
    NSMutableArray *_positivePredicates;
    NSMutableArray *_negativePredicates;
    NSMutableArray *_addTags;
    NSMutableArray *_removeTags;
    NSMutableArray *_addMacros;
    NSMutableArray *_removeMacros;
}

@property(retain, nonatomic) NSMutableArray *removeMacros; // @synthesize removeMacros=_removeMacros;
@property(retain, nonatomic) NSMutableArray *addMacros; // @synthesize addMacros=_addMacros;
@property(retain, nonatomic) NSMutableArray *removeTags; // @synthesize removeTags=_removeTags;
@property(retain, nonatomic) NSMutableArray *addTags; // @synthesize addTags=_addTags;
@property(retain, nonatomic) NSMutableArray *negativePredicates; // @synthesize negativePredicates=_negativePredicates;
@property(retain, nonatomic) NSMutableArray *positivePredicates; // @synthesize positivePredicates=_positivePredicates;
- (void).cxx_destruct;
- (id)build;
- (void)addRemoveMacro:(id)arg1;
- (void)addAddMacro:(id)arg1;
- (void)addRemoveTag:(id)arg1;
- (void)addAddTag:(id)arg1;
- (void)addNegativePredicate:(id)arg1;
- (void)addPositivePredicate:(id)arg1;
- (id)init;

@end

@interface TAGExpandedResource : NSObject
{
    int _resourceFormatVersion;
    NSArray *_rules;
    NSString *_version;
    NSDictionary *_macros;
}

+ (id)builder;
@property(readonly, retain, nonatomic) NSDictionary *macros; // @synthesize macros=_macros;
@property(readonly, nonatomic) int resourceFormatVersion; // @synthesize resourceFormatVersion=_resourceFormatVersion;
@property(readonly, copy, nonatomic) NSString *version; // @synthesize version=_version;
@property(readonly, retain, nonatomic) NSArray *rules; // @synthesize rules=_rules;
- (void).cxx_destruct;
- (id)description;
- (id)allMacros;
- (id)macrosByName:(id)arg1;
- (id)initWithRules:(id)arg1 macros:(id)arg2 version:(id)arg3 resourceFormatVersion:(int)arg4;

@end

@interface TAGExpandedResourceBuilder : NSObject
{
    int _resourceFormatVersion;
    NSString *_version;
    NSMutableArray *_rules;
    NSMutableDictionary *_macros;
}

@property(retain, nonatomic) NSMutableDictionary *macros; // @synthesize macros=_macros;
@property(retain, nonatomic) NSMutableArray *rules; // @synthesize rules=_rules;
@property(nonatomic) int resourceFormatVersion; // @synthesize resourceFormatVersion=_resourceFormatVersion;
@property(copy, nonatomic) NSString *version; // @synthesize version=_version;
- (void).cxx_destruct;
- (id)build;
- (void)addMacro:(id)arg1;
- (void)addRule:(id)arg1;
- (id)init;

@end

@interface TAGResourceUtil : NSObject
{
}

+ (id)expandRule:(id)arg1 tags:(id)arg2 macros:(id)arg3 predicates:(id)arg4;
+ (id)expandFunctionCall:(id)arg1 resource:(id)arg2 expandedValues:(id)arg3 index:(unsigned long long)arg4;
+ (id)objectWithNSArrayBoundsCheck:(id)arg1 index:(unsigned long long)arg2 listName:(id)arg3;
+ (id)objectWithTAGPBArrayBoundsCheck:(id)arg1 index:(unsigned long long)arg2 listName:(id)arg3;
+ (void)logAndThrow:(id)arg1;
+ (id)servingValue:(id)arg1;
+ (id)expandIthValue:(unsigned long long)arg1 resource:(id)arg2 expandedValues:(id)arg3 pendingExpansions:(id)arg4;
+ (id)valueBuilderBasedOnValue:(id)arg1;
+ (id)expandResource:(id)arg1;

@end

@interface TAGCachedMacro : NSObject
{
    TAGPValueAndStatic *_valueAndStatic;
    TAGPValue *_pushAfterEvaluate;
}

@property(retain, nonatomic) TAGPValue *pushAfterEvaluate; // @synthesize pushAfterEvaluate=_pushAfterEvaluate;
@property(retain, nonatomic) TAGPValueAndStatic *valueAndStatic; // @synthesize valueAndStatic=_valueAndStatic;
- (void).cxx_destruct;
- (id)initWithValueAndStatic:(id)arg1 pushAfterEvaluate:(id)arg2;

@end

@interface TAGMacroInfo : NSObject
{
    NSMutableSet *_rules;
    NSMutableDictionary *_addMacros;
    NSMutableDictionary *_removeMacros;
    TAGExpandedFunctionCall *_defaultFunctionCall;
}

@property(retain, nonatomic) TAGExpandedFunctionCall *defaultFunctionCall; // @synthesize defaultFunctionCall=_defaultFunctionCall;
@property(retain, nonatomic) NSMutableDictionary *removeMacros; // @synthesize removeMacros=_removeMacros;
@property(retain, nonatomic) NSMutableDictionary *addMacros; // @synthesize addMacros=_addMacros;
@property(retain, nonatomic) NSMutableSet *rules; // @synthesize rules=_rules;
- (void).cxx_destruct;
- (void)addRemoveMacro:(id)arg1 forRule:(id)arg2;
- (void)addAddMacro:(id)arg1 forRule:(id)arg2;
- (id)init;

@end

@interface TAGAddRemoveMacrosPopulator : NSObject <TAGAddRemoveSetPopulator>
{
    NSDictionary *_addMacros;
    NSDictionary *_removeMacros;
}

@property(retain, nonatomic) NSDictionary *removeMacros; // @synthesize removeMacros=_removeMacros;
@property(retain, nonatomic) NSDictionary *addMacros; // @synthesize addMacros=_addMacros;
- (void).cxx_destruct;
- (void)rulePassed:(id)arg1 add:(id)arg2 remove:(id)arg3;
- (id)initWithAddMacros:(id)arg1 removeMacros:(id)arg2;

@end

@interface TAGAddRemoveTagsPopulator : NSObject <TAGAddRemoveSetPopulator>
{
}

- (void)rulePassed:(id)arg1 add:(id)arg2 remove:(id)arg3;

@end

@interface TAGRuntime : NSObject
{
    TAGExpandedResource *_resource;
    NSString *_currentEventName;
    NSMutableDictionary *_trackingTagMap;
    NSMutableDictionary *_predicateMap;
    NSMutableDictionary *_macroMap;
    NSCache *_functionCallCache;
    NSCache *_macroEvaluationCache;
    NSSet *_rules;
    NSMutableDictionary *_macroLookup;
    TAGDataLayer *_dataLayer;
}

+ (void)addFunctionImplToDict:(id)arg1 functionCallImpl:(id)arg2;
+ (id)functionNameFromFunctionCall:(id)arg1;
+ (id)addOrGetMacroInfoForKey:(id)arg1 macroLookup:(id)arg2;
+ (id)runtimeWithResource:(id)arg1 dataLayer:(id)arg2 functionCallMacroEvaluator:(id)arg3 functionCallTagEvaluator:(id)arg4;
+ (void)initialize;
@property(readonly, retain, nonatomic) TAGDataLayer *dataLayer; // @synthesize dataLayer=_dataLayer;
@property(readonly, retain, nonatomic) NSMutableDictionary *macroLookup; // @synthesize macroLookup=_macroLookup;
@property(readonly, retain, nonatomic) NSSet *rules; // @synthesize rules=_rules;
@property(readonly, retain, nonatomic) NSCache *macroEvaluationCache; // @synthesize macroEvaluationCache=_macroEvaluationCache;
@property(readonly, retain, nonatomic) NSCache *functionCallCache; // @synthesize functionCallCache=_functionCallCache;
@property(readonly, retain, nonatomic) NSMutableDictionary *macroMap; // @synthesize macroMap=_macroMap;
@property(readonly, retain, nonatomic) NSMutableDictionary *predicateMap; // @synthesize predicateMap=_predicateMap;
@property(readonly, retain, nonatomic) NSMutableDictionary *trackingTagMap; // @synthesize trackingTagMap=_trackingTagMap;
@property(copy) NSString *currentEventName; // @synthesize currentEventName=_currentEventName;
@property(readonly, nonatomic) TAGExpandedResource *resource; // @synthesize resource=_resource;
- (void).cxx_destruct;
- (id)executeFunction:(id)arg1 implementationMap:(id)arg2 pendingMacroExpansions:(id)arg3;
- (id)expandMacrosForValue:(id)arg1 pendingMacroExpansions:(id)arg2;
- (id)expandTemplateValue:(id)arg1 pendingMacroExpansions:(id)arg2;
- (id)expandMacroReferenceValue:(id)arg1 pendingMacroExpansions:(id)arg2;
- (id)expandMapValue:(id)arg1 pendingMacroExpansions:(id)arg2;
- (id)expandListValue:(id)arg1 pendingMacroExpansions:(id)arg2;
- (void)pushUnevaluatedValueToDataLayer:(id)arg1 pendingMacroExpansions:(id)arg2;
- (id)evaluateMacroReferenceWithCycleDetection:(id)arg1 pendingMacroExpansions:(id)arg2;
- (id)evaluateMacroReference:(id)arg1;
- (id)evaluatePredicatesInRule:(id)arg1 pendingMacroExpansions:(id)arg2;
- (id)evaluatePredicate:(id)arg1 pendingMacroExpansions:(id)arg2;
- (void)addPredicate:(id)arg1;
- (void)addTrackingTag:(id)arg1;
- (void)addMacro:(id)arg1;
- (id)calculateGenericToRunForRules:(id)arg1 pendingMacroExpansions:(id)arg2 populator:(id)arg3;
- (id)calculateTagsToRunForRules:(id)arg1;
- (id)calculateMacrosToRunForRules:(id)arg1 macroName:(id)arg2 addMacros:(id)arg3 removeMacros:(id)arg4 pendingMacroExpansions:(id)arg5;
- (void)evaluateTags:(id)arg1;
- (void)setSupplementals:(id)arg1;
- (id)initWithResource:(id)arg1 dataLayer:(id)arg2 functionCallMacroEvaluator:(id)arg3 functionCallTagEvaluator:(id)arg4;

@end

@interface TAGSerialization : NSObject
{
}

+ (id)deserializedObjectToNSObject:(id)arg1;
+ (id)expandedResourceFromDeserializedObject:(id)arg1;
+ (id)deserializedObjectToValue:(id)arg1;
+ (id)expandResourceFromData:(id)arg1;
+ (void)initialize;

@end

@interface TAGDistinctZero : NSNumber
{
}

+ (id)distinctZero;
+ (void)initialize;
- (id)descriptionWithLocale:(id)arg1;
- (_Bool)isEqualToNumber:(id)arg1;
- (long long)compare:(id)arg1;
- (id)stringValue;
- (unsigned long long)unsignedIntegerValue;
- (long long)integerValue;
- (_Bool)boolValue;
- (double)doubleValue;
- (float)floatValue;
- (unsigned long long)unsignedLongLongValue;
- (long long)longLongValue;
- (unsigned long long)unsignedLongValue;
- (long long)longValue;
- (unsigned int)unsignedIntValue;
- (int)intValue;
- (unsigned short)unsignedShortValue;
- (short)shortValue;
- (unsigned char)unsignedCharValue;
- (BOOL)charValue;
- (const char *)objCType;

@end

@interface TAGTypes : NSObject
{
}

+ (id)valueToObject:(id)arg1;
+ (id)numberWithString:(id)arg1;
+ (id)parseBoolean:(id)arg1;
+ (id)parseDouble:(id)arg1;
+ (id)parseInt64:(id)arg1;
+ (id)parseNumber:(id)arg1;
+ (long long)getInt64:(id)arg1;
+ (_Bool)isInt64ableNumber:(id)arg1;
+ (double)getDouble:(id)arg1;
+ (_Bool)isDoubleableNumber:(id)arg1;
+ (id)templateToValue:(id)arg1;
+ (id)macroReferenceToValue:(id)arg1 escapings:(id)arg2;
+ (id)macroReferenceToValue:(id)arg1;
+ (id)functionIdToValue:(id)arg1;
+ (id)objectToValue:(id)arg1;
+ (id)valueToBoolean:(id)arg1;
+ (id)valueToDouble:(id)arg1;
+ (id)valueToInt64:(id)arg1;
+ (id)valueToNumber:(id)arg1;
+ (id)valueToString:(id)arg1;
+ (id)objectToBoolean:(id)arg1;
+ (id)objectToDouble:(id)arg1;
+ (id)objectToInt64:(id)arg1;
+ (id)objectToNumber:(id)arg1;
+ (id)objectToString:(id)arg1;
+ (id)defaultValue;
+ (id)defaultMap;
+ (id)defaultList;
+ (id)defaultBoolean;
+ (id)defaultString;
+ (id)defaultNumber;
+ (id)defaultDouble;
+ (id)defaultInt64;
+ (id)defaultObject;
+ (void)initialize;

@end

@interface TAGValueEscapeUtil : NSObject
{
}

+ (_Bool)isValidStringType:(id)arg1;
+ (id)escapeUri:(id)arg1;
+ (id)urlDecode:(id)arg1;
+ (id)urlEncode:(id)arg1;
+ (id)applyEscaping:(int)arg1 toValue:(id)arg2;
+ (id)applyEscapings:(id)arg1 toValue:(id)arg2;

@end

@interface TAGAdIdAccess : NSObject <TAGAdIdAccess>
{
}

+ (_Bool)retrieveTrackingFlag;
+ (id)retrieveId;
+ (void)load;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TAGAutoEventDataLayerAdapter : NSObject
{
}

+ (id)dictionaryForViewController:(id)arg1 forEvent:(id)arg2;

@end

@interface TAGAdvertiserId : TAGFunctionCallImplementation
{
}

+ (id)functionId;
- (id)rawAdvertiserId;
- (id)evaluate:(id)arg1;
- (_Bool)isCacheable;
- (id)init;

@end

@interface TAGAdvertiserIdFixed : TAGAdvertiserId
{
}

+ (id)functionId;
- (id)init;

@end

@interface TAGAdvertisingTrackingEnabledMacro : TAGFunctionCallImplementation
{
}

+ (id)functionId;
- (_Bool)advertisingTrackingEnabled;
- (id)evaluate:(id)arg1;
- (_Bool)isCacheable;
- (id)init;

@end

@interface TAGAdwordsClickReferrer : TAGFunctionCallImplementation
{
}

+ (id)conversionIdKey;
+ (id)componentKey;
+ (id)functionId;
- (id)evaluate:(id)arg1;
- (_Bool)isCacheable;
- (id)init;

@end

@interface TAGAppId : TAGFunctionCallImplementation
{
}

+ (id)functionId;
- (id)evaluate:(id)arg1;
- (_Bool)isCacheable;
- (id)init;

@end

@interface TAGAppName : TAGFunctionCallImplementation
{
}

+ (id)infoDictionary;
+ (id)functionId;
- (id)evaluate:(id)arg1;
- (_Bool)isCacheable;
- (id)init;

@end

@interface TAGAppVersion : TAGFunctionCallImplementation
{
}

+ (id)infoDictionary;
+ (id)functionId;
- (id)evaluate:(id)arg1;
- (_Bool)isCacheable;
- (id)init;

@end

@interface TAGConstantMacro : TAGFunctionCallImplementation
{
}

+ (id)valueKey;
+ (id)functionId;
- (id)evaluate:(id)arg1;
- (_Bool)isCacheable;
- (id)init;

@end

@interface TAGContainerVersionMacro : TAGFunctionCallImplementation
{
    NSString *_version;
}

+ (id)functionId;
@property(readonly) NSString *version; // @synthesize version=_version;
- (void).cxx_destruct;
- (id)evaluate:(id)arg1;
- (_Bool)isCacheable;
- (id)initWithVersion:(id)arg1;

@end

@interface TAGDataLayerMacro : TAGFunctionCallImplementation
{
    TAGDataLayer *_dataLayer;
}

+ (id)defaultValueKey;
+ (id)nameKey;
+ (id)functionId;
@property(readonly) TAGDataLayer *dataLayer; // @synthesize dataLayer=_dataLayer;
- (void).cxx_destruct;
- (id)evaluate:(id)arg1;
- (_Bool)isCacheable;
- (id)initWithDataLayer:(id)arg1;

@end

@interface TAGDeviceName : TAGFunctionCallImplementation
{
}

+ (id)functionId;
- (id)evaluate:(id)arg1;
- (_Bool)isCacheable;
- (id)init;

@end

@interface TAGEncode : TAGFunctionCallImplementation
{
}

+ (id)outputFormatKey;
+ (id)inputFormatKey;
+ (id)noPaddingKey;
+ (id)arg0Key;
+ (id)functionId;
- (id)evaluate:(id)arg1;
- (_Bool)isCacheable;
- (id)init;

@end

@interface TAGEventMacro : TAGFunctionCallImplementation
{
    TAGRuntime *_runtime;
}

+ (id)functionId;
@property(readonly) __weak TAGRuntime *runtime; // @synthesize runtime=_runtime;
- (void).cxx_destruct;
- (id)evaluate:(id)arg1;
- (_Bool)isCacheable;
- (id)initWithRuntime:(id)arg1;

@end

@interface TAGGtmVersionMacro : TAGFunctionCallImplementation
{
}

+ (id)functionId;
- (id)evaluate:(id)arg1;
- (_Bool)isCacheable;
- (id)init;

@end

@interface TAGMD5HashAlgorithm : NSObject <TAGHashAlgorithm>
{
}

- (id)hashData:(id)arg1;

@end

@interface TAGSha1HashAlgorithm : NSObject <TAGHashAlgorithm>
{
}

- (id)hashData:(id)arg1;

@end

@interface TAGSha256HashAlgorithm : NSObject <TAGHashAlgorithm>
{
}

- (id)hashData:(id)arg1;

@end

@interface TAGSha384HashAlgorithm : NSObject <TAGHashAlgorithm>
{
}

- (id)hashData:(id)arg1;

@end

@interface TAGSha512HashAlgorithm : NSObject <TAGHashAlgorithm>
{
}

- (id)hashData:(id)arg1;

@end

@interface TAGHashMacro : TAGFunctionCallImplementation
{
    NSDictionary *_hashAlgorithms;
}

+ (id)functionId;
@property(retain, nonatomic) NSDictionary *hashAlgorithms; // @synthesize hashAlgorithms=_hashAlgorithms;
- (void).cxx_destruct;
- (id)hash:(id)arg1 algorithm:(id)arg2;
- (id)evaluate:(id)arg1;
- (_Bool)isCacheable;
- (id)init;

@end

@interface TAGJoinerMacro : TAGFunctionCallImplementation
{
}

+ (id)functionId;
- (id)escape:(id)arg1 escapeType:(int)arg2 charsToBackslashEscape:(id)arg3;
- (void)addTo:(id)arg1 charsInString:(id)arg2;
- (id)evaluate:(id)arg1;
- (_Bool)isCacheable;
- (id)init;

@end

@interface TAGLanguage : TAGFunctionCallImplementation
{
}

+ (id)functionId;
- (id)evaluate:(id)arg1;
- (id)preferredLanguages;
- (_Bool)isCacheable;
- (id)init;

@end

@interface TAGMobileAdwordsUniqueIdMacro : TAGFunctionCallImplementation
{
}

+ (id)functionId;
- (id)rawAdvertiserId;
- (id)evaluate:(id)arg1;
- (_Bool)isCacheable;
- (id)init;

@end

@interface TAGOsVersion : TAGFunctionCallImplementation
{
}

+ (id)functionId;
- (id)evaluate:(id)arg1;
- (_Bool)isCacheable;
- (id)init;

@end

@interface TAGPlatform : TAGFunctionCallImplementation
{
}

+ (id)functionId;
- (id)evaluate:(id)arg1;
- (_Bool)isCacheable;
- (id)init;

@end

@interface TAGRandom : TAGFunctionCallImplementation
{
}

+ (id)functionId;
- (id)evaluate:(id)arg1;
- (_Bool)isCacheable;
- (id)init;

@end

@interface TAGRegexGroup : TAGFunctionCallImplementation
{
}

+ (id)groupKey;
+ (id)ignoreCaseKey;
+ (id)regexKey;
+ (id)toMatchKey;
+ (id)functionId;
- (id)evaluate:(id)arg1;
- (_Bool)isCacheable;
- (id)init;

@end

@interface TAGResolution : TAGFunctionCallImplementation
{
}

+ (id)functionId;
- (id)evaluate:(id)arg1;
- (_Bool)isCacheable;
- (id)init;

@end

@interface TAGRuntimeVersion : TAGFunctionCallImplementation
{
}

+ (long long)versionNumber;
+ (id)functionId;
- (id)evaluate:(id)arg1;
- (_Bool)isCacheable;
- (id)init;

@end

@interface TAGSdkVersion : TAGFunctionCallImplementation
{
}

+ (id)functionId;
- (id)evaluate:(id)arg1;
- (_Bool)isCacheable;
- (id)init;

@end

@interface TAGTime : TAGFunctionCallImplementation
{
}

+ (id)functionId;
- (id)evaluate:(id)arg1;
- (_Bool)isCacheable;
- (id)init;

@end

@interface TAGContains : TAGStringPredicate
{
}

+ (id)functionId;
- (_Bool)evaluateWithArg0:(id)arg1 arg1:(id)arg2 parameters:(id)arg3;
- (id)init;

@end

@interface TAGEndsWith : TAGStringPredicate
{
}

+ (id)functionId;
- (_Bool)evaluateWithArg0:(id)arg1 arg1:(id)arg2 parameters:(id)arg3;
- (id)init;

@end

@interface TAGEquals : TAGStringPredicate
{
}

+ (id)functionId;
- (_Bool)evaluateWithArg0:(id)arg1 arg1:(id)arg2 parameters:(id)arg3;
- (id)init;

@end

@interface TAGGreaterEquals : TAGNumberPredicate
{
}

+ (id)functionId;
- (_Bool)evaluateWithArg0:(id)arg1 arg1:(id)arg2 parameters:(id)arg3;
- (id)init;

@end

@interface TAGGreaterThan : TAGNumberPredicate
{
}

+ (id)functionId;
- (_Bool)evaluateWithArg0:(id)arg1 arg1:(id)arg2 parameters:(id)arg3;
- (id)init;

@end

@interface TAGLessEquals : TAGNumberPredicate
{
}

+ (id)functionId;
- (_Bool)evaluateWithArg0:(id)arg1 arg1:(id)arg2 parameters:(id)arg3;
- (id)init;

@end

@interface TAGLessThan : TAGNumberPredicate
{
}

+ (id)functionId;
- (_Bool)evaluateWithArg0:(id)arg1 arg1:(id)arg2 parameters:(id)arg3;
- (id)init;

@end

@interface TAGNumberPredicate : TAGPredicate
{
}

- (_Bool)evaluateWithArg0:(id)arg1 arg1:(id)arg2 parameters:(id)arg3;
- (_Bool)evaluateNoDefaultValues:(id)arg1 arg1:(id)arg2 parameters:(id)arg3;

@end

@interface TAGPredicate : TAGFunctionCallImplementation
{
}

+ (id)arg1Key;
+ (id)arg0Key;
- (_Bool)evaluateNoDefaultValues:(id)arg1 arg1:(id)arg2 parameters:(id)arg3;
- (_Bool)isCacheable;
- (id)evaluate:(id)arg1;
- (id)initWithFunctionId:(id)arg1;

@end

@interface TAGRegex : TAGStringPredicate
{
}

+ (id)ignoreCaseKey;
+ (id)functionId;
- (_Bool)evaluateWithArg0:(id)arg1 arg1:(id)arg2 parameters:(id)arg3;
- (id)init;

@end

@interface TAGStartsWith : TAGStringPredicate
{
}

+ (id)functionId;
- (_Bool)evaluateWithArg0:(id)arg1 arg1:(id)arg2 parameters:(id)arg3;
- (id)init;

@end

@interface TAGStringPredicate : TAGPredicate
{
}

- (_Bool)evaluateWithArg0:(id)arg1 arg1:(id)arg2 parameters:(id)arg3;
- (_Bool)evaluateNoDefaultValues:(id)arg1 arg1:(id)arg2 parameters:(id)arg3;
- (id)initWithFunctionId:(id)arg1;

@end

@interface TAGArbitraryPixel : TAGTrackingTag
{
}

+ (id)urlKey;
+ (id)functionId;
- (_Bool)idInCache:(id)arg1;
- (void)clearCache;
- (_Bool)idInPlist:(id)arg1;
- (void)cacheUnrepeatableId:(id)arg1;
- (_Bool)idProcessed:(id)arg1;
- (id)getHitSender;
- (id)getQueryParametersStringFromArray:(id)arg1;
- (void)addDictionary:(id)arg1 toArray:(id)arg2;
- (void)evaluateTrackingTag:(id)arg1;
- (id)init;

@end

@interface TAGDataLayerWrite : TAGTrackingTag
{
    TAGDataLayer *_dataLayer;
}

+ (id)valueKey;
+ (id)functionId;
@property(retain, nonatomic) TAGDataLayer *dataLayer; // @synthesize dataLayer=_dataLayer;
- (void).cxx_destruct;
- (void)pushToDataLayer:(id)arg1;
- (void)clearPersistent:(id)arg1;
- (void)evaluateTrackingTag:(id)arg1;
- (id)initWithDataLayer:(id)arg1;

@end

@interface TAGTrackingTag : TAGFunctionCallImplementation
{
}

- (void)evaluateTrackingTag:(id)arg1;
- (id)evaluate:(id)arg1;
- (_Bool)isCacheable;

@end

@interface GAILoggerImpl : NSObject <GAILogger>
{
}

- (unsigned long long)gaLogLevelFromGtmLogLevel:(int)arg1;
@property(nonatomic) unsigned long long logLevel;
- (void)error:(id)arg1;
- (void)warning:(id)arg1;
- (void)verbose:(id)arg1;
- (void)info:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TAGUniversalAnalytics : TAGTrackingTag
{
    GAILoggerImpl *_logger;
    TAGDataLayer *_dataLayer;
    NSSet *_turnOffAnonymizeIpValues;
    NSNumberFormatter *_numberFormatter;
    NSDictionary *_defaultTransactionMap;
    NSDictionary *_defaultItemMap;
    NSRegularExpression *_productDimensionRegex;
    NSRegularExpression *_productMetricRegex;
}

+ (id)functionId;
@property(retain, nonatomic) NSRegularExpression *productMetricRegex; // @synthesize productMetricRegex=_productMetricRegex;
@property(retain, nonatomic) NSRegularExpression *productDimensionRegex; // @synthesize productDimensionRegex=_productDimensionRegex;
@property(retain, nonatomic) NSDictionary *defaultItemMap; // @synthesize defaultItemMap=_defaultItemMap;
@property(retain, nonatomic) NSDictionary *defaultTransactionMap; // @synthesize defaultTransactionMap=_defaultTransactionMap;
@property(retain, nonatomic) NSNumberFormatter *numberFormatter; // @synthesize numberFormatter=_numberFormatter;
@property(retain, nonatomic) NSSet *turnOffAnonymizeIpValues; // @synthesize turnOffAnonymizeIpValues=_turnOffAnonymizeIpValues;
@property(retain, nonatomic) TAGDataLayer *dataLayer; // @synthesize dataLayer=_dataLayer;
@property(retain, nonatomic) GAILoggerImpl *logger; // @synthesize logger=_logger;
- (void).cxx_destruct;
- (void)sendEnhancedEcommerce:(id)arg1 withTracker:(id)arg2;
- (id)NSNumberFromObject:(id)arg1;
- (id)actionDataFromDataLayerDictionary:(id)arg1;
- (id)productFromDataLayerDictionary:(id)arg1;
- (id)promotionFromDataLayerDictionary:(id)arg1;
- (id)transactionItemFieldsForTag:(id)arg1;
- (id)transactionFieldsForTag:(id)arg1;
- (void)sendTransaction:(id)arg1 withTracker:(id)arg2;
- (void)addParam:(id)arg1 value:(id)arg2 toParams:(id)arg3;
- (id)getArrayOfDictionariesFromObject:(id)arg1;
- (void)setLoggerIfNecessary;
- (void)closeTracker:(id)arg1;
- (id)openTracker;
- (id)gaFieldsWithAnalyticsFields:(id)arg1;
- (id)valueToStringMap:(id)arg1;
- (id)dataLayerString:(id)arg1;
- (void)evaluateTrackingTag:(id)arg1;
- (_Bool)checkBooleanPropertyForTag:(id)arg1 key:(id)arg2;
- (id)initWithDataLayer:(id)arg1;

@end

@interface TAGActualAdIdAccess : NSObject <TAGAdIdAccess>
{
}

+ (_Bool)retrieveTrackingFlag;
+ (id)retrieveId;
+ (void)load;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PodsDummy_Pods_TGLA7 : NSObject
{
}

@end

@interface UIDevice (ModelVersion)
- (id)modelVersion;
@end

@interface NSString (SSURLEncoding)
@property(readonly) NSString *URLEncodedString;
@end

@interface AppDelegate (notification)
+ (void)load;
- (void)dealloc;
@property(retain, nonatomic) NSNumber *coldstart;
@property(retain, nonatomic) NSDictionary *launchNotification;
- (void)application:(id)arg1 handleActionWithIdentifier:(id)arg2 forRemoteNotification:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)pushPluginOnApplicationDidBecomeActive:(id)arg1;
- (_Bool)userHasRemoteNotificationsEnabled;
- (void)application:(id)arg1 didReceiveRemoteNotification:(id)arg2 fetchCompletionHandler:(CDUnknownBlockType)arg3;
- (void)application:(id)arg1 didReceiveRemoteNotification:(id)arg2;
- (void)application:(id)arg1 didFailToRegisterForRemoteNotificationsWithError:(id)arg2;
- (void)application:(id)arg1 didRegisterForRemoteNotificationsWithDeviceToken:(id)arg2;
- (void)createNotificationChecker:(id)arg1;
- (id)pushPluginSwizzledInit;
- (id)getCommandInstance:(id)arg1;
@end

@interface CDVViewController (SplashScreen)
+ (void)load;
@property(readonly, nonatomic) _Bool shouldAutorotateDefaultValue;
- (_Bool)splash_shouldAutorotate;
@property(nonatomic) _Bool enabledAutorotation; // @dynamic enabledAutorotation;
@end

@interface NSFileHandle (GTMFileHandleLogWriter) <GTMLogWriter>
+ (id)fileHandleForLoggingAtPath:(id)arg1 mode:(unsigned short)arg2;
- (void)logMessage:(id)arg1 level:(int)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@end

@interface NSArray (GTMArrayCompositeLogWriter) <GTMLogWriter>
- (void)logMessage:(id)arg1 level:(int)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@end

@interface NSData (GTMZlibAdditionsPrivate)
+ (id)gtm_dataByInflatingBytes:(const void *)arg1 length:(unsigned long long)arg2 isRawData:(_Bool)arg3 error:(id *)arg4;
+ (id)gtm_dataByCompressingBytes:(const void *)arg1 length:(unsigned long long)arg2 compressionLevel:(int)arg3 mode:(int)arg4 error:(id *)arg5;
@end

@interface NSData (GTMZLibAdditions)
+ (id)gtm_dataByRawInflatingData:(id)arg1 error:(id *)arg2;
+ (id)gtm_dataByRawInflatingData:(id)arg1;
+ (id)gtm_dataByRawInflatingBytes:(const void *)arg1 length:(unsigned long long)arg2 error:(id *)arg3;
+ (id)gtm_dataByRawInflatingBytes:(const void *)arg1 length:(unsigned long long)arg2;
+ (id)gtm_dataByRawDeflatingData:(id)arg1 compressionLevel:(int)arg2 error:(id *)arg3;
+ (id)gtm_dataByRawDeflatingData:(id)arg1 compressionLevel:(int)arg2;
+ (id)gtm_dataByRawDeflatingBytes:(const void *)arg1 length:(unsigned long long)arg2 compressionLevel:(int)arg3 error:(id *)arg4;
+ (id)gtm_dataByRawDeflatingBytes:(const void *)arg1 length:(unsigned long long)arg2 compressionLevel:(int)arg3;
+ (id)gtm_dataByRawDeflatingData:(id)arg1 error:(id *)arg2;
+ (id)gtm_dataByRawDeflatingData:(id)arg1;
+ (id)gtm_dataByRawDeflatingBytes:(const void *)arg1 length:(unsigned long long)arg2 error:(id *)arg3;
+ (id)gtm_dataByRawDeflatingBytes:(const void *)arg1 length:(unsigned long long)arg2;
+ (id)gtm_dataByInflatingData:(id)arg1 error:(id *)arg2;
+ (id)gtm_dataByInflatingData:(id)arg1;
+ (id)gtm_dataByInflatingBytes:(const void *)arg1 length:(unsigned long long)arg2 error:(id *)arg3;
+ (id)gtm_dataByInflatingBytes:(const void *)arg1 length:(unsigned long long)arg2;
+ (id)gtm_dataByDeflatingData:(id)arg1 compressionLevel:(int)arg2 error:(id *)arg3;
+ (id)gtm_dataByDeflatingData:(id)arg1 compressionLevel:(int)arg2;
+ (id)gtm_dataByDeflatingBytes:(const void *)arg1 length:(unsigned long long)arg2 compressionLevel:(int)arg3 error:(id *)arg4;
+ (id)gtm_dataByDeflatingBytes:(const void *)arg1 length:(unsigned long long)arg2 compressionLevel:(int)arg3;
+ (id)gtm_dataByDeflatingData:(id)arg1 error:(id *)arg2;
+ (id)gtm_dataByDeflatingData:(id)arg1;
+ (id)gtm_dataByDeflatingBytes:(const void *)arg1 length:(unsigned long long)arg2 error:(id *)arg3;
+ (id)gtm_dataByDeflatingBytes:(const void *)arg1 length:(unsigned long long)arg2;
+ (id)gtm_dataByGzippingData:(id)arg1 compressionLevel:(int)arg2 error:(id *)arg3;
+ (id)gtm_dataByGzippingData:(id)arg1 compressionLevel:(int)arg2;
+ (id)gtm_dataByGzippingBytes:(const void *)arg1 length:(unsigned long long)arg2 compressionLevel:(int)arg3 error:(id *)arg4;
+ (id)gtm_dataByGzippingBytes:(const void *)arg1 length:(unsigned long long)arg2 compressionLevel:(int)arg3;
+ (id)gtm_dataByGzippingData:(id)arg1 error:(id *)arg2;
+ (id)gtm_dataByGzippingData:(id)arg1;
+ (id)gtm_dataByGzippingBytes:(const void *)arg1 length:(unsigned long long)arg2 error:(id *)arg3;
+ (id)gtm_dataByGzippingBytes:(const void *)arg1 length:(unsigned long long)arg2;
@end

@interface UIViewController (FIRAScreenClassName)
+ (void)load;
@property(retain, nonatomic) FIRAScreen *firaScreen;
- (void)fira_viewDidDisappear:(_Bool)arg1;
- (void)fira_viewDidAppear:(_Bool)arg1;
@end

@interface UIWindow (FIRAScreenClassName)
@property(retain, nonatomic) NSPointerArray *firaStack;
@end

@interface NSError (FIRAAdditions)
+ (id)fira_errorWithCode:(long long)arg1 description:(id)arg2 monitorContext:(id)arg3;
+ (id)fira_errorWithCode:(long long)arg1 description:(id)arg2;
@end

@interface NSData (MD5)
- (long long)fira_64LeastSignificantBits;
- (long long)fira_64LSBMD5;
- (id)fira_MD5Data;
@end

@interface NSDictionary (FIRNSDictionaryQuery)
+ (id)fira_dictionaryWithHttpArgumentsString:(id)arg1;
- (id)fira_queryString;
@end

@interface NSString (FIRD5Additions)
- (id)fira_MD5String;
@end

@interface NSString (URLArguments)
- (id)fira_stringByUnescapingFromURLArgument;
@end

@interface NSString (FIRAUTF32)
- (void)fira_getUTF32Bytes:(void *)arg1 maxBytes:(unsigned long long)arg2;
- (unsigned long long)fira_UTF32Length;
@end

@interface FIRInstanceID (FIRApp)
+ (void)sendLogsForFirebaseApp:(id)arg1 withError:(id)arg2;
+ (void)exitWithReason:(id)arg1 forFirebaseApp:(id)arg2;
+ (id)configureErrorWithReason:(id)arg1;
+ (void)didReceiveConfigureSDKNotification:(id)arg1;
+ (void)load;
- (void)configureInstanceIDWithOptions:(id)arg1 app:(id)arg2;
@end

@interface NSError (FIRInstanceID)
+ (id)FIRInstanceIDErrorMissingCheckin;
+ (id)errorWithFIRInstanceIDErrorCode:(unsigned long long)arg1 userInfo:(id)arg2;
+ (id)errorWithFIRInstanceIDErrorCode:(unsigned long long)arg1;
@property(readonly, nonatomic) unsigned long long instanceIDErrorCode;
@end

@interface NSDictionary (FIRMessaging)
- (id)fcm_trimNonStringValues;
- (_Bool)fcm_hasNonStringKeysOrValues;
- (id)fcm_string;
@end

@interface NSError (FIRMessaging)
+ (id)fcm_errorWithCode:(long long)arg1 userInfo:(id)arg2;
+ (id)errorWithFCMErrorCode:(unsigned long long)arg1;
@property(readonly, nonatomic) unsigned long long fcmErrorCode;
@end

@interface FIRMessaging (FIRApp)
+ (void)didReceiveConfigureSDKNotification:(id)arg1;
+ (void)load;
- (void)exitApp:(id)arg1 withError:(id)arg2;
- (void)configureMessaging:(id)arg1;
@end

@interface NSDictionary (CordovaPreferences)
- (double)cordovaFloatSettingForKey:(id)arg1 defaultValue:(double)arg2;
- (_Bool)cordovaBoolSettingForKey:(id)arg1 defaultValue:(_Bool)arg2;
- (id)cordovaSettingForKey:(id)arg1;
@end

@interface NSMutableDictionary (CordovaPreferences)
- (void)setCordovaSetting:(id)arg1 forKey:(id)arg2;
@end

@interface NSArray (CDVJSONSerializingPrivate)
- (id)cdv_JSONString;
@end

@interface NSDictionary (CDVJSONSerializingPrivate)
- (id)cdv_JSONString;
@end

@interface NSString (CDVJSONSerializingPrivate)
- (id)cdv_JSONFragment;
- (id)cdv_JSONObject;
@end

@interface NSMutableArray (QueueAdditions)
- (void)cdv_enqueue:(id)arg1;
- (id)cdv_pop;
- (id)cdv_dequeue;
- (id)cdv_queueHead;
@end

@interface UIView (org_apache_cordova_UIView_Extension)
@property(nonatomic) __weak UIScrollView *scrollView; // @dynamic scrollView;
@end

@interface NSArray (GADJSONAdditions)
- (id)gad_JSONSafeArray;
- (id)gad_JSONStringPretty:(_Bool)arg1 error:(id *)arg2;
@end

@interface NSDictionary (GADJSONAdditions)
- (id)gad_JSONSafeDictionary;
- (id)gad_JSONStringPretty:(_Bool)arg1 error:(id *)arg2;
@end

@interface NSHTTPURLResponse (GADHeaderParser)
- (id)gad_dateFromHttpDateString:(id)arg1;
- (id)gad_expirationDate;
@end

@interface NSString (GADJSONAdditions)
- (id)gad_decodedJSONObjectError:(id *)arg1;
@end

@interface UIViewController (TAGAutoEventTracking)
+ (id)TAGdataLayer;
+ (void)setTAGDataLayer:(id)arg1;
+ (unsigned long long)TAGautoEventMask;
+ (void)setTAGAutoEventMask:(unsigned long long)arg1;
+ (void)load;
- (void)TAGManager_viewDidDisappear:(_Bool)arg1;
- (void)TAGManager_viewDidAppear:(_Bool)arg1;
@end

